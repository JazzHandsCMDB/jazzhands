
--
-- Copyright (c) 2010-2015 Todd Kover
-- All rights reserved.
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--      http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

--
-- Copyright (c) 2005-2010, Vonage Holdings Corp.
-- All rights reserved.
--
-- Redistribution and use in source and binary forms, with or without
-- modification, are permitted provided that the following conditions are met:
--     * Redistributions of source code must retain the above copyright
--       notice, this list of conditions and the following disclaimer.
--     * Redistributions in binary form must reproduce the above copyright
--       notice, this list of conditions and the following disclaimer in the
--       documentation and/or other materials provided with the distribution.
--
-- THIS SOFTWARE IS PROVIDED BY VONAGE HOLDINGS CORP. ''AS IS'' AND ANY
-- EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
-- WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
-- DISCLAIMED. IN NO EVENT SHALL VONAGE HOLDINGS CORP. BE LIABLE FOR ANY
-- DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
-- (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
-- LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
-- ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-- (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
--


--
-- $Id$
--

CREATE SEQUENCE SEEQ_SLOT_TYPE_ID;

CREATE SEQUENCE SEQ_ACCOUNT_AUTH
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_ACCOUNT_COLLECTION_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_ACCOUNT_ID;

CREATE SEQUENCE SEQ_ACCOUNT_REALM_ID;

CREATE SEQUENCE SEQ_ACCOUNT_TOKEN_ID;

CREATE SEQUENCE SEQ_APPAAL_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_APPAAL_INSTANCE_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_ASSET_ID;

CREATE SEQUENCE SEQ_AUTH_QUESTION_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_BADGE_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_BADGE_TYPE_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_CHASSIS_LOCATION_ID;

CREATE SEQUENCE SEQ_CIRCUIT_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_COMPANY_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_COMPONENT_ID;

CREATE SEQUENCE SEQ_COMPONENT_TYP_SLT_TMPLT_ID;

CREATE SEQUENCE SEQ_COMPONENT_TYPE_ID;

CREATE SEQUENCE SEQ_CONTRACT_ID;

CREATE SEQUENCE SEQ_DEPT_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_DEVICE_COLLECTION_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_DEVICE_COLLECTION_TYPE_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_DEVICE_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_DEVICE_POWER_CONNECTION_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_DEVICE_TYPE_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_DHCP_RANGE_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_DNS_CHANGE_RECORD_ID;

CREATE SEQUENCE SEQ_DNS_DOMAIN_COLLECTION;

CREATE SEQUENCE SEQ_DNS_DOMAIN_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_DNS_RECORD_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_EMPLOYEE_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_ENCAPSULATION_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_ENCRYPTION_KEY_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_IP_UNIVERSE_ID;

CREATE SEQUENCE SEQ_KLOGIN_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_KRB_REALM_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_LAYER1_CONNECTION_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_LAYER2_CONNECTION_ID;

CREATE SEQUENCE SEQ_LAYER2_ENCAPSULATION_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_LAYER2_NETWORK_ID;

CREATE SEQUENCE SEQ_LAYER3_NETWORK_ID;

CREATE SEQUENCE SEQ_LOGICAL_PORT_ID;

CREATE SEQUENCE SEQ_MLAG_PEERING_ID;

CREATE SEQUENCE SEQ_NETBLOCK_COLLECTION_ID;

CREATE SEQUENCE SEQ_NETBLOCK_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_NETWORK_INTERFACE_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_NETWORK_SERVICE_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_NOTE_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_OPERATING_SYSTEM_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_OPERATING_SYSTEM_SNAP;

CREATE SEQUENCE SEQ_PARTNER_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_PATCH_PANEL_CONNECTION_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_PERSON_CONTACT_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_PERSON_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_PERSON_IMAGE_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_PERSON_LOCATION_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_PERSON_PARKING_PASS_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_PHYSICAL_PORT_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_PRESON_VEHICLE_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_PROPERTY_COLLECTION_ID;

CREATE SEQUENCE SEQ_PROPERTY_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_PSEUDO_KLOGIN_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_RACK_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_RACK_LOCATION_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_SECONDARY_NETBLOCK_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_SERVICE_ENVIRONMENT_ID;

CREATE SEQUENCE SEQ_SLOT;

CREATE SEQUENCE SEQ_SMTP_AUTH_PASSWORD_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_SNMP_COMMSTR_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_SSH_KEY_ID;

CREATE SEQUENCE SEQ_STATIC_ROUTE_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_SUDO_DEFAULT_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_SW_PACKAGE_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_SW_PACKAGE_RELATION_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_SW_PACKAGE_RELEASE_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_SW_PACKAGE_REPOSITORY_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_SWITCH_PORT_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_TICKETING_SYSTEM_ID;

CREATE SEQUENCE SEQ_TOKEN_COLLECTION_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_TOKEN_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_UNIX_GID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_UNIX_UID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_VLAN_RANGE_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_VOE_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_VOE_SYMBOLIC_TRACK_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

CREATE SEQUENCE SEQ_X509_CERT_ID
	INCREMENT BY 1
	START WITH 1
	NOCYCLE
	NOCACHE
	NOORDER;

/***********************************************
 * Table: ACCOUNT
 ***********************************************/

CREATE TABLE ACCOUNT
(
	ACCOUNT_ID           NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	LOGIN                VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PERSON_ID            NUMBER(13,0) NOT NULL ,
	COMPANY_ID           NUMBER(13,0) NOT NULL ,
	IS_ENABLED           CHAR(1) NOT NULL ,
	ACCOUNT_REALM_ID     NUMBER NOT NULL ,
	ACCOUNT_STATUS       VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ACCOUNT_ROLE         VARCHAR2(50 BYTE) NOT NULL ,
	ACCOUNT_TYPE         VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN ACCOUNT.IS_ENABLED IS 'This column is trigger enforced to match what val_person_status says is the correct value for account_status';

CREATE UNIQUE INDEX PK_ACCOUNT_ID ON ACCOUNT
(ACCOUNT_ID   ASC);

ALTER TABLE ACCOUNT
	ADD CONSTRAINT  PK_ACCOUNT_ID PRIMARY KEY (ACCOUNT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ACCOUNT_ID  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_ACCT_ACCTID_REALM_ID ON ACCOUNT
(ACCOUNT_ID   ASC,ACCOUNT_REALM_ID   ASC);

ALTER TABLE ACCOUNT
ADD CONSTRAINT  AK_ACCT_ACCTID_REALM_ID UNIQUE (ACCOUNT_ID,ACCOUNT_REALM_ID);

CREATE UNIQUE INDEX AK_UQ_ACCOUNT_LGN_REALM ON ACCOUNT
(ACCOUNT_REALM_ID   ASC,LOGIN   ASC);

ALTER TABLE ACCOUNT
ADD CONSTRAINT  AK_UQ_ACCOUNT_LGN_REALM UNIQUE (ACCOUNT_REALM_ID,LOGIN);

ALTER TABLE ACCOUNT
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_SYS_USER CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_SYS_USER CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT
	MODIFY IS_ENABLED CONSTRAINT  CHECK_YES_NO_355473735 CHECK (IS_ENABLED IN ('Y', 'N'));

CREATE  INDEX XIF8ACCOUNT ON ACCOUNT
(ACCOUNT_REALM_ID   ASC);

CREATE  INDEX XIF9ACCOUNT ON ACCOUNT
(ACCOUNT_ROLE   ASC);

CREATE  INDEX XIF11ACCOUNT ON ACCOUNT
(COMPANY_ID   ASC,PERSON_ID   ASC);

CREATE  INDEX XIF12ACCOUNT ON ACCOUNT
(PERSON_ID   ASC,COMPANY_ID   ASC,ACCOUNT_REALM_ID   ASC);

CREATE    BITMAP INDEX IDX_ACCOUNT_ACCOUNT_STATUS ON ACCOUNT
(ACCOUNT_STATUS   ASC);

CREATE    BITMAP INDEX IDX_ACCOUNT_ACCOUNT_TPE ON ACCOUNT
(ACCOUNT_TYPE   ASC);

/***********************************************
 * Table: ACCOUNT_ASSIGND_CERT
 ***********************************************/

CREATE TABLE ACCOUNT_ASSIGND_CERT
(
	ACCOUNT_ID           NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	X509_CERT_ID         NUMBER(13) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	X509_KEY_USG         VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	KEY_USAGE_REASON_FOR_ASSIGN VARCHAR2(50 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE ACCOUNT_ASSIGND_CERT IS 'Actual  assignment of the usage category USER Certificates to System Users.';

COMMENT ON COLUMN ACCOUNT_ASSIGND_CERT.X509_KEY_USG IS 'Name of the Certificate.';

COMMENT ON COLUMN ACCOUNT_ASSIGND_CERT.X509_CERT_ID IS 'Uniquely identifies Certificate';

COMMENT ON COLUMN ACCOUNT_ASSIGND_CERT.KEY_USAGE_REASON_FOR_ASSIGN IS 'Uniquely identifies and indicates reason for assignment.';

CREATE UNIQUE INDEX PK_ACCOUNT_ASSIGNED_CERT ON ACCOUNT_ASSIGND_CERT
(ACCOUNT_ID   ASC,X509_CERT_ID   ASC,X509_KEY_USG   ASC);

ALTER TABLE ACCOUNT_ASSIGND_CERT
	ADD CONSTRAINT  PK_ACCOUNT_ASSIGNED_CER PRIMARY KEY (ACCOUNT_ID,X509_CERT_ID,X509_KEY_USG)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ACCOUNT_ASSIGNED_CERT  ENABLE  VALIDATE;

/***********************************************
 * Table: ACCOUNT_AUTH_LOG
 ***********************************************/

CREATE TABLE ACCOUNT_AUTH_LOG
(
	ACCOUNT_ID           NUMBER(13) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ACCOUNT_AUTH_TS      TIMESTAMP(6) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	AUTH_RESOURCE        VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ACCOUNT_AUTH_SEQ     NUMBER(13) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	WAS_AUTH_SUCCESS     CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	AUTH_RESOURCE_INSTANCE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	AUTH_ORIGIN          VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_DATE        DATE NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL 
);

COMMENT ON TABLE ACCOUNT_AUTH_LOG IS 'Captures all system user authorizations for access to Vonage resources.';

COMMENT ON COLUMN ACCOUNT_AUTH_LOG.ACCOUNT_AUTH_SEQ IS 'This sequence is to support table PK with timestamps recived rounded to the secend and generating duplicates.';

COMMENT ON COLUMN ACCOUNT_AUTH_LOG.AUTH_RESOURCE_INSTANCE IS 'Keeps track of the server where a user was authenticating for a given resource';

COMMENT ON COLUMN ACCOUNT_AUTH_LOG.AUTH_ORIGIN IS 'Keeps track of where the request for authentication originated from.';

CREATE UNIQUE INDEX PK_ACCOUNT_AUTH_LOG ON ACCOUNT_AUTH_LOG
(ACCOUNT_ID   ASC,ACCOUNT_AUTH_TS   ASC,AUTH_RESOURCE   ASC,ACCOUNT_AUTH_SEQ   ASC);

ALTER TABLE ACCOUNT_AUTH_LOG
	ADD CONSTRAINT  PK_ACCOUNT_AUTH_LOG PRIMARY KEY (ACCOUNT_ID,ACCOUNT_AUTH_TS,AUTH_RESOURCE,ACCOUNT_AUTH_SEQ)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ACCOUNT_AUTH_LOG  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_AUTH_LOG
	MODIFY WAS_AUTH_SUCCESS CONSTRAINT  CKC_SYS_USR_AUTHLG_SUCCESS CHECK (WAS_AUTH_SUCCESS in ('Y','N')
			and WAS_AUTH_SUCCESS =
			upper(WAS_AUTH_SUCCESS))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIEACCTAUTHLOG_TS_ARSRC ON ACCOUNT_AUTH_LOG
(ACCOUNT_AUTH_TS   ASC,AUTH_RESOURCE   ASC);

/***********************************************
 * Table: ACCOUNT_COLLECTION
 ***********************************************/

CREATE TABLE ACCOUNT_COLLECTION
(
	ACCOUNT_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ACCOUNT_COLLECTION_NAME VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ACCOUNT_COLLECTION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_ACCOUNT_COLLECTION ON ACCOUNT_COLLECTION
(ACCOUNT_COLLECTION_ID   ASC);

CREATE UNIQUE INDEX UQ_ACCOUNT_COLLECTION_NAME ON ACCOUNT_COLLECTION
(ACCOUNT_COLLECTION_NAME   ASC,ACCOUNT_COLLECTION_TYPE   ASC);

ALTER TABLE ACCOUNT_COLLECTION
	ADD CONSTRAINT  PK_ACCOUNT_COLLECTION PRIMARY KEY (ACCOUNT_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ACCOUNT_COLLECTION  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_COLLECTION
ADD CONSTRAINT  UQ_ACCT_COLLECTION_NAME UNIQUE (ACCOUNT_COLLECTION_NAME,ACCOUNT_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX UQ_ACCOUNT_COLLECTION_NAME  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_COLLECTION
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_USRCOL CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_COLLECTION
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_USERCOL CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE    BITMAP INDEX IDX_ACCTCOL_ACCTCOLTYPE ON ACCOUNT_COLLECTION
(ACCOUNT_COLLECTION_TYPE   ASC);

CREATE TABLE ACCOUNT_COLLECTION_ACCOUNT
(
	ACCOUNT_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ACCOUNT_ID           NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ACCOUNT_ID_RANK      INTEGER NULL ,
	START_DATE           TIMESTAMP NULL ,
	FINISH_DATE          TIMESTAMP NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_ACCOUNT_COLLECTION_ACCOUNT ON ACCOUNT_COLLECTION_ACCOUNT
(ACCOUNT_COLLECTION_ID   ASC,ACCOUNT_ID   ASC);

ALTER TABLE ACCOUNT_COLLECTION_ACCOUNT
	ADD CONSTRAINT  PK_ACCOUNT_COLLECTION_USER PRIMARY KEY (ACCOUNT_COLLECTION_ID,ACCOUNT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ACCOUNT_COLLECTION_ACCOUNT  ENABLE  VALIDATE;

CREATE UNIQUE INDEX XAKACCTCOL_ACCT_RANK ON ACCOUNT_COLLECTION_ACCOUNT
(ACCOUNT_COLLECTION_ID   ASC,ACCOUNT_ID_RANK   ASC);

ALTER TABLE ACCOUNT_COLLECTION_ACCOUNT
ADD CONSTRAINT  AK_ACCTCOL_ACCT_RANK UNIQUE (ACCOUNT_COLLECTION_ID,ACCOUNT_ID_RANK);

ALTER TABLE ACCOUNT_COLLECTION_ACCOUNT
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_USRCLUSR CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_COLLECTION_ACCOUNT
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_USRCOLUSR CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: ACCOUNT_COLLECTION_HIER
 ***********************************************/

CREATE TABLE ACCOUNT_COLLECTION_HIER
(
	ACCOUNT_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	CHILD_ACCOUNT_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_ACCOUNT_COLLECTION_HIER ON ACCOUNT_COLLECTION_HIER
(ACCOUNT_COLLECTION_ID   ASC,CHILD_ACCOUNT_COLLECTION_ID   ASC);

ALTER TABLE ACCOUNT_COLLECTION_HIER
	ADD CONSTRAINT  PK_ACCOUNT_COLLECTION_HIER PRIMARY KEY (ACCOUNT_COLLECTION_ID,CHILD_ACCOUNT_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ACCOUNT_COLLECTION_HIER  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_COLLECTION_HIER
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_USRCLHR CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_COLLECTION_HIER
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_USRCOLHR CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: ACCOUNT_PASSWORD
 ***********************************************/

CREATE TABLE ACCOUNT_PASSWORD
(
	ACCOUNT_ID           NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ACCOUNT_REALM_ID     NUMBER NOT NULL ,
	PASSWORD_TYPE        VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PASSWORD             VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	CHANGE_TIME          DATE NULL ,
	EXPIRE_TIME          DATE NULL ,
	UNLOCK_TIME          DATE NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN ACCOUNT_PASSWORD.CHANGE_TIME IS 'The last thie this password was changed';

COMMENT ON COLUMN ACCOUNT_PASSWORD.EXPIRE_TIME IS 'The time this password expires, if different from the default';

COMMENT ON COLUMN ACCOUNT_PASSWORD.UNLOCK_TIME IS 'indicates the time that the password is unlocked and can thus be changed; NULL means the password can be changed.  This is application enforced.';

COMMENT ON COLUMN ACCOUNT_PASSWORD.ACCOUNT_REALM_ID IS 'Set to allow enforcement of password type/account_realm_id.   Largely managed in the background by trigger';

CREATE UNIQUE INDEX PK_ACCOUNT_PASSWORD ON ACCOUNT_PASSWORD
(ACCOUNT_ID   ASC,ACCOUNT_REALM_ID   ASC,PASSWORD_TYPE   ASC);

ALTER TABLE ACCOUNT_PASSWORD
	ADD CONSTRAINT  PK_ACCUNT_PASSWORD PRIMARY KEY (ACCOUNT_ID,ACCOUNT_REALM_ID,PASSWORD_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ACCOUNT_PASSWORD  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_PASSWORD
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_SYSTEM_P CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_PASSWORD
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_SYSTEM_P CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_ACCTPWD_ACCT_ID ON ACCOUNT_PASSWORD
(ACCOUNT_ID   ASC,ACCOUNT_REALM_ID   ASC);

CREATE  INDEX XIF_ACCT_PWD_ACCT_REALM ON ACCOUNT_PASSWORD
(ACCOUNT_REALM_ID   ASC);

CREATE  INDEX XIF_ACCT_PWD_RELM_TYPE ON ACCOUNT_PASSWORD
(PASSWORD_TYPE   ASC,ACCOUNT_REALM_ID   ASC);

/***********************************************
 * Table: ACCOUNT_REALM
 ***********************************************/

CREATE TABLE ACCOUNT_REALM
(
	ACCOUNT_REALM_ID     NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ACCOUNT_REALM_NAME   VARCHAR2(100 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_ACCOUNT_REALM ON ACCOUNT_REALM
(ACCOUNT_REALM_ID   ASC);

ALTER TABLE ACCOUNT_REALM
	ADD CONSTRAINT  PK_ACCOUNT_REALM PRIMARY KEY (ACCOUNT_REALM_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ACCOUNT_REALM  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_REALM
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1332690195 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_REALM
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1331903017 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX IDX_ACCOUNT_REALM_AR_NAME ON ACCOUNT_REALM
(ACCOUNT_REALM_NAME   ASC);

/***********************************************
 * Table: ACCOUNT_REALM_ACCT_COLL_TYPE
 ***********************************************/

CREATE TABLE ACCOUNT_REALM_ACCT_COLL_TYPE
(
	ACCOUNT_REALM_ID     NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ACCOUNT_COLLECTION_TYPE VARCHAR2(50 BYTE) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_ACCOUNT_REALM ON ACCOUNT_REALM_ACCT_COLL_TYPE
(ACCOUNT_REALM_ID   ASC,ACCOUNT_COLLECTION_TYPE   ASC);

ALTER TABLE ACCOUNT_REALM_ACCT_COLL_TYPE
	ADD CONSTRAINT  PK_ACCOUNT_REALM_ACCT_COLL_TYP PRIMARY KEY (ACCOUNT_REALM_ID,ACCOUNT_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ACCOUNT_REALM  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_REALM_ACCT_COLL_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_152576547 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_REALM_ACCT_COLL_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_151789369 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1_ACCT_REALM_ACCT_COLL_TYP ON ACCOUNT_REALM_ACCT_COLL_TYPE
(ACCOUNT_COLLECTION_TYPE   ASC);

CREATE  INDEX XIF2_ACCT_REALM_ACCT_COLL_ARID ON ACCOUNT_REALM_ACCT_COLL_TYPE
(ACCOUNT_REALM_ID   ASC);

/***********************************************
 * Table: ACCOUNT_REALM_COMPANY
 ***********************************************/

CREATE TABLE ACCOUNT_REALM_COMPANY
(
	ACCOUNT_REALM_ID     NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	COMPANY_ID           NUMBER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_ACCOUNT_REALM_COMPANY ON ACCOUNT_REALM_COMPANY
(ACCOUNT_REALM_ID   ASC,COMPANY_ID   ASC);

ALTER TABLE ACCOUNT_REALM_COMPANY
	ADD CONSTRAINT  PK_ACCOUNT_REALM_COMPANY PRIMARY KEY (ACCOUNT_REALM_ID,COMPANY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ACCOUNT_REALM_COMPANY  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_REALM_COMPANY
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1612013716 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_REALM_COMPANY
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1612800894 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1ACCOUNT_REALM_COMPANY ON ACCOUNT_REALM_COMPANY
(COMPANY_ID   ASC);

CREATE  INDEX XIF2ACCOUNT_REALM_COMPANY ON ACCOUNT_REALM_COMPANY
(ACCOUNT_REALM_ID   ASC);

/***********************************************
 * Table: ACCOUNT_REALM_PASSWORD_TYPE
 ***********************************************/

CREATE TABLE ACCOUNT_REALM_PASSWORD_TYPE
(
	PASSWORD_TYPE        VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ACCOUNT_REALM_ID     NUMBER NOT NULL ,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_ACCOUNT_REALM_PASSWD_TYPE ON ACCOUNT_REALM_PASSWORD_TYPE
(PASSWORD_TYPE   ASC,ACCOUNT_REALM_ID   ASC);

ALTER TABLE ACCOUNT_REALM_PASSWORD_TYPE
	ADD CONSTRAINT  PK_ACCOUNT_REALM_PASSWORD_TYPE PRIMARY KEY (PASSWORD_TYPE,ACCOUNT_REALM_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ACCOUNT_REALM_PASSWD_TYPE  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_REALM_PASSWORD_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1175656996 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_REALM_PASSWORD_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1174869818 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_ACRLM_ACCT_RLM_ID ON ACCOUNT_REALM_PASSWORD_TYPE
(ACCOUNT_REALM_ID   ASC);

CREATE  INDEX XIF_ACRLM_PWD_TYPE ON ACCOUNT_REALM_PASSWORD_TYPE
(PASSWORD_TYPE   ASC);

/***********************************************
 * Table: ACCOUNT_SSH_KEY
 ***********************************************/

CREATE TABLE ACCOUNT_SSH_KEY
(
	ACCOUNT_ID           NUMBER NOT NULL ,
	SSH_KEY_ID           NUMBER(13,0) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_ACCOUNT_SSH_KEY ON ACCOUNT_SSH_KEY
(ACCOUNT_ID   ASC,SSH_KEY_ID   ASC);

ALTER TABLE ACCOUNT_SSH_KEY
	ADD CONSTRAINT  PK_ACCOUNT_SSH_KEY PRIMARY KEY (ACCOUNT_ID,SSH_KEY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ACCOUNT_SSH_KEY  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_SSH_KEY
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_403901968 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_SSH_KEY
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_403114790 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1ACCOUNT_SSH_KEY ON ACCOUNT_SSH_KEY
(ACCOUNT_ID   ASC);

CREATE  INDEX XIF2ACCOUNT_SSH_KEY ON ACCOUNT_SSH_KEY
(SSH_KEY_ID   ASC);

/***********************************************
 * Table: ACCOUNT_TOKEN
 ***********************************************/

CREATE TABLE ACCOUNT_TOKEN
(
	ACCOUNT_TOKEN_ID     NUMBER(13,0) NOT NULL ,
	ACCOUNT_ID           NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	TOKEN_ID             NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ISSUED_DATE          DATE NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN ACCOUNT_TOKEN.ACCOUNT_TOKEN_ID IS 'This is its own PK in order to better handle auditing.';

CREATE UNIQUE INDEX PK_ACCOUNT_TOKEN ON ACCOUNT_TOKEN
(ACCOUNT_TOKEN_ID   ASC);

ALTER TABLE ACCOUNT_TOKEN
	ADD CONSTRAINT  PK_ACCOUNT_TOKEN PRIMARY KEY (ACCOUNT_TOKEN_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ACCOUNT_TOKEN  ENABLE  VALIDATE;

CREATE UNIQUE INDEX XAK1ACCOUNT_TOKEN ON ACCOUNT_TOKEN
(ACCOUNT_ID   ASC,TOKEN_ID   ASC);

ALTER TABLE ACCOUNT_TOKEN
ADD CONSTRAINT  AK_ACCOUNT_TOKEN_TKEN_ACCT UNIQUE (ACCOUNT_ID,TOKEN_ID);

ALTER TABLE ACCOUNT_TOKEN
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_ACCTTOKEN CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_TOKEN
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_ACCTTOKEN CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: ACCOUNT_UNIX_INFO
 ***********************************************/

CREATE TABLE ACCOUNT_UNIX_INFO
(
	ACCOUNT_ID           NUMBER(13,0) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	UNIX_UID             NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	UNIX_GROUP_ACCT_COLLECTION_ID NUMBER NOT NULL ,
	SHELL                VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DEFAULT_HOME         VARCHAR2(50 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX AK_ACCOUNT_UNIX_INFO_UNIX_UID ON ACCOUNT_UNIX_INFO
(UNIX_UID   ASC);

CREATE UNIQUE INDEX PK_ACCOUNT_UNIX_INFO ON ACCOUNT_UNIX_INFO
(ACCOUNT_ID   ASC);

ALTER TABLE ACCOUNT_UNIX_INFO
	ADD CONSTRAINT  PK_ACCOUNT_UNIX_INFO PRIMARY KEY (ACCOUNT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ACCOUNT_UNIX_INFO  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_UNIX_INFO
ADD CONSTRAINT  AK_ACCOUNT_UNIX_INFO_UNIX_UID UNIQUE (UNIX_UID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_ACCOUNT_UNIX_INFO_UNIX_UID  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_UNIX_INFO
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_USER_UNI CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT_UNIX_INFO
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_USER_UNI CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF3ACCOUNT_UNIX_INFO ON ACCOUNT_UNIX_INFO
(UNIX_GROUP_ACCT_COLLECTION_ID   ASC);

CREATE  INDEX XIF4ACCOUNT_UNIX_INFO ON ACCOUNT_UNIX_INFO
(UNIX_GROUP_ACCT_COLLECTION_ID   ASC,ACCOUNT_ID   ASC);

/***********************************************
 * Table: APPAAL
 ***********************************************/

CREATE TABLE APPAAL
(
	APPAAL_ID            NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	APPAAL_NAME          VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_APPAAL ON APPAAL
(APPAAL_ID   ASC);

ALTER TABLE APPAAL
	ADD CONSTRAINT  PK_APPAAL PRIMARY KEY (APPAAL_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_APPAAL  ENABLE  VALIDATE;

CREATE UNIQUE INDEX UQ_APPAAL_NAME ON APPAAL
(APPAAL_NAME   ASC);

ALTER TABLE APPAAL
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_APPAAL CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE APPAAL
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_APPAAL CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: APPAAL_INSTANCE
 ***********************************************/

CREATE TABLE APPAAL_INSTANCE
(
	APPAAL_INSTANCE_ID   NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	APPAAL_ID            NUMBER(13,0) NULL ,
	SERVICE_ENVIRONMENT_ID NUMBER(13,0) NOT NULL ,
	FILE_MODE            NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	FILE_OWNER_ACCOUNT_ID NUMBER NOT NULL ,
	FILE_GROUP_ACCT_COLLECTION_ID NUMBER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_APPAAL_INSTANCE ON APPAAL_INSTANCE
(APPAAL_INSTANCE_ID   ASC);

ALTER TABLE APPAAL_INSTANCE
	ADD CONSTRAINT  PK_APPAAL_INSTANCE PRIMARY KEY (APPAAL_INSTANCE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_APPAAL_INSTANCE  ENABLE  VALIDATE;

ALTER TABLE APPAAL_INSTANCE
	MODIFY FILE_MODE CONSTRAINT  CKC_FILE_MODE_APPAAL_I CHECK (FILE_MODE between 0 and 4095)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE APPAAL_INSTANCE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_APPAAL_INST CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE APPAAL_INSTANCE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_APPAAL_INST CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIFAPPAAL_INST_FILGRPACCTCOLID ON APPAAL_INSTANCE
(FILE_GROUP_ACCT_COLLECTION_ID   ASC);

/***********************************************
 * Table: APPAAL_INSTANCE_DEVICE_COLL
 ***********************************************/

CREATE TABLE APPAAL_INSTANCE_DEVICE_COLL
(
	DEVICE_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	APPAAL_INSTANCE_ID   NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_APPAAL_INSTANCE_DEVICE_COLL ON APPAAL_INSTANCE_DEVICE_COLL
(DEVICE_COLLECTION_ID   ASC,APPAAL_INSTANCE_ID   ASC);

ALTER TABLE APPAAL_INSTANCE_DEVICE_COLL
	ADD CONSTRAINT  PK_APPAAL_INSTANCE_DEVICE_COLL PRIMARY KEY (DEVICE_COLLECTION_ID,APPAAL_INSTANCE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_APPAAL_INSTANCE_DEVICE_COLL  ENABLE  VALIDATE;

ALTER TABLE APPAAL_INSTANCE_DEVICE_COLL
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_APPAALINSTDEVCOLL CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE APPAAL_INSTANCE_DEVICE_COLL
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_APPAALINSTDEVCOLL CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: APPAAL_INSTANCE_PROPERTY
 ***********************************************/

CREATE TABLE APPAAL_INSTANCE_PROPERTY
(
	APPAAL_INSTANCE_ID   NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	APP_KEY              VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	APPAAL_GROUP_NAME    VARCHAR2(50 BYTE) NOT NULL ,
	APPAAL_GROUP_RANK    CHAR(18) NOT NULL ,
	APP_VALUE            VARCHAR2(4000 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ENCRYPTION_KEY_ID    NUMBER(13) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN APPAAL_INSTANCE_PROPERTY.ENCRYPTION_KEY_ID IS 'encryption information for app_value, if used';

CREATE UNIQUE INDEX PK_APPAAL_INSTANCE_PROPERTY ON APPAAL_INSTANCE_PROPERTY
(APPAAL_INSTANCE_ID   ASC,APP_KEY   ASC,APPAAL_GROUP_NAME   ASC,APPAAL_GROUP_RANK   ASC);

ALTER TABLE APPAAL_INSTANCE_PROPERTY
	ADD CONSTRAINT  PK_APPAAL_INSTANCE_PROPERTY PRIMARY KEY (APPAAL_INSTANCE_ID,APP_KEY,APPAAL_GROUP_NAME,APPAAL_GROUP_RANK)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_APPAAL_INSTANCE_PROPERTY  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_APPAAL_INSTANCE_IDKEYRANK ON APPAAL_INSTANCE_PROPERTY
(APPAAL_INSTANCE_ID   ASC,APP_KEY   ASC,APPAAL_GROUP_RANK   ASC);

ALTER TABLE APPAAL_INSTANCE_PROPERTY
ADD CONSTRAINT  AK_APPAAL_INSTANCE_IDKEYRANK UNIQUE (APPAAL_INSTANCE_ID,APP_KEY,APPAAL_GROUP_RANK);

ALTER TABLE APPAAL_INSTANCE_PROPERTY
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_APPAAL_INST_PROP CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE APPAAL_INSTANCE_PROPERTY
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_APPAAL_INST_PROP CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF4APPAAL_INSTANCE_PROPERTY ON APPAAL_INSTANCE_PROPERTY
(APPAAL_GROUP_NAME   ASC);

CREATE  INDEX IND_AAIPROP_KEY_VALUE ON APPAAL_INSTANCE_PROPERTY
(APP_KEY   ASC,APP_VALUE   ASC);

/***********************************************
 * Table: APPROVAL_INSTANCE
 ***********************************************/

CREATE TABLE APPROVAL_INSTANCE
(
	APPROVAL_INSTANCE_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	APPROVAL_PROCESS_ID  NUMBER NULL ,
	APPROVAL_INSTANCE_NAME varchar2(50) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	APPROVAL_START       DATE NOT NULL ,
	APPROVAL_END         DATE NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_APPROVAL_INSTANCE ON APPROVAL_INSTANCE
(APPROVAL_INSTANCE_ID   ASC);

ALTER TABLE APPROVAL_INSTANCE
	ADD CONSTRAINT  PK_APPROVAL_INSTANCE PRIMARY KEY (APPROVAL_INSTANCE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_APPROVAL_INSTANCE  ENABLE  VALIDATE;

ALTER TABLE APPROVAL_INSTANCE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_182844737 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE APPROVAL_INSTANCE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_183631915 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE APPROVAL_INSTANCE
	MODIFY APPROVAL_START DEFAULT now();

CREATE  INDEX XIF1APPROVAL_INSTANCE ON APPROVAL_INSTANCE
(APPROVAL_PROCESS_ID   ASC);

/***********************************************
 * Table: APPROVAL_INSTANCE_ITEM
 ***********************************************/

CREATE TABLE APPROVAL_INSTANCE_ITEM
(
	APPROVAL_INSTANCE_ITEM_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	APPROVAL_INSTANCE_LINK_ID NUMBER NOT NULL ,
	APPROVAL_INSTANCE_STEP_ID NUMBER NOT NULL ,
	NEXT_APPROVAL_INSTANCE_ITEM_ID NUMBER NULL ,
	APPROVED_CATEGORY    varchar2(255) NOT NULL ,
	APPROVED_LABEL       VARCHAR2(255) NULL ,
	APPROVED_LHS         VARCHAR2(255) NULL ,
	APPROVED_RHS         VARCHAR2(255) NULL ,
	IS_APPROVED          CHAR(1) NULL ,
	APPROVED_ACCOUNT_ID  NUMBER NULL ,
	APPROVAL_NOTE        VARCHAR2(4096) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_APPROVAL_INSTANCE_ITEM ON APPROVAL_INSTANCE_ITEM
(APPROVAL_INSTANCE_ITEM_ID   ASC);

ALTER TABLE APPROVAL_INSTANCE_ITEM
	ADD CONSTRAINT  PK_APPROVAL_INSTANCE_ITEM PRIMARY KEY (APPROVAL_INSTANCE_ITEM_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_APPROVAL_INSTANCE_ITEM  ENABLE  VALIDATE;

ALTER TABLE APPROVAL_INSTANCE_ITEM
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1363252885 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE APPROVAL_INSTANCE_ITEM
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1364040063 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE APPROVAL_INSTANCE_ITEM
	MODIFY IS_APPROVED CONSTRAINT  CHECK_YES_NO_1349410716 CHECK (IS_APPROVED IN ('Y', 'N'));

CREATE  INDEX XIF1APPROVAL_INSTANCE_ITEM ON APPROVAL_INSTANCE_ITEM
(APPROVAL_INSTANCE_STEP_ID   ASC);

CREATE  INDEX XIF2APPROVAL_INSTANCE_ITEM ON APPROVAL_INSTANCE_ITEM
(APPROVAL_INSTANCE_LINK_ID   ASC);

CREATE  INDEX XIF3APPROVAL_INSTANCE_ITEM ON APPROVAL_INSTANCE_ITEM
(NEXT_APPROVAL_INSTANCE_ITEM_ID   ASC);

CREATE  INDEX XIF4APPROVAL_INSTANCE_ITEM ON APPROVAL_INSTANCE_ITEM
(APPROVED_ACCOUNT_ID   ASC);

/***********************************************
 * Table: APPROVAL_INSTANCE_LINK
 ***********************************************/

CREATE TABLE APPROVAL_INSTANCE_LINK
(
	APPROVAL_INSTANCE_LINK_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ACCT_COLLECTION_ACCT_SEQ_ID NUMBER(13,0) NULL ,
	PERSON_COMPANY_SEQ_ID NUMBER(13,0) NULL ,
	PROPERTY_SEQ_ID      NUMBER(13,0) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_APPROVAL_INSTANCE_LINK ON APPROVAL_INSTANCE_LINK
(APPROVAL_INSTANCE_LINK_ID   ASC);

ALTER TABLE APPROVAL_INSTANCE_LINK
	ADD CONSTRAINT  PK_APPROVAL_INSTANCE_LINK PRIMARY KEY (APPROVAL_INSTANCE_LINK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_APPROVAL_INSTANCE_LINK  ENABLE  VALIDATE;

ALTER TABLE APPROVAL_INSTANCE_LINK
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1412865939 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE APPROVAL_INSTANCE_LINK
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1413653117 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: APPROVAL_INSTANCE_STEP
 ***********************************************/

CREATE TABLE APPROVAL_INSTANCE_STEP
(
	APPROVAL_INSTANCE_STEP_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	APPROVAL_INSTANCE_ID NUMBER NOT NULL ,
	APPROVAL_PROCESS_CHAIN_ID NUMBER NOT NULL ,
	APPROVAL_INSTANCE_STEP_NAME varchar2(50) NOT NULL ,
	APPROVAL_INSTANCE_STEP_DUE DATE NOT NULL ,
	APPROVAL_TYPE        varchar2(50) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	APPROVAL_INSTANCE_STEP_START DATE NOT NULL ,
	APPROVAL_INSTANCE_STEP_END DATE NULL ,
	APPROVER_ACCOUNT_ID  NUMBER NOT NULL ,
	EXTERNAL_REFERENCE_NAME varchar2(255) NULL ,
	IS_COMPLETED         CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_APPROVAL_INSTANCE_STEP ON APPROVAL_INSTANCE_STEP
(APPROVAL_INSTANCE_STEP_ID   ASC);

ALTER TABLE APPROVAL_INSTANCE_STEP
	ADD CONSTRAINT  PK_APPROVAL_INSTANCE_STEP PRIMARY KEY (APPROVAL_INSTANCE_STEP_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_APPROVAL_INSTANCE_STEP  ENABLE  VALIDATE;

ALTER TABLE APPROVAL_INSTANCE_STEP
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1531025048 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE APPROVAL_INSTANCE_STEP
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1531812226 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE APPROVAL_INSTANCE_STEP
	MODIFY IS_COMPLETED CONSTRAINT  CHECK_YES_NO_1099280524 CHECK (IS_COMPLETED IN ('Y', 'N'));

ALTER TABLE APPROVAL_INSTANCE_STEP
	MODIFY APPROVAL_INSTANCE_STEP_START DEFAULT now();

ALTER TABLE APPROVAL_INSTANCE_STEP
	MODIFY IS_COMPLETED DEFAULT 'N';

CREATE  INDEX XIF1APPROVAL_INSTANCE_STEP ON APPROVAL_INSTANCE_STEP
(APPROVAL_INSTANCE_ID   ASC);

CREATE  INDEX XIF2APPROVAL_INSTANCE_STEP ON APPROVAL_INSTANCE_STEP
(APPROVER_ACCOUNT_ID   ASC);

CREATE  INDEX XIF4APPROVAL_INSTANCE_STEP ON APPROVAL_INSTANCE_STEP
(APPROVAL_TYPE   ASC);

CREATE  INDEX XIF5APPROVAL_INSTANCE_STEP ON APPROVAL_INSTANCE_STEP
(APPROVAL_PROCESS_CHAIN_ID   ASC);

/***********************************************
 * Table: APPROVAL_INSTANCE_STEP_NOTIFY
 ***********************************************/

CREATE TABLE APPROVAL_INSTANCE_STEP_NOTIFY
(
	APPROV_INSTANCE_STEP_NOTIFY_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	APPROVAL_INSTANCE_STEP_ID NUMBER NOT NULL ,
	APPROVAL_NOTIFY_TYPE varchar2(50) NOT NULL ,
	ACCOUNT_ID           NUMBER NOT NULL ,
	APPROVAL_NOTIFY_WHENCE DATE NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_APPROVAL_INSTANCE_STEP_NOTI ON APPROVAL_INSTANCE_STEP_NOTIFY
(APPROV_INSTANCE_STEP_NOTIFY_ID   ASC);

ALTER TABLE APPROVAL_INSTANCE_STEP_NOTIFY
	ADD CONSTRAINT  PK_APPROVAL_INSTANCE_STEP_NOTI PRIMARY KEY (APPROV_INSTANCE_STEP_NOTIFY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_APPROVAL_INSTANCE_STEP_NOTI  ENABLE  VALIDATE;

ALTER TABLE APPROVAL_INSTANCE_STEP_NOTIFY
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_249685551 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE APPROVAL_INSTANCE_STEP_NOTIFY
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_250472729 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1APPROVAL_INSTANCE_STEP_NOT ON APPROVAL_INSTANCE_STEP_NOTIFY
(APPROVAL_NOTIFY_TYPE   ASC);

CREATE  INDEX XIF2APPROVAL_INSTANCE_STEP_NOT ON APPROVAL_INSTANCE_STEP_NOTIFY
(APPROVAL_INSTANCE_STEP_ID   ASC);

CREATE  INDEX XIF3APPROVAL_INSTANCE_STEP_NOT ON APPROVAL_INSTANCE_STEP_NOTIFY
(ACCOUNT_ID   ASC);

/***********************************************
 * Table: APPROVAL_PROCESS
 ***********************************************/

CREATE TABLE APPROVAL_PROCESS
(
	APPROVAL_PROCESS_ID  NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	APPROVAL_PROCESS_NAME varchar2(50) NOT NULL ,
	APPROVAL_PROCESS_TYPE varchar2(50) NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	FIRST_APPRVL_PROCESS_CHAIN_ID NUMBER NOT NULL ,
	PROPERTY_COLLECTION_ID NUMBER NOT NULL ,
	APPROVAL_EXPIRATION_ACTION varchar2(50) NOT NULL ,
	ATTESTATION_FREQUENCY varchar2(50) NULL ,
	ATTESTATION_OFFSET   INTEGER NULL ,
	MAX_ESCALATION_LEVEL INTEGER NULL ,
	ESCALATION_DELAY     CHAR(18) NULL ,
	ESCALATION_REMINDER_GAP INTEGER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_APPROVAL_PROCESS ON APPROVAL_PROCESS
(APPROVAL_PROCESS_ID   ASC);

ALTER TABLE APPROVAL_PROCESS
	ADD CONSTRAINT  PK_APPROVAL_PROCESS PRIMARY KEY (APPROVAL_PROCESS_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_APPROVAL_PROCESS  ENABLE  VALIDATE;

ALTER TABLE APPROVAL_PROCESS
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_217317113 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE APPROVAL_PROCESS
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_218104291 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1APPROVAL_PROCESS ON APPROVAL_PROCESS
(PROPERTY_COLLECTION_ID   ASC);

CREATE  INDEX XIF2APPROVAL_PROCESS ON APPROVAL_PROCESS
(APPROVAL_PROCESS_TYPE   ASC);

CREATE  INDEX XIF3APPROVAL_PROCESS ON APPROVAL_PROCESS
(APPROVAL_EXPIRATION_ACTION   ASC);

CREATE  INDEX XIF4APPROVAL_PROCESS ON APPROVAL_PROCESS
(ATTESTATION_FREQUENCY   ASC);

CREATE  INDEX XIF5APPROVAL_PROCESS ON APPROVAL_PROCESS
(FIRST_APPRVL_PROCESS_CHAIN_ID   ASC);

/***********************************************
 * Table: APPROVAL_PROCESS_CHAIN
 ***********************************************/

CREATE TABLE APPROVAL_PROCESS_CHAIN
(
	APPROVAL_PROCESS_CHAIN_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	APPROVAL_PROCESS_CHAIN_NAME varchar2(50) NOT NULL ,
	APPROVAL_CHAIN_RESPONSE_PERIOD varchar2(50) NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	MESSAGE              VARCHAR2(4096) NULL ,
	EMAIL_MESSAGE        VARCHAR2(4096) NULL ,
	EMAIL_SUBJECT_PREFIX varchar2(50) NULL ,
	EMAIL_SUBJECT_SUFFIX varchar2(50) NULL ,
	MAX_ESCALATION_LEVEL INTEGER NULL ,
	ESCALATION_DELAY     INTEGER NULL ,
	ESCALATION_REMINDER_GAP INTEGER NULL ,
	APPROVING_ENTITY     varchar2(50) NULL ,
	REFRESH_ALL_DATA     CHAR(1) NOT NULL ,
	ACCEPT_APP_PROCESS_CHAIN_ID NUMBER NULL ,
	REJECT_APP_PROCESS_CHAIN_ID NUMBER(13,0) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_APPROVAL_PROCESS_CHAIN ON APPROVAL_PROCESS_CHAIN
(APPROVAL_PROCESS_CHAIN_ID   ASC);

ALTER TABLE APPROVAL_PROCESS_CHAIN
	ADD CONSTRAINT  PK_APPROVAL_PROCESS_CHAIN PRIMARY KEY (APPROVAL_PROCESS_CHAIN_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_APPROVAL_PROCESS_CHAIN  ENABLE  VALIDATE;

ALTER TABLE APPROVAL_PROCESS_CHAIN
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1497015173 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE APPROVAL_PROCESS_CHAIN
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1497802351 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE APPROVAL_PROCESS_CHAIN
	MODIFY REFRESH_ALL_DATA CONSTRAINT  CHECK_YES_NO_2125461495 CHECK (REFRESH_ALL_DATA IN ('Y', 'N'));

ALTER TABLE APPROVAL_PROCESS_CHAIN
	MODIFY APPROVAL_CHAIN_RESPONSE_PERIOD DEFAULT '1 week';

ALTER TABLE APPROVAL_PROCESS_CHAIN
	MODIFY REFRESH_ALL_DATA DEFAULT 'N';

CREATE  INDEX XIF1APPROVAL_PROCESS_CHAIN ON APPROVAL_PROCESS_CHAIN
(APPROVAL_CHAIN_RESPONSE_PERIOD   ASC);

CREATE  INDEX XIF2APPROVAL_PROCESS_CHAIN ON APPROVAL_PROCESS_CHAIN
(ACCEPT_APP_PROCESS_CHAIN_ID   ASC);

/***********************************************
 * Table: ASSET
 ***********************************************/

CREATE TABLE ASSET
(
	ASSET_ID             NUMBER(13,0) NOT NULL ,
	COMPONENT_ID         NUMBER NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	CONTRACT_ID          NUMBER(13,0) NULL ,
	SERIAL_NUMBER        VARCHAR2(255) NULL ,
	PART_NUMBER          VARCHAR2(255) NULL ,
	ASSET_TAG            VARCHAR2(255) NULL ,
	OWNERSHIP_STATUS     VARCHAR2(50 BYTE) NOT NULL ,
	LEASE_EXPIRATION_DATE DATE NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_ASSET ON ASSET
(ASSET_ID   ASC);

ALTER TABLE ASSET
	ADD CONSTRAINT  PK_ASSET PRIMARY KEY (ASSET_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ASSET  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_ASSET_COMPONENT_ID ON ASSET
(COMPONENT_ID   ASC);

ALTER TABLE ASSET
ADD CONSTRAINT  AK_ASSET_COMPONENT_ID UNIQUE (COMPONENT_ID);

ALTER TABLE ASSET
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_755699021 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE ASSET
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_756486199 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_ASSET_CONTRACT_ID ON ASSET
(CONTRACT_ID   ASC);

CREATE  INDEX XIF_ASSET_OWNSHP_STAT ON ASSET
(OWNERSHIP_STATUS   ASC);

/***********************************************
 * Table: BADGE
 ***********************************************/

CREATE TABLE BADGE
(
	CARD_NUMBER          NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	BADGE_TYPE_ID        NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	BADGE_STATUS         VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATE_ASSIGNED        DATE NULL ,
	DATE_RECLAIMED       DATE NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_BADGE ON BADGE
(CARD_NUMBER   ASC);

ALTER TABLE BADGE
	ADD CONSTRAINT  PK_BADGE PRIMARY KEY (CARD_NUMBER)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_BADGE  ENABLE  VALIDATE;

ALTER TABLE BADGE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_BADGE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE BADGE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_BADGE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: BADGE_TYPE
 ***********************************************/

CREATE TABLE BADGE_TYPE
(
	BADGE_TYPE_ID        NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	BADGE_TYPE_NAME      VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	BADGE_COLOR          VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	BADGE_TEMPLATE_NAME  VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX AK_UQ_BADGE_COLOR_BADGE_TY ON BADGE_TYPE
(BADGE_COLOR   ASC);

CREATE UNIQUE INDEX AK_UQ_BADGE_TYPE_NAME_BADGE_TY ON BADGE_TYPE
(BADGE_TYPE_NAME   ASC);

CREATE UNIQUE INDEX PK_BADGE_TYPE ON BADGE_TYPE
(BADGE_TYPE_ID   ASC);

ALTER TABLE BADGE_TYPE
	ADD CONSTRAINT  PK_BADGE_TYPE PRIMARY KEY (BADGE_TYPE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_BADGE_TYPE  ENABLE  VALIDATE;

ALTER TABLE BADGE_TYPE
ADD CONSTRAINT  AK_UQ_BADGE_COLOR_BADGE_TY UNIQUE (BADGE_COLOR)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_UQ_BADGE_COLOR_BADGE_TY  ENABLE  VALIDATE;

ALTER TABLE BADGE_TYPE
ADD CONSTRAINT  AK_UQ_BADGE_TYPE_NAME_BADGE_TY UNIQUE (BADGE_TYPE_NAME)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_UQ_BADGE_TYPE_NAME_BADGE_TY  ENABLE  VALIDATE;

ALTER TABLE BADGE_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_BADGE_TYPE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE BADGE_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_BADGE_TYPE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: CHASSIS_LOCATION
 ***********************************************/

CREATE TABLE CHASSIS_LOCATION
(
	CHASSIS_LOCATION_ID  NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	CHASSIS_DEVICE_TYPE_ID NUMBER NOT NULL ,
	DEVICE_TYPE_MODULE_NAME VARCHAR2(255) NOT NULL ,
	CHASSIS_DEVICE_ID    NUMBER NOT NULL ,
	MODULE_DEVICE_TYPE_ID NUMBER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN CHASSIS_LOCATION.CHASSIS_DEVICE_TYPE_ID IS 'Device Type of the Container Device (Chassis)';

COMMENT ON COLUMN CHASSIS_LOCATION.DEVICE_TYPE_MODULE_NAME IS 'Name used to describe the module programatically.';

CREATE UNIQUE INDEX PK_CHASSIS_LOCATION ON CHASSIS_LOCATION
(CHASSIS_LOCATION_ID   ASC);

ALTER TABLE CHASSIS_LOCATION
	ADD CONSTRAINT  PK_CHASSIS_LOCATION PRIMARY KEY (CHASSIS_LOCATION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_CHASSIS_LOCATION  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_CHASS_DEV_MODULE_NAME ON CHASSIS_LOCATION
(CHASSIS_DEVICE_ID   ASC,DEVICE_TYPE_MODULE_NAME   ASC);

ALTER TABLE CHASSIS_LOCATION
ADD CONSTRAINT  AK_CHASS_DEV_MODULE_NAME UNIQUE (CHASSIS_DEVICE_ID,DEVICE_TYPE_MODULE_NAME);

CREATE UNIQUE INDEX AK_CHASS_LOC_MODULE_ENFORCE ON CHASSIS_LOCATION
(CHASSIS_LOCATION_ID   ASC,CHASSIS_DEVICE_ID   ASC,MODULE_DEVICE_TYPE_ID   ASC);

ALTER TABLE CHASSIS_LOCATION
ADD CONSTRAINT  AK_CHASS_LOC_MODULE_ENFORCE UNIQUE (CHASSIS_LOCATION_ID,CHASSIS_DEVICE_ID,MODULE_DEVICE_TYPE_ID);

ALTER TABLE CHASSIS_LOCATION
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_283242234 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE CHASSIS_LOCATION
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_284029412 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF2CHASSIS_LOCATION ON CHASSIS_LOCATION
(CHASSIS_DEVICE_TYPE_ID   ASC,DEVICE_TYPE_MODULE_NAME   ASC);

CREATE  INDEX XIF3CHASSIS_LOCATION ON CHASSIS_LOCATION
(MODULE_DEVICE_TYPE_ID   ASC);

CREATE  INDEX XIF4CHASSIS_LOCATION ON CHASSIS_LOCATION
(CHASSIS_DEVICE_ID   ASC);

CREATE  INDEX XIF5CHASSIS_LOCATION ON CHASSIS_LOCATION
(MODULE_DEVICE_TYPE_ID   ASC,CHASSIS_DEVICE_TYPE_ID   ASC,DEVICE_TYPE_MODULE_NAME   ASC);

/***********************************************
 * Table: CIRCUIT
 ***********************************************/

CREATE TABLE CIRCUIT
(
	CIRCUIT_ID           NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	VENDOR_COMPANY_ID    NUMBER NULL ,
	VENDOR_CIRCUIT_ID_STR VARCHAR2(255 BYTE) NULL ,
	ALOC_LEC_COMPANY_ID  NUMBER NULL ,
	ALOC_LEC_CIRCUIT_ID_STR VARCHAR2(255 BYTE) NULL ,
	ALOC_PARENT_CIRCUIT_ID NUMBER NULL ,
	ZLOC_LEC_COMPANY_ID  NUMBER NULL ,
	ZLOC_LEC_CIRCUIT_ID_STR VARCHAR2(255 BYTE) NULL ,
	ZLOC_PARENT_CIRCUIT_ID NUMBER NULL ,
	IS_LOCALLY_MANAGED   CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_CIRCUIT ON CIRCUIT
(CIRCUIT_ID   ASC);

ALTER TABLE CIRCUIT
	ADD CONSTRAINT  PK_CIRCUIT PRIMARY KEY (CIRCUIT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_CIRCUIT  ENABLE  VALIDATE;

ALTER TABLE CIRCUIT
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_CIRCUIT CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE CIRCUIT
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_CIRCUIT CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE CIRCUIT
	MODIFY IS_LOCALLY_MANAGED CONSTRAINT  CKC_IS_LOCALLY_MANAGE_CIRCUIT CHECK (IS_LOCALLY_MANAGED in ('Y','N') and IS_LOCALLY_MANAGED = upper(IS_LOCALLY_MANAGED))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF9CIRCUIT ON CIRCUIT
(VENDOR_COMPANY_ID   ASC);

CREATE  INDEX XIF10CIRCUIT ON CIRCUIT
(ALOC_LEC_COMPANY_ID   ASC);

CREATE  INDEX XIF11CIRCUIT ON CIRCUIT
(ZLOC_LEC_COMPANY_ID   ASC);

CREATE  INDEX IDX_CIRCUIT_END1PARENTCIRCID ON CIRCUIT
(ALOC_PARENT_CIRCUIT_ID   ASC);

CREATE  INDEX IDX_CIRCUIT_END2PARENTCIRCID ON CIRCUIT
(ZLOC_PARENT_CIRCUIT_ID   ASC);

CREATE    BITMAP INDEX IDX_CIRCUIT_ISLCLMNGD ON CIRCUIT
(IS_LOCALLY_MANAGED   ASC);

/***********************************************
 * Table: COMPANY
 ***********************************************/

CREATE TABLE COMPANY
(
	COMPANY_ID           NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	COMPANY_NAME         VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	COMPANY_SHORT_NAME   varchar2(50) NULL ,
	PARENT_COMPANY_ID    NUMBER NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_COMPANY ON COMPANY
(COMPANY_ID   ASC);

ALTER TABLE COMPANY
	ADD CONSTRAINT  PK_COMPANY PRIMARY KEY (COMPANY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_COMPANY  ENABLE  VALIDATE;

ALTER TABLE COMPANY
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VCOMPANY CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE COMPANY
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VCOMPANY CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE COMPANY
	MODIFY COMPANY_SHORT_NAME CONSTRAINT  CKC_CMPY_SHRT_NAME_195335815 CHECK (COMPANY_SHORT_NAME = lower(COMPANY_SHORT_NAME) and COMPANY_SHORT_NAME not like '% %');

CREATE  INDEX XIF1COMPANY ON COMPANY
(PARENT_COMPANY_ID   ASC);

/***********************************************
 * Table: COMPANY_COLLECTION
 ***********************************************/

CREATE TABLE COMPANY_COLLECTION
(
	COMPANY_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	COMPANY_COLLECTION_NAME VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	COMPANY_COLLECTION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX AK_COMPANY_COLLECTION_NAMTYP ON COMPANY_COLLECTION
(COMPANY_COLLECTION_NAME   ASC,COMPANY_COLLECTION_TYPE   ASC);

CREATE UNIQUE INDEX PK_COMPANY_COLLECTION ON COMPANY_COLLECTION
(COMPANY_COLLECTION_ID   ASC);

ALTER TABLE COMPANY_COLLECTION
	ADD CONSTRAINT  PK_COMPANY_COLLECTION PRIMARY KEY (COMPANY_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_COMPANY_COLLECTION  ENABLE  VALIDATE;

ALTER TABLE COMPANY_COLLECTION
ADD CONSTRAINT  AK_COMPANY_COLLECTION_NAMTYP UNIQUE (COMPANY_COLLECTION_NAME,COMPANY_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_COMPANY_COLLECTION_NAMTYP  ENABLE  VALIDATE;

ALTER TABLE COMPANY_COLLECTION
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_553460790 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE COMPANY_COLLECTION
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_554247968 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIFCOMP_COLL_COM_COLL_TYPE ON COMPANY_COLLECTION
(COMPANY_COLLECTION_TYPE   ASC);

/***********************************************
 * Table: COMPANY_COLLECTION_COMPANY
 ***********************************************/

CREATE TABLE COMPANY_COLLECTION_COMPANY
(
	COMPANY_COLLECTION_ID NUMBER NOT NULL ,
	COMPANY_ID           NUMBER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_COMPANY_COLLECTION_COMPANY ON COMPANY_COLLECTION_COMPANY
(COMPANY_COLLECTION_ID   ASC,COMPANY_ID   ASC);

ALTER TABLE COMPANY_COLLECTION_COMPANY
	ADD CONSTRAINT  PK_COMPANY_COLLECTION_COMPANY PRIMARY KEY (COMPANY_COLLECTION_ID,COMPANY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_COMPANY_COLLECTION_COMPANY  ENABLE  VALIDATE;

ALTER TABLE COMPANY_COLLECTION_COMPANY
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_796802596 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE COMPANY_COLLECTION_COMPANY
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_796015418 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIFCOMPANY_COLL_COMPANY_COLL_I ON COMPANY_COLLECTION_COMPANY
(COMPANY_COLLECTION_ID   ASC);

CREATE  INDEX XIFCOMPANY_COLL_COMPANY_ID ON COMPANY_COLLECTION_COMPANY
(COMPANY_ID   ASC);

/***********************************************
 * Table: COMPANY_COLLECTION_HIER
 ***********************************************/

CREATE TABLE COMPANY_COLLECTION_HIER
(
	COMPANY_COLLECTION_ID NUMBER NOT NULL ,
	CHILD_COMPANY_COLLECTION_ID NUMBER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_COMPANY_COLLECTION_HIER ON COMPANY_COLLECTION_HIER
(COMPANY_COLLECTION_ID   ASC,CHILD_COMPANY_COLLECTION_ID   ASC);

ALTER TABLE COMPANY_COLLECTION_HIER
	ADD CONSTRAINT  PK_COMPANY_COLLECTION_HIER PRIMARY KEY (COMPANY_COLLECTION_ID,CHILD_COMPANY_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_COMPANY_COLLECTION_HIER  ENABLE  VALIDATE;

ALTER TABLE COMPANY_COLLECTION_HIER
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1734183856 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE COMPANY_COLLECTION_HIER
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1734971034 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIFCOMP_COLL_COMP_COLL_ID ON COMPANY_COLLECTION_HIER
(COMPANY_COLLECTION_ID   ASC);

CREATE  INDEX XIFCOMP_COLL_COMP_COLL_KID_ID ON COMPANY_COLLECTION_HIER
(CHILD_COMPANY_COLLECTION_ID   ASC);

/***********************************************
 * Table: COMPANY_TYPE
 ***********************************************/

CREATE TABLE COMPANY_TYPE
(
	COMPANY_ID           NUMBER NOT NULL ,
	COMPANY_TYPE         VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_COMPANY_TYPE ON COMPANY_TYPE
(COMPANY_ID   ASC,COMPANY_TYPE   ASC);

ALTER TABLE COMPANY_TYPE
	ADD CONSTRAINT  PK_COMPANY_TYPE PRIMARY KEY (COMPANY_ID,COMPANY_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_COMPANY_TYPE  ENABLE  VALIDATE;

ALTER TABLE COMPANY_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1297170772 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE COMPANY_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1296383594 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1COMPANY_TYPE ON COMPANY_TYPE
(COMPANY_ID   ASC);

CREATE  INDEX XIF2COMPANY_TYPE ON COMPANY_TYPE
(COMPANY_TYPE   ASC);

/***********************************************
 * Table: COMPONENT
 ***********************************************/

CREATE TABLE COMPONENT
(
	COMPONENT_ID         NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	COMPONENT_TYPE_ID    NUMBER NOT NULL ,
	COMPONENT_NAME       CHAR VARYING(255) NULL ,
	RACK_LOCATION_ID     NUMBER NULL ,
	PARENT_SLOT_ID       NUMBER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_COMPONENT ON COMPONENT
(COMPONENT_ID   ASC);

ALTER TABLE COMPONENT
	ADD CONSTRAINT  PK_COMPONENT PRIMARY KEY (COMPONENT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_COMPONENT  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_COMPONENT_COMPONENT_TYPE_ID ON COMPONENT
(COMPONENT_ID   ASC,COMPONENT_TYPE_ID   ASC);

ALTER TABLE COMPONENT
ADD CONSTRAINT  AK_COMPONENT_COMPONENT_TYPE_ID UNIQUE (COMPONENT_ID,COMPONENT_TYPE_ID);

CREATE UNIQUE INDEX AK_COMPONENT_PARENT_SLOT_ID ON COMPONENT
(PARENT_SLOT_ID   ASC);

ALTER TABLE COMPONENT
ADD CONSTRAINT  AK_COMPONENT_PARENT_SLOT_ID UNIQUE (PARENT_SLOT_ID);

ALTER TABLE COMPONENT
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_2001364638 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE COMPONENT
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_2002151816 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_COMPONENT_COMP_TYPE_ID ON COMPONENT
(COMPONENT_TYPE_ID   ASC);

CREATE  INDEX XIF_COMPONENT_RACK_LOC_ID ON COMPONENT
(RACK_LOCATION_ID   ASC);

/***********************************************
 * Table: COMPONENT_PROPERTY
 ***********************************************/

CREATE TABLE COMPONENT_PROPERTY
(
	COMPONENT_PROPERTY_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	COMPONENT_FUNCTION   VARCHAR2(50 BYTE) NULL ,
	COMPONENT_TYPE_ID    NUMBER NULL ,
	COMPONENT_ID         NUMBER NULL ,
	INTER_COMPONENT_CONNECTION_ID NUMBER NULL ,
	SLOT_FUNCTION        VARCHAR2(50 BYTE) NULL ,
	SLOT_TYPE_ID         NUMBER NULL ,
	SLOT_ID              NUMBER NULL ,
	COMPONENT_PROPERTY_NAME varchar2(50) NULL ,
	COMPONENT_PROPERTY_TYPE VARCHAR2(50 BYTE) NULL ,
	PROPERTY_VALUE       VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_COMPONENT_PROPERTY ON COMPONENT_PROPERTY
(COMPONENT_PROPERTY_ID   ASC);

ALTER TABLE COMPONENT_PROPERTY
	ADD CONSTRAINT  PK_COMPONENT_PROPERTY PRIMARY KEY (COMPONENT_PROPERTY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_COMPONENT_PROPERTY  ENABLE  VALIDATE;

ALTER TABLE COMPONENT_PROPERTY
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_33247838 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE COMPONENT_PROPERTY
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_34035016 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF8COMPONENT_PROPERTY ON COMPONENT_PROPERTY
(INTER_COMPONENT_CONNECTION_ID   ASC);

CREATE  INDEX XIF_COMP_PROP_CMP_ID ON COMPONENT_PROPERTY
(COMPONENT_ID   ASC);

CREATE  INDEX XIF_COMP_PROP_COMP_FUNC ON COMPONENT_PROPERTY
(COMPONENT_FUNCTION   ASC);

CREATE  INDEX XIF_COMP_PROP_COMP_TYP_ID ON COMPONENT_PROPERTY
(COMPONENT_TYPE_ID   ASC);

CREATE  INDEX XIF_COMP_PROP_PROP_NMTY ON COMPONENT_PROPERTY
(COMPONENT_PROPERTY_NAME   ASC,COMPONENT_PROPERTY_TYPE   ASC);

CREATE  INDEX XIF_COMP_PROP_SLTFUNCID ON COMPONENT_PROPERTY
(SLOT_FUNCTION   ASC);

CREATE  INDEX XIF_COMP_PROP_SLT_SLT_ID ON COMPONENT_PROPERTY
(SLOT_ID   ASC);

CREATE  INDEX XIF_COMP_PROP_SLT_TYP_ID ON COMPONENT_PROPERTY
(SLOT_TYPE_ID   ASC);

/***********************************************
 * Table: COMPONENT_TYPE
 ***********************************************/

CREATE TABLE COMPONENT_TYPE
(
	COMPONENT_TYPE_ID    NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	COMPANY_ID           NUMBER NULL ,
	MODEL                VARCHAR2(255) NULL ,
	SLOT_TYPE_ID         NUMBER NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	PART_NUMBER          VARCHAR2(255) NULL ,
	IS_REMOVABLE         CHAR(1) NOT NULL ,
	ASSET_PERMITTED      CHAR(1) NOT NULL ,
	IS_RACK_MOUNTABLE    CHAR(1) NOT NULL ,
	IS_VIRTUAL_COMPONENT CHAR(1) NOT NULL ,
	SIZE_UNITS           varchar2(50) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_COMPONENT_TYPE ON COMPONENT_TYPE
(COMPONENT_TYPE_ID   ASC);

ALTER TABLE COMPONENT_TYPE
	ADD CONSTRAINT  PK_COMPONENT_TYPE PRIMARY KEY (COMPONENT_TYPE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_COMPONENT_TYPE  ENABLE  VALIDATE;

ALTER TABLE COMPONENT_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1062207751 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE COMPONENT_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1061420573 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE COMPONENT_TYPE
	MODIFY IS_REMOVABLE CONSTRAINT  CHECK_YES_NO_1730011385 CHECK (IS_REMOVABLE IN ('Y', 'N'));

ALTER TABLE COMPONENT_TYPE
	MODIFY ASSET_PERMITTED CONSTRAINT  CHECK_YES_NO_53094976 CHECK (ASSET_PERMITTED IN ('Y', 'N'));

ALTER TABLE COMPONENT_TYPE
	MODIFY IS_RACK_MOUNTABLE CONSTRAINT  CHECK_YES_NO_25197360 CHECK (IS_RACK_MOUNTABLE IN ('Y', 'N'));

ALTER TABLE COMPONENT_TYPE
	MODIFY IS_VIRTUAL_COMPONENT CONSTRAINT  CHECK_YES_NO_981718444 CHECK (IS_VIRTUAL_COMPONENT IN ('Y', 'N'));

ALTER TABLE COMPONENT_TYPE
	MODIFY IS_REMOVABLE DEFAULT 'N';

ALTER TABLE COMPONENT_TYPE
	MODIFY SIZE_UNITS DEFAULT 0;

ALTER TABLE COMPONENT_TYPE
	MODIFY ASSET_PERMITTED DEFAULT 'N';

ALTER TABLE COMPONENT_TYPE
	MODIFY IS_RACK_MOUNTABLE DEFAULT 'N';

ALTER TABLE COMPONENT_TYPE
	MODIFY IS_VIRTUAL_COMPONENT DEFAULT 'N';

CREATE  INDEX XIF_COMPONENT_TYPE_COMPANY_ID ON COMPONENT_TYPE
(COMPANY_ID   ASC);

CREATE  INDEX XIF_COMPONENT_TYPE_SLT_TYPE_ID ON COMPONENT_TYPE
(SLOT_TYPE_ID   ASC);

/***********************************************
 * Table: COMPONENT_TYPE_COMPONENT_FUNC
 ***********************************************/

CREATE TABLE COMPONENT_TYPE_COMPONENT_FUNC
(
	COMPONENT_FUNCTION   VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	COMPONENT_TYPE_ID    NUMBER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_COMPONENT_TYPE_COMPONENT_FU ON COMPONENT_TYPE_COMPONENT_FUNC
(COMPONENT_FUNCTION   ASC,COMPONENT_TYPE_ID   ASC);

ALTER TABLE COMPONENT_TYPE_COMPONENT_FUNC
	ADD CONSTRAINT  PK_COMPONENT_TYPE_COMPONENT_FU PRIMARY KEY (COMPONENT_FUNCTION,COMPONENT_TYPE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_COMPONENT_TYPE_COMPONENT_FU  ENABLE  VALIDATE;

ALTER TABLE COMPONENT_TYPE_COMPONENT_FUNC
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_185469650 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE COMPONENT_TYPE_COMPONENT_FUNC
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_184682472 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_CMPTYPCF_COMP_FUNC ON COMPONENT_TYPE_COMPONENT_FUNC
(COMPONENT_FUNCTION   ASC);

CREATE  INDEX XIF_CMPTYPECF_COMP_TYP_ID ON COMPONENT_TYPE_COMPONENT_FUNC
(COMPONENT_TYPE_ID   ASC);

/***********************************************
 * Table: COMPONENT_TYPE_SLOT_TMPLT
 ***********************************************/

CREATE TABLE COMPONENT_TYPE_SLOT_TMPLT
(
	COMPONENT_TYPE_SLOT_TMPLT_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	COMPONENT_TYPE_ID    NUMBER NOT NULL ,
	SLOT_TYPE_ID         NUMBER NOT NULL ,
	SLOT_NAME_TEMPLATE   varchar2(50) NOT NULL ,
	CHILD_SLOT_NAME_TEMPLATE varchar2(50) NULL ,
	CHILD_SLOT_OFFSET    INTEGER NULL ,
	SLOT_INDEX           INTEGER NULL ,
	PHYSICAL_LABEL       varchar2(50) NULL ,
	SLOT_X_OFFSET        INTEGER NULL ,
	SLOT_Y_OFFSET        INTEGER NULL ,
	SLOT_Z_OFFSET        INTEGER NULL ,
	SLOT_SIDE            varchar2(50) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_COMPONENT_TYPE_SLOT_TMPLT ON COMPONENT_TYPE_SLOT_TMPLT
(COMPONENT_TYPE_SLOT_TMPLT_ID   ASC);

ALTER TABLE COMPONENT_TYPE_SLOT_TMPLT
	ADD CONSTRAINT  PK_COMPONENT_TYPE_SLOT_TMPLT PRIMARY KEY (COMPONENT_TYPE_SLOT_TMPLT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_COMPONENT_TYPE_SLOT_TMPLT  ENABLE  VALIDATE;

ALTER TABLE COMPONENT_TYPE_SLOT_TMPLT
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1197293853 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE COMPONENT_TYPE_SLOT_TMPLT
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1196506675 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE COMPONENT_TYPE_SLOT_TMPLT
	MODIFY SLOT_SIDE DEFAULT 'FRONT';

CREATE  INDEX XIF_COMP_TYP_SLT_TMPLT_CMPTYPI ON COMPONENT_TYPE_SLOT_TMPLT
(COMPONENT_TYPE_ID   ASC);

CREATE  INDEX XIF_COMP_TYP_SLT_TMPLT_SLTTYPI ON COMPONENT_TYPE_SLOT_TMPLT
(SLOT_TYPE_ID   ASC);

/***********************************************
 * Table: CONTRACT
 ***********************************************/

CREATE TABLE CONTRACT
(
	CONTRACT_ID          NUMBER(13,0) NOT NULL ,
	COMPANY_ID           NUMBER NOT NULL ,
	CONTRACT_NAME        VARCHAR2(255) NOT NULL ,
	VENDOR_CONTRACT_NAME VARCHAR2(255) NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	CONTRACT_TERMINATION_DATE DATE NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_CONTRACT ON CONTRACT
(CONTRACT_ID   ASC);

ALTER TABLE CONTRACT
	ADD CONSTRAINT  PK_CONTRACT PRIMARY KEY (CONTRACT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_CONTRACT  ENABLE  VALIDATE;

ALTER TABLE CONTRACT
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1867012448 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE CONTRACT
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1867799626 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIFCONTRACT_COMPANY_ID ON CONTRACT
(COMPANY_ID   ASC);

/***********************************************
 * Table: CONTRACT_TYPE
 ***********************************************/

CREATE TABLE CONTRACT_TYPE
(
	CONTRACT_ID          NUMBER(13,0) NOT NULL ,
	CONTRACT_TYPE        VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_CONTRACT_TYPE ON CONTRACT_TYPE
(CONTRACT_ID   ASC,CONTRACT_TYPE   ASC);

ALTER TABLE CONTRACT_TYPE
	ADD CONSTRAINT  PK_CONTRACT_TYPE PRIMARY KEY (CONTRACT_ID,CONTRACT_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_CONTRACT_TYPE  ENABLE  VALIDATE;

ALTER TABLE CONTRACT_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1096630031 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE CONTRACT_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1095842853 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_CONTRACT_CONTRACT_ID ON CONTRACT_TYPE
(CONTRACT_ID   ASC);

CREATE  INDEX XIF_CONTRACT_CONTRACT_TYPE ON CONTRACT_TYPE
(CONTRACT_TYPE   ASC);

/***********************************************
 * Table: DEPARTMENT
 ***********************************************/

CREATE TABLE DEPARTMENT
(
	ACCOUNT_COLLECTION_ID NUMBER NOT NULL ,
	COMPANY_ID           NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	MANAGER_ACCOUNT_ID   NUMBER NULL ,
	IS_ACTIVE            CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DEPT_CODE            VARCHAR2(30 BYTE) NULL ,
	COST_CENTER          VARCHAR2(10 BYTE) NULL ,
	COST_CENTER_NAME     varchar2(50) NULL ,
	COST_CENTER_NUMBER   INTEGER NULL ,
	DEFAULT_BADGE_TYPE_ID NUMBER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN DEPARTMENT.COST_CENTER IS 'THIS COLUMN IS DEPRECATED.  It will be removed >= 0.66.  Please use _name and _number.';

CREATE UNIQUE INDEX PK_DEPTID ON DEPARTMENT
(ACCOUNT_COLLECTION_ID   ASC);

ALTER TABLE DEPARTMENT
	ADD CONSTRAINT  PK_DEPTID PRIMARY KEY (ACCOUNT_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DEPTID  ENABLE  VALIDATE;

ALTER TABLE DEPARTMENT
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_DEPT CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEPARTMENT
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_DEPT CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEPARTMENT
	MODIFY IS_ACTIVE CONSTRAINT  CKC_IS_ACTIVE_DEPT CHECK (IS_ACTIVE in ('Y','N') and IS_ACTIVE = upper(IS_ACTIVE))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEPARTMENT
	MODIFY IS_ACTIVE DEFAULT 'Y';

CREATE  INDEX XIF6DEPARTMENT ON DEPARTMENT
(MANAGER_ACCOUNT_ID   ASC);

CREATE  INDEX IDX_DEPT_DEPTCODE_COMPANYID ON DEPARTMENT
(DEPT_CODE   ASC,COMPANY_ID   ASC);

CREATE  INDEX XIFDEPT_BADGE_TYPE ON DEPARTMENT
(DEFAULT_BADGE_TYPE_ID   ASC);

CREATE  INDEX XIFDEPT_COMPANY ON DEPARTMENT
(COMPANY_ID   ASC);

/***********************************************
 * Table: DEVICE
 ***********************************************/

CREATE TABLE DEVICE
(
	DEVICE_ID            NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	COMPONENT_ID         NUMBER NULL ,
	DEVICE_TYPE_ID       NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ASSET_ID             NUMBER(13,0) NULL ,
	DEVICE_NAME          VARCHAR2(255 BYTE) NULL ,
	SITE_CODE            VARCHAR2(50 BYTE) NULL ,
	IDENTIFYING_DNS_RECORD_ID NUMBER NULL ,
	HOST_ID              VARCHAR2(255 BYTE) NULL ,
	PHYSICAL_LABEL       VARCHAR2(255 BYTE) NULL ,
	RACK_LOCATION_ID     NUMBER NULL ,
	CHASSIS_LOCATION_ID  NUMBER NULL ,
	PARENT_DEVICE_ID     NUMBER NULL ,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DEVICE_STATUS        VARCHAR2(50 BYTE) CONSTRAINT SYS_C0069053 NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	OPERATING_SYSTEM_ID  NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SERVICE_ENVIRONMENT_ID NUMBER(13,0) NOT NULL ,
	VOE_ID               NUMBER NULL ,
	AUTO_MGMT_PROTOCOL   VARCHAR2(50 BYTE) NULL ,
	VOE_SYMBOLIC_TRACK_ID NUMBER NULL ,
	IS_LOCALLY_MANAGED   CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	IS_MONITORED         CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	IS_VIRTUAL_DEVICE    CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SHOULD_FETCH_CONFIG  CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATE_IN_SERVICE      DATE NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_DEVICE ON DEVICE
(DEVICE_ID   ASC);

ALTER TABLE DEVICE
	ADD CONSTRAINT  PK_DEVICE PRIMARY KEY (DEVICE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DEVICE  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_DEVICE_CHASSIS_LOCATION_ID ON DEVICE
(CHASSIS_LOCATION_ID   ASC);

ALTER TABLE DEVICE
ADD CONSTRAINT  AK_DEVICE_CHASSIS_LOCATION_ID UNIQUE (CHASSIS_LOCATION_ID);

CREATE UNIQUE INDEX AK_DEVICE_RACK_LOCATION_ID ON DEVICE
(RACK_LOCATION_ID   ASC);

ALTER TABLE DEVICE
ADD CONSTRAINT  AK_DEVICE_RACK_LOCATION_ID UNIQUE (RACK_LOCATION_ID);

ALTER TABLE DEVICE
	MODIFY DEVICE_ID CONSTRAINT  SYS_C0069051 CHECK ("DEVICE_ID" IS NOT
NULL)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE
	MODIFY DEVICE_TYPE_ID CONSTRAINT  SYS_C0069052 CHECK ("DEVICE_TYPE_ID" IS NOT
NULL)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE
	MODIFY OPERATING_SYSTEM_ID CONSTRAINT  DEV_OSID_NOTNULL CHECK ("OPERATING_SYSTEM_ID" IS
NOT NULL)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE
	MODIFY IS_MONITORED CONSTRAINT  CKC_IS_MONITORED_DEVICE CHECK (IS_MONITORED in ('Y','N') and IS_MONITORED = upper(IS_MONITORED))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE
	MODIFY IS_MONITORED CONSTRAINT  SYS_C0069057 CHECK ("IS_MONITORED" IS NOT
NULL)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE
	MODIFY IS_VIRTUAL_DEVICE CONSTRAINT  CKC_IS_VIRTUAL_DEVICE_DEVICE CHECK (IS_VIRTUAL_DEVICE in ('Y','N') and IS_VIRTUAL_DEVICE = upper(IS_VIRTUAL_DEVICE))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE
	MODIFY IS_VIRTUAL_DEVICE CONSTRAINT  SYS_C0069059 CHECK ("IS_VIRTUAL_DEVICE" IS
NOT NULL)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE
	MODIFY SHOULD_FETCH_CONFIG CONSTRAINT  CKC_SHOULD_FETCH_CONF_DEVICE CHECK (SHOULD_FETCH_CONFIG in ('Y','N') and SHOULD_FETCH_CONFIG = upper(SHOULD_FETCH_CONFIG))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE
	MODIFY SHOULD_FETCH_CONFIG CONSTRAINT  SYS_C0069060 CHECK ("SHOULD_FETCH_CONFIG" IS
NOT NULL)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_DEVICE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_DEVICE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE
	MODIFY IS_LOCALLY_MANAGED CONSTRAINT  CKC_IS_LOCALLY_MANAGE_DEVICE CHECK (IS_LOCALLY_MANAGED in ('Y','N') and IS_LOCALLY_MANAGED = upper(IS_LOCALLY_MANAGED))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE
	MODIFY OPERATING_SYSTEM_ID DEFAULT 0;

ALTER TABLE DEVICE
	MODIFY IS_VIRTUAL_DEVICE DEFAULT 'N';

ALTER TABLE DEVICE
	MODIFY SHOULD_FETCH_CONFIG DEFAULT 'Y';

ALTER TABLE DEVICE
	MODIFY IS_LOCALLY_MANAGED DEFAULT 'Y';

CREATE  INDEX IDX_DEVICE_TYPE_LOCATION ON DEVICE
(DEVICE_TYPE_ID   ASC);

CREATE  INDEX IDX_DEV_ISLCLYMGD ON DEVICE
(IS_LOCALLY_MANAGED   ASC);

CREATE    BITMAP INDEX IDX_DEV_ISMONITORED ON DEVICE
(IS_MONITORED   ASC);

CREATE  INDEX XIF_DEVICE_ASSET_ID ON DEVICE
(ASSET_ID   ASC);

CREATE  INDEX XIF_DEVICE_COMP_ID ON DEVICE
(COMPONENT_ID   ASC);

CREATE    BITMAP INDEX XIF_DEVICE_DEV_VAL_STATUS ON DEVICE
(DEVICE_STATUS   ASC);

CREATE    BITMAP INDEX XIF_DEVICE_DEV_V_SVCENV ON DEVICE
(SERVICE_ENVIRONMENT_ID   ASC);

CREATE  INDEX XIF_DEVICE_FK_VOE ON DEVICE
(VOE_ID   ASC);

CREATE  INDEX XIF_DEVICE_ID_DNSRECORD ON DEVICE
(IDENTIFYING_DNS_RECORD_ID   ASC);

CREATE  INDEX XIF_DEVICE_SITE_CODE ON DEVICE
(SITE_CODE   ASC);

CREATE  INDEX XIF_DEV_CHASS_LOC_ID_MOD_ENFC ON DEVICE
(CHASSIS_LOCATION_ID   ASC,PARENT_DEVICE_ID   ASC,DEVICE_TYPE_ID   ASC);

CREATE  INDEX XIF_DEV_OS_ID ON DEVICE
(OPERATING_SYSTEM_ID   ASC);

/***********************************************
 * Table: DEVICE_COLLECTION
 ***********************************************/

CREATE TABLE DEVICE_COLLECTION
(
	DEVICE_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DEVICE_COLLECTION_NAME VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DEVICE_COLLECTION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX AK_UQ_DEVICECOLL_NAME_TYPE ON DEVICE_COLLECTION
(DEVICE_COLLECTION_NAME   ASC,DEVICE_COLLECTION_TYPE   ASC);

CREATE UNIQUE INDEX PK_DEVICE_COLLECTION ON DEVICE_COLLECTION
(DEVICE_COLLECTION_ID   ASC);

ALTER TABLE DEVICE_COLLECTION
	ADD CONSTRAINT  PK_DEVICE_COLLECTION PRIMARY KEY (DEVICE_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DEVICE_COLLECTION  ENABLE  VALIDATE;

ALTER TABLE DEVICE_COLLECTION
ADD CONSTRAINT  AK_UQ_DEVICECOLL_NAME_TYPE UNIQUE (DEVICE_COLLECTION_NAME,DEVICE_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_UQ_DEVICECOLL_NAME_TYPE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_COLLECTION
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_DEVICE_COLLECTION CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_COLLECTION
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_DEVICE_COLLECTION CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE    BITMAP INDEX IDX_DEVCOLL_DEVCOLLTYPE ON DEVICE_COLLECTION
(DEVICE_COLLECTION_TYPE   ASC);

/***********************************************
 * Table: DEVICE_COLLECTION_ASSIGND_CERT
 ***********************************************/

CREATE TABLE DEVICE_COLLECTION_ASSIGND_CERT
(
	DEVICE_COLLECTION_ID NUMBER(13,0) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	X509_CERT_ID         NUMBER(13,0) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	X509_KEY_USG         VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	X509_FILE_FORMAT     VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	FILE_LOCATION_PATH   VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	KEY_TOOL_LABEL       VARCHAR2(255 BYTE) NULL ,
	FILE_ACCESS_MODE     NUMBER(4) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	FILE_OWNER_ACCOUNT_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	FILE_GROUP_ACCT_COLLECTION_ID NUMBER NOT NULL ,
	FILE_PASSPHRASE_PATH VARCHAR2(255 BYTE) NULL ,
	KEY_USAGE_REASON_FOR_ASSIGN VARCHAR2(50 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(255) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE DEVICE_COLLECTION_ASSIGND_CERT IS 'Actual  assignment of the usage category APPLICATION Certificates to Device Collections.';

COMMENT ON COLUMN DEVICE_COLLECTION_ASSIGND_CERT.X509_CERT_ID IS 'Uniquely identifies Certificate';

COMMENT ON COLUMN DEVICE_COLLECTION_ASSIGND_CERT.X509_KEY_USG IS 'Name of the Certificate.';

COMMENT ON COLUMN DEVICE_COLLECTION_ASSIGND_CERT.X509_FILE_FORMAT IS 'Format Name of the file containing Certificate information. Example; keytool, rsa';

COMMENT ON COLUMN DEVICE_COLLECTION_ASSIGND_CERT.FILE_LOCATION_PATH IS 'Alphanumeric representation of the path leading to the file.';

COMMENT ON COLUMN DEVICE_COLLECTION_ASSIGND_CERT.KEY_TOOL_LABEL IS 'Alphanumeric representation of the label attached to the certificate by Key Tool';

COMMENT ON COLUMN DEVICE_COLLECTION_ASSIGND_CERT.FILE_ACCESS_MODE IS 'Numeric representation of the File Access Mode.';

COMMENT ON COLUMN DEVICE_COLLECTION_ASSIGND_CERT.FILE_OWNER_ACCOUNT_ID IS 'Identifier of the file owner.';

COMMENT ON COLUMN DEVICE_COLLECTION_ASSIGND_CERT.FILE_GROUP_ACCT_COLLECTION_ID IS 'Identifies user collection that corresponds to a unix group for the file to be owned by';

COMMENT ON COLUMN DEVICE_COLLECTION_ASSIGND_CERT.KEY_USAGE_REASON_FOR_ASSIGN IS 'Uniquely identifies and indicates reason for assignment.';

CREATE UNIQUE INDEX PK_DEVICE_COLLECTION_ASSIGNED ON DEVICE_COLLECTION_ASSIGND_CERT
(DEVICE_COLLECTION_ID   ASC,X509_CERT_ID   ASC,X509_KEY_USG   ASC);

ALTER TABLE DEVICE_COLLECTION_ASSIGND_CERT
	ADD CONSTRAINT  PK_DEVICE_COLLECTION_ASSIGNED PRIMARY KEY (DEVICE_COLLECTION_ID,X509_CERT_ID,X509_KEY_USG)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DEVICE_COLLECTION_ASSIGNED  ENABLE  VALIDATE;

/***********************************************
 * Table: DEVICE_COLLECTION_DEVICE
 ***********************************************/

CREATE TABLE DEVICE_COLLECTION_DEVICE
(
	DEVICE_ID            NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DEVICE_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DEVICE_ID_RANK       INTEGER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_DEVICE_COLLECTION_DEVICE ON DEVICE_COLLECTION_DEVICE
(DEVICE_ID   ASC,DEVICE_COLLECTION_ID   ASC);

ALTER TABLE DEVICE_COLLECTION_DEVICE
	ADD CONSTRAINT  PK_DEVICE_COLLECTION_DEVICE PRIMARY KEY (DEVICE_ID,DEVICE_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DEVICE_COLLECTION_DEVICE  ENABLE  VALIDATE;

CREATE UNIQUE INDEX XAKDEV_COLL_DEV_RANK ON DEVICE_COLLECTION_DEVICE
(DEVICE_COLLECTION_ID   ASC,DEVICE_ID_RANK   ASC);

ALTER TABLE DEVICE_COLLECTION_DEVICE
ADD CONSTRAINT  AK_DEV_COLL_DEV_RANK UNIQUE (DEVICE_COLLECTION_ID,DEVICE_ID_RANK);

ALTER TABLE DEVICE_COLLECTION_DEVICE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_DEVICE_C CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_COLLECTION_DEVICE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_DEVICE_C CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX IX_DEV_COL_DEV_DEV_COLID ON DEVICE_COLLECTION_DEVICE
(DEVICE_COLLECTION_ID   ASC);

/***********************************************
 * Table: DEVICE_COLLECTION_HIER
 ***********************************************/

CREATE TABLE DEVICE_COLLECTION_HIER
(
	PARENT_DEVICE_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DEVICE_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_DEVICE_COLLECTION_HIER ON DEVICE_COLLECTION_HIER
(PARENT_DEVICE_COLLECTION_ID   ASC,DEVICE_COLLECTION_ID   ASC);

ALTER TABLE DEVICE_COLLECTION_HIER
	ADD CONSTRAINT  PK_DEVICE_COLLECTION_HIER PRIMARY KEY (PARENT_DEVICE_COLLECTION_ID,DEVICE_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DEVICE_COLLECTION_HIER  ENABLE  VALIDATE;

ALTER TABLE DEVICE_COLLECTION_HIER
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_DEVICE_COL_HIER CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_COLLECTION_HIER
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_DEVICE_COLL_HIER CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: DEVICE_COLLECTION_SSH_KEY
 ***********************************************/

CREATE TABLE DEVICE_COLLECTION_SSH_KEY
(
	SSH_KEY_ID           NUMBER(13,0) NOT NULL ,
	DEVICE_COLLECTION_ID NUMBER NOT NULL ,
	ACCOUNT_COLLECTION_ID NUMBER NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN DEVICE_COLLECTION_SSH_KEY.SSH_KEY_ID IS 'SSH Public Key that gets placed in a user''s authorized keys file';

COMMENT ON COLUMN DEVICE_COLLECTION_SSH_KEY.DEVICE_COLLECTION_ID IS 'Device collection that gets this key assigned to users';

COMMENT ON COLUMN DEVICE_COLLECTION_SSH_KEY.ACCOUNT_COLLECTION_ID IS 'Destination account(s) that get the ssh keys';

CREATE UNIQUE INDEX PK_SSH_KEY ON DEVICE_COLLECTION_SSH_KEY
(SSH_KEY_ID   ASC,DEVICE_COLLECTION_ID   ASC,ACCOUNT_COLLECTION_ID   ASC);

ALTER TABLE DEVICE_COLLECTION_SSH_KEY
	ADD CONSTRAINT  PK_DEVICE_COLLECTION_SSH_KEY PRIMARY KEY (SSH_KEY_ID,DEVICE_COLLECTION_ID,ACCOUNT_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SSH_KEY  ENABLE  VALIDATE;

ALTER TABLE DEVICE_COLLECTION_SSH_KEY
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1012825663 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_COLLECTION_SSH_KEY
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1012038485 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1DEVICE_COLLECTION_SSH_KEY ON DEVICE_COLLECTION_SSH_KEY
(SSH_KEY_ID   ASC);

CREATE  INDEX XIF2DEVICE_COLLECTION_SSH_KEY ON DEVICE_COLLECTION_SSH_KEY
(DEVICE_COLLECTION_ID   ASC);

CREATE  INDEX XIF3DEVICE_COLLECTION_SSH_KEY ON DEVICE_COLLECTION_SSH_KEY
(ACCOUNT_COLLECTION_ID   ASC);

/***********************************************
 * Table: DEVICE_ENCAPSULATION_DOMAIN
 ***********************************************/

CREATE TABLE DEVICE_ENCAPSULATION_DOMAIN
(
	DEVICE_ID            NUMBER NOT NULL ,
	ENCAPSULATION_TYPE   VARCHAR2(50 BYTE) NOT NULL ,
	ENCAPSULATION_DOMAIN VARCHAR2(50 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_DEVICE_ENCAPSULATION_DOMAIN ON DEVICE_ENCAPSULATION_DOMAIN
(DEVICE_ID   ASC,ENCAPSULATION_TYPE   ASC);

ALTER TABLE DEVICE_ENCAPSULATION_DOMAIN
	ADD CONSTRAINT  PK_DEVICE_ENCAPSULATION_DOMAIN PRIMARY KEY (DEVICE_ID,ENCAPSULATION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DEVICE_ENCAPSULATION_DOMAIN  ENABLE  VALIDATE;

ALTER TABLE DEVICE_ENCAPSULATION_DOMAIN
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1781153305 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_ENCAPSULATION_DOMAIN
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1780366127 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_DEV_ENCAP_DOMAIN_DEVID ON DEVICE_ENCAPSULATION_DOMAIN
(DEVICE_ID   ASC);

CREATE  INDEX XIF_DEV_ENCAP_DOMAIN_ENCAPTYP ON DEVICE_ENCAPSULATION_DOMAIN
(ENCAPSULATION_TYPE   ASC);

CREATE  INDEX XIF_DEV_ENCAP_DOMAIN_ENC_DOMTY ON DEVICE_ENCAPSULATION_DOMAIN
(ENCAPSULATION_DOMAIN   ASC,ENCAPSULATION_TYPE   ASC);

/***********************************************
 * Table: DEVICE_LAYER2_NETWORK
 ***********************************************/

CREATE TABLE DEVICE_LAYER2_NETWORK
(
	DEVICE_ID            NUMBER NOT NULL ,
	LAYER2_NETWORK_ID    NUMBER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_DEVICE_LAYER2_NETWORK ON DEVICE_LAYER2_NETWORK
(DEVICE_ID   ASC,LAYER2_NETWORK_ID   ASC);

ALTER TABLE DEVICE_LAYER2_NETWORK
	ADD CONSTRAINT  PK_DEVICE_LAYER2_NETWORK PRIMARY KEY (DEVICE_ID,LAYER2_NETWORK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DEVICE_LAYER2_NETWORK  ENABLE  VALIDATE;

ALTER TABLE DEVICE_LAYER2_NETWORK
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1951418194 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_LAYER2_NETWORK
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1952205372 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_DEVICE_L2_NET_DEVID ON DEVICE_LAYER2_NETWORK
(DEVICE_ID   ASC);

CREATE  INDEX XIF_DEVICE_L2_NET_L2NETID ON DEVICE_LAYER2_NETWORK
(LAYER2_NETWORK_ID   ASC);

/***********************************************
 * Table: DEVICE_MANAGEMENT_CONTROLLER
 ***********************************************/

CREATE TABLE DEVICE_MANAGEMENT_CONTROLLER
(
	MANAGER_DEVICE_ID    NUMBER NOT NULL ,
	DEVICE_ID            NUMBER NOT NULL ,
	DEVICE_MGMT_CONTROL_TYPE VARCHAR2(255 BYTE) NOT NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_DEVICE_MANAGEMENT_CONTROLLE ON DEVICE_MANAGEMENT_CONTROLLER
(MANAGER_DEVICE_ID   ASC,DEVICE_ID   ASC);

ALTER TABLE DEVICE_MANAGEMENT_CONTROLLER
	ADD CONSTRAINT  PK_DEVICE_MANAGEMENT_CONTROLLE PRIMARY KEY (MANAGER_DEVICE_ID,DEVICE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DEVICE_MANAGEMENT_CONTROLLE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_MANAGEMENT_CONTROLLER
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_690102572 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_MANAGEMENT_CONTROLLER
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_689315394 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1DEVICE_MANAGEMENT_CONTROLL ON DEVICE_MANAGEMENT_CONTROLLER
(MANAGER_DEVICE_ID   ASC);

CREATE  INDEX XIF2DEVICE_MANAGEMENT_CONTROLL ON DEVICE_MANAGEMENT_CONTROLLER
(DEVICE_ID   ASC);

CREATE  INDEX XIF3DEVICE_MANAGEMENT_CONTROLL ON DEVICE_MANAGEMENT_CONTROLLER
(DEVICE_MGMT_CONTROL_TYPE   ASC);

/***********************************************
 * Table: DEVICE_NOTE
 ***********************************************/

CREATE TABLE DEVICE_NOTE
(
	NOTE_ID              NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DEVICE_ID            NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NOTE_TEXT            VARCHAR2(4000 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NOTE_DATE            DATE NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NOTE_USER            VARCHAR2(30 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_DEVICE_NOTE ON DEVICE_NOTE
(NOTE_ID   ASC);

ALTER TABLE DEVICE_NOTE
	ADD CONSTRAINT  PK_DEVICE_NOTE PRIMARY KEY (NOTE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DEVICE_NOTE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_NOTE
	MODIFY NOTE_USER CONSTRAINT  CKC_NOTE_USER_DEVICE_N CHECK (NOTE_USER = upper(NOTE_USER))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_NOTE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_DEV_NOTES CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_NOTE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_DEV_NOTES CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX IDX_DEVNOTE_DEVID ON DEVICE_NOTE
(DEVICE_ID   ASC);

/***********************************************
 * Table: DEVICE_SSH_KEY
 ***********************************************/

CREATE TABLE DEVICE_SSH_KEY
(
	DEVICE_ID            NUMBER NOT NULL ,
	SSH_KEY_ID           NUMBER(13,0) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_DEVICE_SSH_KEY ON DEVICE_SSH_KEY
(DEVICE_ID   ASC,SSH_KEY_ID   ASC);

ALTER TABLE DEVICE_SSH_KEY
	ADD CONSTRAINT  PK_DEVICE_SSH_KEY PRIMARY KEY (DEVICE_ID,SSH_KEY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DEVICE_SSH_KEY  ENABLE  VALIDATE;

ALTER TABLE DEVICE_SSH_KEY
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_291510301 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_SSH_KEY
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_290723123 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1DEVICE_SSH_KEY ON DEVICE_SSH_KEY
(SSH_KEY_ID   ASC);

CREATE  INDEX XIF2DEVICE_SSH_KEY ON DEVICE_SSH_KEY
(DEVICE_ID   ASC);

/***********************************************
 * Table: DEVICE_TICKET
 ***********************************************/

CREATE TABLE DEVICE_TICKET
(
	DEVICE_ID            NUMBER NOT NULL ,
	TICKETING_SYSTEM_ID  NUMBER NOT NULL ,
	TICKET_NUMBER        VARCHAR2(30) NOT NULL ,
	DEVICE_TICKET_NOTES  VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE DEVICE_TICKET IS 'associates devices and trouble tickets together (external to jazzhands)';

COMMENT ON COLUMN DEVICE_TICKET.TICKET_NUMBER IS 'trouble ticketing system id';

COMMENT ON COLUMN DEVICE_TICKET.DEVICE_TICKET_NOTES IS 'free form notes about the ticket/device association';

CREATE UNIQUE INDEX PK_DEVICE_TICKET ON DEVICE_TICKET
(DEVICE_ID   ASC,TICKETING_SYSTEM_ID   ASC,TICKET_NUMBER   ASC);

ALTER TABLE DEVICE_TICKET
	ADD CONSTRAINT  PK_DEVICE_TICKET PRIMARY KEY (DEVICE_ID,TICKETING_SYSTEM_ID,TICKET_NUMBER);

CREATE  INDEX XIFDEV_TKT_DEV_ID ON DEVICE_TICKET
(DEVICE_ID   ASC);

CREATE  INDEX XIFDEV_TKT_TKT_SYSTEM ON DEVICE_TICKET
(TICKETING_SYSTEM_ID   ASC);

/***********************************************
 * Table: DEVICE_TYPE
 ***********************************************/

CREATE TABLE DEVICE_TYPE
(
	DEVICE_TYPE_ID       NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	COMPONENT_TYPE_ID    NUMBER NULL ,
	DEVICE_TYPE_NAME     varchar2(50) NOT NULL ,
	TEMPLATE_DEVICE_ID   NUMBER NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	COMPANY_ID           NUMBER NULL ,
	MODEL                VARCHAR2(255 BYTE) NOT NULL ,
	DEVICE_TYPE_DEPTH_IN_CM CHAR(18) NULL ,
	PROCESSOR_ARCHITECTURE VARCHAR2(50 BYTE) NULL ,
	CONFIG_FETCH_TYPE    VARCHAR2(50 BYTE) NULL ,
	RACK_UNITS           NUMBER NULL ,
	HAS_802_3_INTERFACE  CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	HAS_802_11_INTERFACE CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SNMP_CAPABLE         CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	IS_CHASSIS           CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE DEVICE_TYPE IS 'Conceptual device type.  This represents how it is typically referred to rather than a specific model number.  There may be many models (components) that are represented by one device type.';

COMMENT ON COLUMN DEVICE_TYPE.COMPONENT_TYPE_ID IS 'reference to the type of hardware that underlies this type';

COMMENT ON COLUMN DEVICE_TYPE.TEMPLATE_DEVICE_ID IS 'foreign key to a device that represents the typical/initial/minimum configuration of a given device type.  This device is typically non real but a template.';

COMMENT ON COLUMN DEVICE_TYPE.DEVICE_TYPE_NAME IS 'Human readable name of the device type.  The company and a model can be gleaned from component.';

CREATE UNIQUE INDEX PK_DEVICE_TYPE ON DEVICE_TYPE
(DEVICE_TYPE_ID   ASC);

ALTER TABLE DEVICE_TYPE
	ADD CONSTRAINT  PK_DEVICE_TYPE PRIMARY KEY (DEVICE_TYPE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DEVICE_TYPE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_TYPE
	MODIFY HAS_802_3_INTERFACE CONSTRAINT  CKC_HAS_802_3_INTERFA_DEVICE_T CHECK (HAS_802_3_INTERFACE IN ('Y', 'N'))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_TYPE
	MODIFY HAS_802_11_INTERFACE CONSTRAINT  CKC_HAS_802_11_INTERF_DEVICE_T CHECK (HAS_802_11_INTERFACE IN ('Y', 'N'))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_TYPE
	MODIFY SNMP_CAPABLE CONSTRAINT  CKC_SNMP_CAPABLE_DEVICE_T CHECK (SNMP_CAPABLE IN ('Y', 'N'))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_DEV_TYPE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_DEV_TYPE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_TYPE
	MODIFY IS_CHASSIS CONSTRAINT  CKC_DEVTYP_ISCHS CHECK (IS_CHASSIS IN ('Y', 'N'));

ALTER TABLE DEVICE_TYPE
	MODIFY HAS_802_3_INTERFACE DEFAULT 'N';

ALTER TABLE DEVICE_TYPE
	MODIFY HAS_802_11_INTERFACE DEFAULT 'N';

ALTER TABLE DEVICE_TYPE
	MODIFY SNMP_CAPABLE DEFAULT 'N';

ALTER TABLE DEVICE_TYPE
	MODIFY IS_CHASSIS DEFAULT 'N';

CREATE  INDEX XIF4DEVICE_TYPE ON DEVICE_TYPE
(COMPANY_ID   ASC);

CREATE  INDEX XIF_DEV_TYP_TMPLT_DEV_TYP_ID ON DEVICE_TYPE
(TEMPLATE_DEVICE_ID   ASC);

CREATE  INDEX XIF_FEVTYP_COMPONENT_ID ON DEVICE_TYPE
(COMPONENT_TYPE_ID   ASC);

/***********************************************
 * Table: DEVICE_TYPE_MODULE
 ***********************************************/

CREATE TABLE DEVICE_TYPE_MODULE
(
	DEVICE_TYPE_ID       NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DEVICE_TYPE_MODULE_NAME VARCHAR2(255) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DEVICE_TYPE_X_OFFSET CHAR(18) NULL ,
	DEVICE_TYPE_Y_OFFSET CHAR(18) NULL ,
	DEVICE_TYPE_Z_OFFSET CHAR(18) NULL ,
	DEVICE_TYPE_SIDE     CHAR(18) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN DEVICE_TYPE_MODULE.DEVICE_TYPE_ID IS 'Device Type of the Container Device (Chassis)';

COMMENT ON COLUMN DEVICE_TYPE_MODULE.DEVICE_TYPE_MODULE_NAME IS 'Name used to describe the module programatically.';

COMMENT ON COLUMN DEVICE_TYPE_MODULE.DEVICE_TYPE_X_OFFSET IS 'Horizontal offset from left to right';

COMMENT ON COLUMN DEVICE_TYPE_MODULE.DEVICE_TYPE_Y_OFFSET IS 'Vertical offset from top to bottom';

COMMENT ON COLUMN DEVICE_TYPE_MODULE.DEVICE_TYPE_Z_OFFSET IS 'Offset inside the device (front to back, yes, that is Z).  Only this or device_type_side may be set.';

COMMENT ON COLUMN DEVICE_TYPE_MODULE.DEVICE_TYPE_SIDE IS 'Only this or z_offset may be set.  Front or back of the chassis/container device_type';

CREATE UNIQUE INDEX PK_DEVICE_TYPE_MODULE ON DEVICE_TYPE_MODULE
(DEVICE_TYPE_ID   ASC,DEVICE_TYPE_MODULE_NAME   ASC);

ALTER TABLE DEVICE_TYPE_MODULE
	ADD CONSTRAINT  PK_DEVICE_TYPE_MODULE PRIMARY KEY (DEVICE_TYPE_ID,DEVICE_TYPE_MODULE_NAME)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DEVICE_TYPE_MODULE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_TYPE_MODULE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_420102695 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_TYPE_MODULE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_420889873 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_TYPE_MODULE
	MODIFY DEVICE_TYPE_SIDE CONSTRAINT  CKC_DT_MOD_DT_SIDE CHECK (DEVICE_TYPE_SIDE in ('FRONT','BACK'));

ALTER TABLE DEVICE_TYPE_MODULE
	MODIFY DEVICE_TYPE_SIDE DEFAULT 'FRONT';

CREATE  INDEX XIF1DEVICE_TYPE_MODULE ON DEVICE_TYPE_MODULE
(DEVICE_TYPE_ID   ASC);

/***********************************************
 * Table: DEVICE_TYPE_MODULE_DEVICE_TYPE
 ***********************************************/

CREATE TABLE DEVICE_TYPE_MODULE_DEVICE_TYPE
(
	MODULE_DEVICE_TYPE_ID NUMBER NOT NULL ,
	DEVICE_TYPE_ID       NUMBER NOT NULL ,
	DEVICE_TYPE_MODULE_NAME VARCHAR2(255) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE DEVICE_TYPE_MODULE_DEVICE_TYPE IS 'Used to validate that a given module device_type is allowed to be placed inside a specific module in a chassis_device_type';

COMMENT ON COLUMN DEVICE_TYPE_MODULE_DEVICE_TYPE.MODULE_DEVICE_TYPE_ID IS 'Id of a module that is permitted to be placed in this slot';

COMMENT ON COLUMN DEVICE_TYPE_MODULE_DEVICE_TYPE.DEVICE_TYPE_ID IS 'Device Type of the Container Device (Chassis)';

COMMENT ON COLUMN DEVICE_TYPE_MODULE_DEVICE_TYPE.DEVICE_TYPE_MODULE_NAME IS 'Name used to describe the module programatically.';

CREATE UNIQUE INDEX PK_DEVICE_TYPE_MODULE_DEVICE_T ON DEVICE_TYPE_MODULE_DEVICE_TYPE
(MODULE_DEVICE_TYPE_ID   ASC,DEVICE_TYPE_ID   ASC,DEVICE_TYPE_MODULE_NAME   ASC);

ALTER TABLE DEVICE_TYPE_MODULE_DEVICE_TYPE
	ADD CONSTRAINT  PK_DEVICE_TYPE_MODULE_DEVICE_T PRIMARY KEY (MODULE_DEVICE_TYPE_ID,DEVICE_TYPE_ID,DEVICE_TYPE_MODULE_NAME)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DEVICE_TYPE_MODULE_DEVICE_T  ENABLE  VALIDATE;

ALTER TABLE DEVICE_TYPE_MODULE_DEVICE_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_367729954 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DEVICE_TYPE_MODULE_DEVICE_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_368517132 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_DT_MOD_DEV_TYPE_DTMOD ON DEVICE_TYPE_MODULE_DEVICE_TYPE
(DEVICE_TYPE_ID   ASC,DEVICE_TYPE_MODULE_NAME   ASC);

CREATE  INDEX XIF_DT_MOD_DEV_TYPE_MOD_DTID ON DEVICE_TYPE_MODULE_DEVICE_TYPE
(MODULE_DEVICE_TYPE_ID   ASC);

/***********************************************
 * Table: DNS_CHANGE_RECORD
 ***********************************************/

CREATE TABLE DNS_CHANGE_RECORD
(
	DNS_CHANGE_RECORD_ID NUMBER(13,0) NOT NULL ,
	DNS_DOMAIN_ID        NUMBER NULL ,
	IP_ADDRESS           INTEGER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_DNS_CHANGE_RECORD ON DNS_CHANGE_RECORD
(DNS_CHANGE_RECORD_ID   ASC);

ALTER TABLE DNS_CHANGE_RECORD
	ADD CONSTRAINT  PK_DNS_CHANGE_RECORD PRIMARY KEY (DNS_CHANGE_RECORD_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DNS_CHANGE_RECORD  ENABLE  VALIDATE;

ALTER TABLE DNS_CHANGE_RECORD
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_117761521 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DNS_CHANGE_RECORD
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_116974343 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1DNS_CHANGE_RECORD ON DNS_CHANGE_RECORD
(DNS_DOMAIN_ID   ASC);

/***********************************************
 * Table: DNS_DOMAIN
 ***********************************************/

CREATE TABLE DNS_DOMAIN
(
	DNS_DOMAIN_ID        NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SOA_NAME             VARCHAR2(255 BYTE) NULL ,
	SOA_CLASS            VARCHAR2(50 BYTE) NULL ,
	SOA_TTL              NUMBER NULL ,
	SOA_SERIAL           NUMBER NULL ,
	SOA_REFRESH          NUMBER NULL ,
	SOA_RETRY            NUMBER NULL ,
	SOA_EXPIRE           NUMBER NULL ,
	SOA_MINIMUM          NUMBER NULL ,
	SOA_MNAME            VARCHAR2(255 BYTE) NULL ,
	SOA_RNAME            VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PARENT_DNS_DOMAIN_ID NUMBER NULL ,
	SHOULD_GENERATE      CHAR(1 BYTE) CONSTRAINT SYS_C0074101 NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	LAST_GENERATED       DATE NULL ,
	DNS_DOMAIN_TYPE      varchar2(50) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_DNS_DOMAIN ON DNS_DOMAIN
(DNS_DOMAIN_ID   ASC);

ALTER TABLE DNS_DOMAIN
	ADD CONSTRAINT  PK_DNS_DOMAIN PRIMARY KEY (DNS_DOMAIN_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DNS_DOMAIN  ENABLE  VALIDATE;

ALTER TABLE DNS_DOMAIN
	MODIFY SHOULD_GENERATE CONSTRAINT  CKC_SHOULD_GENERATE_DNS_DOMA CHECK (SHOULD_GENERATE in ('Y','N') and SHOULD_GENERATE = upper(SHOULD_GENERATE))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DNS_DOMAIN
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_DNS_DOMA CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DNS_DOMAIN
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_DNS_DOMA CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX IDX_DNSDOMAIN_PARENTDNSDOMAIN ON DNS_DOMAIN
(PARENT_DNS_DOMAIN_ID   ASC);

CREATE  INDEX XIFDNS_DOM_DNS_DOM_TYPE ON DNS_DOMAIN
(DNS_DOMAIN_TYPE   ASC);

/***********************************************
 * Table: DNS_DOMAIN_COLLECTION
 ***********************************************/

CREATE TABLE DNS_DOMAIN_COLLECTION
(
	DNS_DOMAIN_COLLECTION_ID NUMBER(13,0) NOT NULL ,
	DNS_DOMAIN_COLLECTION_NAME VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DNS_DOMAIN_COLLECTION_TYPE VARCHAR2(50 BYTE) NOT NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_DNS_DOMAIN_COLLECTION ON DNS_DOMAIN_COLLECTION
(DNS_DOMAIN_COLLECTION_ID   ASC);

ALTER TABLE DNS_DOMAIN_COLLECTION
	ADD CONSTRAINT  PK_DNS_DOMAIN_COLLECTION PRIMARY KEY (DNS_DOMAIN_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DNS_DOMAIN_COLLECTION  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_DNS_DOMAIN_COLLECTION_NAMTY ON DNS_DOMAIN_COLLECTION
(DNS_DOMAIN_COLLECTION_NAME   ASC,DNS_DOMAIN_COLLECTION_TYPE   ASC);

ALTER TABLE DNS_DOMAIN_COLLECTION
ADD CONSTRAINT  AK_DNS_DOMAIN_COLLECTION_NAMTY UNIQUE (DNS_DOMAIN_COLLECTION_NAME,DNS_DOMAIN_COLLECTION_TYPE);

ALTER TABLE DNS_DOMAIN_COLLECTION
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1716338794 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DNS_DOMAIN_COLLECTION
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1717125972 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1DNS_DOMAIN_COLLECTION ON DNS_DOMAIN_COLLECTION
(DNS_DOMAIN_COLLECTION_TYPE   ASC);

/***********************************************
 * Table: DNS_DOMAIN_COLLECTION_DNS_DOM
 ***********************************************/

CREATE TABLE DNS_DOMAIN_COLLECTION_DNS_DOM
(
	DNS_DOMAIN_COLLECTION_ID NUMBER(13,0) NOT NULL ,
	DNS_DOMAIN_ID        NUMBER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_DNS_DOMAIN_COLLECTION_DNS_D ON DNS_DOMAIN_COLLECTION_DNS_DOM
(DNS_DOMAIN_COLLECTION_ID   ASC,DNS_DOMAIN_ID   ASC);

ALTER TABLE DNS_DOMAIN_COLLECTION_DNS_DOM
	ADD CONSTRAINT  PK_DNS_DOMAIN_COLLECTION_DNS_D PRIMARY KEY (DNS_DOMAIN_COLLECTION_ID,DNS_DOMAIN_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DNS_DOMAIN_COLLECTION_DNS_D  ENABLE  VALIDATE;

ALTER TABLE DNS_DOMAIN_COLLECTION_DNS_DOM
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_617995787 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DNS_DOMAIN_COLLECTION_DNS_DOM
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_618782965 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1DNS_DOMAIN_COLLECTION_DNS_ ON DNS_DOMAIN_COLLECTION_DNS_DOM
(DNS_DOMAIN_ID   ASC);

CREATE  INDEX XIF2DNS_DOMAIN_COLLECTION_DNS_ ON DNS_DOMAIN_COLLECTION_DNS_DOM
(DNS_DOMAIN_COLLECTION_ID   ASC);

/***********************************************
 * Table: DNS_DOMAIN_COLLECTION_HIER
 ***********************************************/

CREATE TABLE DNS_DOMAIN_COLLECTION_HIER
(
	DNS_DOMAIN_COLLECTION_ID NUMBER(13,0) NOT NULL ,
	CHILD_DNS_DOMAIN_COLLECTION_ID NUMBER(13,0) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_DNS_DOMAIN_COLLECTION_HIER ON DNS_DOMAIN_COLLECTION_HIER
(DNS_DOMAIN_COLLECTION_ID   ASC,CHILD_DNS_DOMAIN_COLLECTION_ID   ASC);

ALTER TABLE DNS_DOMAIN_COLLECTION_HIER
	ADD CONSTRAINT  PK_DNS_DOMAIN_COLLECTION_HIER PRIMARY KEY (DNS_DOMAIN_COLLECTION_ID,CHILD_DNS_DOMAIN_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DNS_DOMAIN_COLLECTION_HIER  ENABLE  VALIDATE;

ALTER TABLE DNS_DOMAIN_COLLECTION_HIER
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1216757771 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DNS_DOMAIN_COLLECTION_HIER
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1215970593 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1DNS_DOMAIN_COLLECTION_HIER ON DNS_DOMAIN_COLLECTION_HIER
(CHILD_DNS_DOMAIN_COLLECTION_ID   ASC);

CREATE  INDEX XIF2DNS_DOMAIN_COLLECTION_HIER ON DNS_DOMAIN_COLLECTION_HIER
(DNS_DOMAIN_COLLECTION_ID   ASC);

/***********************************************
 * Table: DNS_RECORD
 ***********************************************/

CREATE TABLE DNS_RECORD
(
	DNS_RECORD_ID        NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DNS_NAME             VARCHAR2(255 BYTE) NULL ,
	DNS_DOMAIN_ID        NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DNS_TTL              NUMBER NULL ,
	DNS_CLASS            VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DNS_TYPE             VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DNS_VALUE            VARCHAR2(512 BYTE) NULL ,
	DNS_PRIORITY         NUMBER NULL ,
	DNS_SRV_SERVICE      VARCHAR2(50 BYTE) NULL ,
	DNS_SRV_PROTOCOL     VARCHAR2(4 BYTE) NULL ,
	DNS_SRV_WEIGHT       NUMBER NULL ,
	DNS_SRV_PORT         NUMBER NULL ,
	NETBLOCK_ID          NUMBER NULL ,
	REFERENCE_DNS_RECORD_ID NUMBER NULL ,
	DNS_VALUE_RECORD_ID  NUMBER NULL ,
	SHOULD_GENERATE_PTR  CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	IS_ENABLED           CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_DNS_RECORD ON DNS_RECORD
(DNS_RECORD_ID   ASC);

ALTER TABLE DNS_RECORD
	ADD CONSTRAINT  PK_DNS_RECORD PRIMARY KEY (DNS_RECORD_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DNS_RECORD  ENABLE  VALIDATE;

ALTER TABLE DNS_RECORD
	MODIFY DNS_SRV_PROTOCOL CONSTRAINT  CKC_DNS_SRV_PROTOCOL_DNS_RECO CHECK (DNS_SRV_PROTOCOL is null or (DNS_SRV_PROTOCOL in ('tcp','udp') and DNS_SRV_PROTOCOL = lower(DNS_SRV_PROTOCOL)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DNS_RECORD
	MODIFY SHOULD_GENERATE_PTR CONSTRAINT  CKC_SHOULD_GENERATE_P_DNS_RECO CHECK (SHOULD_GENERATE_PTR in ('Y','N') and SHOULD_GENERATE_PTR = upper(SHOULD_GENERATE_PTR))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DNS_RECORD
	MODIFY IS_ENABLED CONSTRAINT  CKC_IS_ENABLED_DNS_RECO CHECK (IS_ENABLED in ('Y','N') and IS_ENABLED = upper(IS_ENABLED))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DNS_RECORD
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_DNS_RECO CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DNS_RECORD
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_DNS_RECO CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DNS_RECORD
	MODIFY DNS_CLASS DEFAULT 'IN';

ALTER TABLE DNS_RECORD
	MODIFY SHOULD_GENERATE_PTR DEFAULT 'Y';

ALTER TABLE DNS_RECORD
	MODIFY IS_ENABLED DEFAULT 'Y';

CREATE  INDEX IDX_DNSREC_DNSCLASS ON DNS_RECORD
(DNS_CLASS   ASC);

CREATE  INDEX IDX_DNSREC_DNSSRVSERVICE ON DNS_RECORD
(DNS_SRV_SERVICE   ASC);

CREATE    BITMAP INDEX IDX_DNSREC_DNSTYPE ON DNS_RECORD
(DNS_TYPE   ASC);

CREATE  INDEX IDX_DNSREC_REFDNSREC ON DNS_RECORD
(REFERENCE_DNS_RECORD_ID   ASC);

CREATE  INDEX IX_DNSID_DOMID ON DNS_RECORD
(DNS_DOMAIN_ID   ASC);

CREATE  INDEX IX_DNSID_NETBLOCK_ID ON DNS_RECORD
(NETBLOCK_ID   ASC);

/***********************************************
 * Table: DNS_RECORD_RELATION
 ***********************************************/

CREATE TABLE DNS_RECORD_RELATION
(
	DNS_RECORD_ID        NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	RELATED_DNS_RECORD_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DNS_RECORD_RELATION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_DNS_RECORD_RELATION ON DNS_RECORD_RELATION
(DNS_RECORD_ID   ASC,RELATED_DNS_RECORD_ID   ASC,DNS_RECORD_RELATION_TYPE   ASC);

ALTER TABLE DNS_RECORD_RELATION
	ADD CONSTRAINT  PK_DNS_RECORD_RELATION PRIMARY KEY (DNS_RECORD_ID,RELATED_DNS_RECORD_ID,DNS_RECORD_RELATION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_DNS_RECORD_RELATION  ENABLE  VALIDATE;

ALTER TABLE DNS_RECORD_RELATION
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_DNS_REC_RLTN CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE DNS_RECORD_RELATION
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_DNS_REC_RLTN CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: ENCAPSULATION_DOMAIN
 ***********************************************/

CREATE TABLE ENCAPSULATION_DOMAIN
(
	ENCAPSULATION_DOMAIN VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ENCAPSULATION_TYPE   VARCHAR2(50 BYTE) NOT NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_ENCAPSULATION_DOMAIN ON ENCAPSULATION_DOMAIN
(ENCAPSULATION_DOMAIN   ASC,ENCAPSULATION_TYPE   ASC);

ALTER TABLE ENCAPSULATION_DOMAIN
	ADD CONSTRAINT  PK_ENCAPSULATION_DOMAIN PRIMARY KEY (ENCAPSULATION_DOMAIN,ENCAPSULATION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ENCAPSULATION_DOMAIN  ENABLE  VALIDATE;

ALTER TABLE ENCAPSULATION_DOMAIN
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1280194354 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE ENCAPSULATION_DOMAIN
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1280981532 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_ENCAP_DOMAIN_ENCAP_TYP ON ENCAPSULATION_DOMAIN
(ENCAPSULATION_TYPE   ASC);

/***********************************************
 * Table: ENCAPSULATION_RANGE
 ***********************************************/

CREATE TABLE ENCAPSULATION_RANGE
(
	ENCAPSULATION_RANGE_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PARENT_ENCAPSULATION_RANGE_ID NUMBER NULL ,
	SITE_CODE            VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE ENCAPSULATION_RANGE IS 'Captures how tables are assigned administratively.  This is not use for enforcement but primarily for presentation';

CREATE UNIQUE INDEX PK_ENCAPSULATION_RANGE ON ENCAPSULATION_RANGE
(ENCAPSULATION_RANGE_ID   ASC);

ALTER TABLE ENCAPSULATION_RANGE
	ADD CONSTRAINT  PK_VLAN_RANGE PRIMARY KEY (ENCAPSULATION_RANGE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ENCAPSULATION_RANGE  ENABLE  VALIDATE;

ALTER TABLE ENCAPSULATION_RANGE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_VLAN_RAN CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE ENCAPSULATION_RANGE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_VLAN_RAN CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX IXF_ENCAP_RANGE_PARENTVLAN ON ENCAPSULATION_RANGE
(PARENT_ENCAPSULATION_RANGE_ID   ASC);

CREATE  INDEX IXF_ENCAP_RANGE_SITECODE ON ENCAPSULATION_RANGE
(SITE_CODE   ASC);

/***********************************************
 * Table: ENCRYPTION_KEY
 ***********************************************/

CREATE TABLE ENCRYPTION_KEY
(
	ENCRYPTION_KEY_ID    NUMBER(13) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ENCRYPTION_KEY_DB_VALUE VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ENCRYPTION_KEY_PURPOSE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ENCRYPTION_KEY_PURPOSE_VERSION NUMBER(13) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ENCRYPTION_METHOD    VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE ENCRYPTION_KEY IS 'Keep information on keys used to encrypt sensitive data in the schema';

COMMENT ON COLUMN ENCRYPTION_KEY.ENCRYPTION_KEY_DB_VALUE IS 'part of 3-tuple that is the key used to encrypt.  The other portions are provided by a user and stored in the key_crypto package';

COMMENT ON COLUMN ENCRYPTION_KEY.ENCRYPTION_KEY_PURPOSE IS 'indicates the purpose of infrastructure providing the key.  Used externally by applications to manage their portion of the key';

COMMENT ON COLUMN ENCRYPTION_KEY.ENCRYPTION_KEY_PURPOSE_VERSION IS 'indicates the version of the application portion of the key.  Used externally by applications to manage their portion of the key';

COMMENT ON COLUMN ENCRYPTION_KEY.ENCRYPTION_METHOD IS 'Text representation of the method of encryption.  Format is the same as Kerberos uses such as in rfc3962';

CREATE UNIQUE INDEX PK_ENCRYPTION_KEY_ID ON ENCRYPTION_KEY
(ENCRYPTION_KEY_ID   ASC);

ALTER TABLE ENCRYPTION_KEY
	ADD CONSTRAINT  PK_ENCRYPTION_KEY PRIMARY KEY (ENCRYPTION_KEY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ENCRYPTION_KEY_ID  ENABLE  VALIDATE;

/***********************************************
 * Table: INTER_COMPONENT_CONNECTION
 ***********************************************/

CREATE TABLE INTER_COMPONENT_CONNECTION
(
	INTER_COMPONENT_CONNECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SLOT1_ID             NUMBER NOT NULL ,
	SLOT2_ID             NUMBER NOT NULL ,
	CIRCUIT_ID           NUMBER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_INTER_COMPONENT_CONNECTION ON INTER_COMPONENT_CONNECTION
(INTER_COMPONENT_CONNECTION_ID   ASC);

ALTER TABLE INTER_COMPONENT_CONNECTION
	ADD CONSTRAINT  PK_INTER_COMPONENT_CONNECTION PRIMARY KEY (INTER_COMPONENT_CONNECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_INTER_COMPONENT_CONNECTION  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_INTER_COMPONENT_CON_SL1_ID ON INTER_COMPONENT_CONNECTION
(SLOT1_ID   ASC);

ALTER TABLE INTER_COMPONENT_CONNECTION
ADD CONSTRAINT  AK_INTER_COMPONENT_CON_SL1_ID UNIQUE (SLOT1_ID);

CREATE UNIQUE INDEX AK_INTER_COMPONENT_CON_SL2_ID ON INTER_COMPONENT_CONNECTION
(SLOT2_ID   ASC);

ALTER TABLE INTER_COMPONENT_CONNECTION
ADD CONSTRAINT  AK_INTER_COMPONENT_CON_SL2_ID UNIQUE (SLOT2_ID);

ALTER TABLE INTER_COMPONENT_CONNECTION
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1215181340 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE INTER_COMPONENT_CONNECTION
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1214394162 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_INTERCOM_CONN_CIRC_ID ON INTER_COMPONENT_CONNECTION
(CIRCUIT_ID   ASC);

/***********************************************
 * Table: IP_GROUP
 ***********************************************/

CREATE TABLE IP_GROUP
(
	IP_GROUP_ID          NUMBER(13,0) NOT NULL ,
	IP_GROUP_PROTOCOL    CHAR(18) NOT NULL ,
	NETBLOCK_COLLECTION_ID NUMBER NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_IP_GROUP ON IP_GROUP
(IP_GROUP_ID   ASC);

ALTER TABLE IP_GROUP
	ADD CONSTRAINT  PK_IP_GROUP PRIMARY KEY (IP_GROUP_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_IP_GROUP  ENABLE  VALIDATE;

ALTER TABLE IP_GROUP
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1968667727 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE IP_GROUP
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1969454905 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1IP_GROUP ON IP_GROUP
(IP_GROUP_PROTOCOL   ASC);

CREATE  INDEX XIF2IP_GROUP ON IP_GROUP
(NETBLOCK_COLLECTION_ID   ASC);

/***********************************************
 * Table: IP_GROUP_NETWORK_INTERFACE
 ***********************************************/

CREATE TABLE IP_GROUP_NETWORK_INTERFACE
(
	IP_GROUP_ID          NUMBER(13,0) NOT NULL ,
	NETWORK_INTERFACE_ID NUMBER NOT NULL ,
	PRIORITY             INTEGER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_IP_GROUP ON IP_GROUP_NETWORK_INTERFACE
(IP_GROUP_ID   ASC,NETWORK_INTERFACE_ID   ASC);

ALTER TABLE IP_GROUP_NETWORK_INTERFACE
	ADD CONSTRAINT  PK_IP_GROUP_NETWORK_INTERFACE PRIMARY KEY (IP_GROUP_ID,NETWORK_INTERFACE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_IP_GROUP  ENABLE  VALIDATE;

ALTER TABLE IP_GROUP_NETWORK_INTERFACE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1165688363 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE IP_GROUP_NETWORK_INTERFACE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1164901185 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1IP_GROUP_NETWORK_INTERFACE ON IP_GROUP_NETWORK_INTERFACE
(IP_GROUP_ID   ASC);

CREATE  INDEX XIF2IP_GROUP_NETWORK_INTERFACE ON IP_GROUP_NETWORK_INTERFACE
(NETWORK_INTERFACE_ID   ASC);

/***********************************************
 * Table: IP_UNIVERSE
 ***********************************************/

CREATE TABLE IP_UNIVERSE
(
	IP_UNIVERSE_ID       NUMBER(13,0) NOT NULL ,
	IP_UNIVERSE_NAME     VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_IP_UNIVERSE ON IP_UNIVERSE
(IP_UNIVERSE_ID   ASC);

ALTER TABLE IP_UNIVERSE
	ADD CONSTRAINT  PK_IP_UNIVERSE PRIMARY KEY (IP_UNIVERSE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_IP_UNIVERSE  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_IP_UNIVERSE_NAME ON IP_UNIVERSE
(IP_UNIVERSE_NAME   ASC);

ALTER TABLE IP_UNIVERSE
ADD CONSTRAINT  AK_IP_UNIVERSE_NAME UNIQUE (IP_UNIVERSE_NAME);

ALTER TABLE IP_UNIVERSE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1956754610 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE IP_UNIVERSE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1957541788 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: KERBEROS_REALM
 ***********************************************/

CREATE TABLE KERBEROS_REALM
(
	KRB_REALM_ID         NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	REALM_NAME           VARCHAR2(100 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_KERBEROS_REALMS ON KERBEROS_REALM
(KRB_REALM_ID   ASC);

ALTER TABLE KERBEROS_REALM
	ADD CONSTRAINT  PK_KERBEROS_REALMS PRIMARY KEY (KRB_REALM_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_KERBEROS_REALMS  ENABLE  VALIDATE;

ALTER TABLE KERBEROS_REALM
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_KERBEROS CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE KERBEROS_REALM
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_KERBEROS CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX IDX_REALM_NAME ON KERBEROS_REALM
(REALM_NAME   ASC);

/***********************************************
 * Table: KLOGIN
 ***********************************************/

CREATE TABLE KLOGIN
(
	KLOGIN_ID            NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ACCOUNT_ID           NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ACCOUNT_COLLECTION_ID NUMBER NULL ,
	KRB_REALM_ID         NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	KRB_INSTANCE         VARCHAR2(50 BYTE) NULL ,
	DEST_ACCOUNT_ID      NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_KLOGIN_ID ON KLOGIN
(KLOGIN_ID   ASC);

ALTER TABLE KLOGIN
	ADD CONSTRAINT  PK_KLOGIN_ID PRIMARY KEY (KLOGIN_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_KLOGIN_ID  ENABLE  VALIDATE;

ALTER TABLE KLOGIN
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_KLOGIN CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE KLOGIN
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_KLOGIN CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX IDX_KLOGIN_ACCTID ON KLOGIN
(ACCOUNT_ID   ASC);

CREATE  INDEX IDX_KLOGIN_DESTACCTID ON KLOGIN
(DEST_ACCOUNT_ID   ASC);

CREATE  INDEX IDX_KLOGIN_KRBREALMID ON KLOGIN
(KRB_REALM_ID   ASC);

/***********************************************
 * Table: KLOGIN_MCLASS
 ***********************************************/

CREATE TABLE KLOGIN_MCLASS
(
	KLOGIN_ID            NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DEVICE_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	INCLUDE_EXCLUDE_FLAG VARCHAR2(10 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_KLOGIN_MCLASS ON KLOGIN_MCLASS
(KLOGIN_ID   ASC,DEVICE_COLLECTION_ID   ASC);

ALTER TABLE KLOGIN_MCLASS
	ADD CONSTRAINT  PK_KLOGIN_MCLASS PRIMARY KEY (KLOGIN_ID,DEVICE_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_KLOGIN_MCLASS  ENABLE  VALIDATE;

ALTER TABLE KLOGIN_MCLASS
	MODIFY INCLUDE_EXCLUDE_FLAG CONSTRAINT  CKC_INCLUDE_EXCLUDE_F_KLOGIN_M CHECK (INCLUDE_EXCLUDE_FLAG in ('INCLUDE','EXCLUDE') and INCLUDE_EXCLUDE_FLAG = upper(INCLUDE_EXCLUDE_FLAG))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE KLOGIN_MCLASS
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_KLOGIN_M CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE KLOGIN_MCLASS
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_KLOGIN_M CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE    BITMAP INDEX IDXBM_KLOGINMCLASS_INCLEXCLFLG ON KLOGIN_MCLASS
(INCLUDE_EXCLUDE_FLAG   ASC);

CREATE TABLE L2_NETWORK_COLL_L2_NETWORK
(
	LAYER2_NETWORK_COLLECTION_ID NUMBER NOT NULL ,
	LAYER2_NETWORK_ID    NUMBER NOT NULL ,
	LAYER2_NETWORK_ID_RANK INTEGER NULL ,
	START_DATE           TIMESTAMP NULL ,
	FINISH_DATE          TIMESTAMP NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_L2_NETWORK_COLL_L2_NETWORK ON L2_NETWORK_COLL_L2_NETWORK
(LAYER2_NETWORK_COLLECTION_ID   ASC,LAYER2_NETWORK_ID   ASC);

ALTER TABLE L2_NETWORK_COLL_L2_NETWORK
	ADD CONSTRAINT  PK_L2_NETWORK_COLL_L2_NETWORK PRIMARY KEY (LAYER2_NETWORK_COLLECTION_ID,LAYER2_NETWORK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_L2_NETWORK_COLL_L2_NETWORK  ENABLE  VALIDATE;

CREATE UNIQUE INDEX XAK_L2NETCOL_L2NETRANK ON L2_NETWORK_COLL_L2_NETWORK
(LAYER2_NETWORK_COLLECTION_ID   ASC,LAYER2_NETWORK_ID_RANK   ASC);

ALTER TABLE L2_NETWORK_COLL_L2_NETWORK
ADD CONSTRAINT  XAK_L2NETCOL_L2NETRANK UNIQUE (LAYER2_NETWORK_COLLECTION_ID,LAYER2_NETWORK_ID_RANK);

ALTER TABLE L2_NETWORK_COLL_L2_NETWORK
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_225059161 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE L2_NETWORK_COLL_L2_NETWORK
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_224271983 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_L2NETCL2NET_COLLID ON L2_NETWORK_COLL_L2_NETWORK
(LAYER2_NETWORK_COLLECTION_ID   ASC);

CREATE  INDEX XIF_L2NETCL2NET_L2NETID ON L2_NETWORK_COLL_L2_NETWORK
(LAYER2_NETWORK_ID   ASC);

CREATE TABLE L3_NETWORK_COLL_L3_NETWORK
(
	LAYER3_NETWORK_COLLECTION_ID NUMBER NOT NULL ,
	LAYER3_NETWORK_ID    NUMBER NOT NULL ,
	LAYER3_NETWORK_ID_RANK INTEGER NULL ,
	START_DATE           TIMESTAMP NULL ,
	FINISH_DATE          TIMESTAMP NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_L3_NETWORK_COLL_L3_NETWORK ON L3_NETWORK_COLL_L3_NETWORK
(LAYER3_NETWORK_COLLECTION_ID   ASC,LAYER3_NETWORK_ID   ASC);

ALTER TABLE L3_NETWORK_COLL_L3_NETWORK
	ADD CONSTRAINT  PK_L3_NETWORK_COLL_L3_NETWORK PRIMARY KEY (LAYER3_NETWORK_COLLECTION_ID,LAYER3_NETWORK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_L3_NETWORK_COLL_L3_NETWORK  ENABLE  VALIDATE;

CREATE UNIQUE INDEX XAK_L3NETCOL_L3NETRANK ON L3_NETWORK_COLL_L3_NETWORK
(LAYER3_NETWORK_COLLECTION_ID   ASC,LAYER3_NETWORK_ID_RANK   ASC);

ALTER TABLE L3_NETWORK_COLL_L3_NETWORK
ADD CONSTRAINT  AK_L3NETCOL_L3NETRANK UNIQUE (LAYER3_NETWORK_COLLECTION_ID,LAYER3_NETWORK_ID_RANK);

ALTER TABLE L3_NETWORK_COLL_L3_NETWORK
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_225059159 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE L3_NETWORK_COLL_L3_NETWORK
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_224271981 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_L3NETCOL_L3_NET_L3NETCOLID ON L3_NETWORK_COLL_L3_NETWORK
(LAYER3_NETWORK_COLLECTION_ID   ASC);

CREATE  INDEX XIF_L3NETCOL_L3_NET_L3NETID ON L3_NETWORK_COLL_L3_NETWORK
(LAYER3_NETWORK_ID   ASC);

/***********************************************
 * Table: LAYER2_CONNECTION
 ***********************************************/

CREATE TABLE LAYER2_CONNECTION
(
	LAYER2_CONNECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	LOGICAL_PORT1_ID     NUMBER NULL ,
	LOGICAL_PORT2_ID     NUMBER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_LAYER2_CONNECTION ON LAYER2_CONNECTION
(LAYER2_CONNECTION_ID   ASC);

ALTER TABLE LAYER2_CONNECTION
	ADD CONSTRAINT  PK_LAYER2_CONNECTION PRIMARY KEY (LAYER2_CONNECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_LAYER2_CONNECTION  ENABLE  VALIDATE;

ALTER TABLE LAYER2_CONNECTION
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_267918026 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE LAYER2_CONNECTION
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_267130848 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_L2_CONN_L1PORT ON LAYER2_CONNECTION
(LOGICAL_PORT1_ID   ASC);

CREATE  INDEX XIF_L2_CONN_L2PORT ON LAYER2_CONNECTION
(LOGICAL_PORT2_ID   ASC);

/***********************************************
 * Table: LAYER2_CONNECTION_L2_NETWORK
 ***********************************************/

CREATE TABLE LAYER2_CONNECTION_L2_NETWORK
(
	LAYER2_CONNECTION_ID NUMBER NOT NULL ,
	LAYER2_NETWORK_ID    NUMBER NOT NULL ,
	ENCAPSULATION_MODE   VARCHAR2(50 BYTE) NULL ,
	ENCAPSULATION_TYPE   VARCHAR2(50 BYTE) NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_LAYER2_ENCAPSULATION_TY ON LAYER2_CONNECTION_L2_NETWORK
(LAYER2_CONNECTION_ID   ASC,LAYER2_NETWORK_ID   ASC);

ALTER TABLE LAYER2_CONNECTION_L2_NETWORK
	ADD CONSTRAINT  PK_VAL_LAYER2_ENCAPSULATION_TY PRIMARY KEY (LAYER2_CONNECTION_ID,LAYER2_NETWORK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_LAYER2_ENCAPSULATION_TY  ENABLE  VALIDATE;

ALTER TABLE LAYER2_CONNECTION_L2_NETWORK
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_264960935 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE LAYER2_CONNECTION_L2_NETWORK
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_265748113 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_L2CL2N_L2NET_ID_ENCAP_TYP ON LAYER2_CONNECTION_L2_NETWORK
(LAYER2_NETWORK_ID   ASC,ENCAPSULATION_TYPE   ASC);

CREATE  INDEX XIF_L2C_L2N_ENCAP_MODE_TYPE ON LAYER2_CONNECTION_L2_NETWORK
(ENCAPSULATION_MODE   ASC,ENCAPSULATION_TYPE   ASC);

CREATE  INDEX XIF_L2C_L2N_L2CONNID ON LAYER2_CONNECTION_L2_NETWORK
(LAYER2_CONNECTION_ID   ASC);

CREATE  INDEX XIF_L2C_L2N_L2NETID ON LAYER2_CONNECTION_L2_NETWORK
(LAYER2_NETWORK_ID   ASC);

/***********************************************
 * Table: LAYER2_NETWORK
 ***********************************************/

CREATE TABLE LAYER2_NETWORK
(
	LAYER2_NETWORK_ID    NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ENCAPSULATION_NAME   VARCHAR2(32) NULL ,
	ENCAPSULATION_DOMAIN VARCHAR2(50 BYTE) NULL ,
	ENCAPSULATION_TYPE   VARCHAR2(50 BYTE) NULL ,
	ENCAPSULATION_TAG    INTEGER NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	ENCAPSULATION_RANGE_ID NUMBER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN LAYER2_NETWORK.ENCAPSULATION_RANGE_ID IS 'Administrative information about which range this is a part of';

CREATE UNIQUE INDEX PK_LAYER2_NETWORK ON LAYER2_NETWORK
(LAYER2_NETWORK_ID   ASC);

ALTER TABLE LAYER2_NETWORK
	ADD CONSTRAINT  PK_LAYER2_NETWORK PRIMARY KEY (LAYER2_NETWORK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_LAYER2_NETWORK  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_L2NET_ENCAP_NAME ON LAYER2_NETWORK
(ENCAPSULATION_DOMAIN   ASC,ENCAPSULATION_TYPE   ASC,ENCAPSULATION_NAME   ASC);

ALTER TABLE LAYER2_NETWORK
ADD CONSTRAINT  AK_L2NET_ENCAP_NAME UNIQUE (ENCAPSULATION_DOMAIN,ENCAPSULATION_TYPE,ENCAPSULATION_NAME);

CREATE UNIQUE INDEX AK_L2NET_ENCAP_TAG ON LAYER2_NETWORK
(ENCAPSULATION_TYPE   ASC,ENCAPSULATION_DOMAIN   ASC,ENCAPSULATION_TAG   ASC);

ALTER TABLE LAYER2_NETWORK
ADD CONSTRAINT  AK_L2NET_ENCAP_TAG UNIQUE (ENCAPSULATION_TYPE,ENCAPSULATION_DOMAIN,ENCAPSULATION_TAG);

CREATE UNIQUE INDEX AK_L2_NET_L2NET_ENCAP_TYP ON LAYER2_NETWORK
(LAYER2_NETWORK_ID   ASC,ENCAPSULATION_TYPE   ASC);

ALTER TABLE LAYER2_NETWORK
ADD CONSTRAINT  AK_L2_NET_L2NET_ENCAP_TYP UNIQUE (LAYER2_NETWORK_ID,ENCAPSULATION_TYPE);

ALTER TABLE LAYER2_NETWORK
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_375718454 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE LAYER2_NETWORK
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_374931276 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_L2_NET_ENCAP_DOMAIN ON LAYER2_NETWORK
(ENCAPSULATION_DOMAIN   ASC,ENCAPSULATION_TYPE   ASC);

CREATE  INDEX XIF_L2_NET_ENCAP_RANGE_ID ON LAYER2_NETWORK
(ENCAPSULATION_RANGE_ID   ASC);

/***********************************************
 * Table: LAYER2_NETWORK_COLLECTION
 ***********************************************/

CREATE TABLE LAYER2_NETWORK_COLLECTION
(
	LAYER2_NETWORK_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	LAYER2_NETWORK_COLLECTION_NAME VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	LAYER2_NETWORK_COLLECTION_TYPE VARCHAR2(50 BYTE) NULL ,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX AK_L2NETWORK_COLL_NAME_TYPE ON LAYER2_NETWORK_COLLECTION
(LAYER2_NETWORK_COLLECTION_NAME   ASC,LAYER2_NETWORK_COLLECTION_TYPE   ASC);

CREATE UNIQUE INDEX PK_LAYER2_NETWORK_COLLECTION ON LAYER2_NETWORK_COLLECTION
(LAYER2_NETWORK_COLLECTION_ID   ASC);

ALTER TABLE LAYER2_NETWORK_COLLECTION
	ADD CONSTRAINT  PK_LAYER2_NETWORK_COLLECTION PRIMARY KEY (LAYER2_NETWORK_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_LAYER2_NETWORK_COLLECTION  ENABLE  VALIDATE;

ALTER TABLE LAYER2_NETWORK_COLLECTION
ADD CONSTRAINT  AK_L2NETWORK_COLL_NAME_TYPE UNIQUE (LAYER2_NETWORK_COLLECTION_NAME,LAYER2_NETWORK_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_L2NETWORK_COLL_NAME_TYPE  ENABLE  VALIDATE;

ALTER TABLE LAYER2_NETWORK_COLLECTION
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1917025586 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE LAYER2_NETWORK_COLLECTION
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1916238408 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_L2NETCOLL_TYPE ON LAYER2_NETWORK_COLLECTION
(LAYER2_NETWORK_COLLECTION_TYPE   ASC);

/***********************************************
 * Table: LAYER2_NETWORK_COLLECTION_HIER
 ***********************************************/

CREATE TABLE LAYER2_NETWORK_COLLECTION_HIER
(
	LAYER2_NETWORK_COLLECTION_ID NUMBER NOT NULL ,
	CHILD_L2_NETWORK_COLL_ID NUMBER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_LAYER2_NETWORK_COLLECTION_H ON LAYER2_NETWORK_COLLECTION_HIER
(LAYER2_NETWORK_COLLECTION_ID   ASC,CHILD_L2_NETWORK_COLL_ID   ASC);

ALTER TABLE LAYER2_NETWORK_COLLECTION_HIER
	ADD CONSTRAINT  PK_LAYER2_NETWORK_COLLECTION_H PRIMARY KEY (LAYER2_NETWORK_COLLECTION_ID,CHILD_L2_NETWORK_COLL_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_LAYER2_NETWORK_COLLECTION_H  ENABLE  VALIDATE;

ALTER TABLE LAYER2_NETWORK_COLLECTION_HIER
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_649864221 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE LAYER2_NETWORK_COLLECTION_HIER
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_650651399 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_L2NET_COLLHIER_CHLDL2NET ON LAYER2_NETWORK_COLLECTION_HIER
(CHILD_L2_NETWORK_COLL_ID   ASC);

CREATE  INDEX XIF_L2NET_COLLHIER_L2NET ON LAYER2_NETWORK_COLLECTION_HIER
(LAYER2_NETWORK_COLLECTION_ID   ASC);

/***********************************************
 * Table: LAYER3_NETWORK
 ***********************************************/

CREATE TABLE LAYER3_NETWORK
(
	LAYER3_NETWORK_ID    NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NETBLOCK_ID          NUMBER NULL ,
	LAYER2_NETWORK_ID    NUMBER NULL ,
	DEFAULT_GATEWAY_NETBLOCK_ID NUMBER NULL ,
	RENDEZVOUS_NETBLOCK_ID NUMBER NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN LAYER3_NETWORK.RENDEZVOUS_NETBLOCK_ID IS 'Multicast Rendevous Point Address';

CREATE UNIQUE INDEX PK_LAYER3_NETWORK ON LAYER3_NETWORK
(LAYER3_NETWORK_ID   ASC);

ALTER TABLE LAYER3_NETWORK
	ADD CONSTRAINT  PK_LAYER3_NETWORK PRIMARY KEY (LAYER3_NETWORK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_LAYER3_NETWORK  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_LAYER3_NETWORK_NETBLOCK_ID ON LAYER3_NETWORK
(NETBLOCK_ID   ASC);

ALTER TABLE LAYER3_NETWORK
ADD CONSTRAINT  AK_LAYER3_NETWORK_NETBLOCK_ID UNIQUE (NETBLOCK_ID);

ALTER TABLE LAYER3_NETWORK
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_375718453 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE LAYER3_NETWORK
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_374931275 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_L3NET_L2NET ON LAYER3_NETWORK
(LAYER2_NETWORK_ID   ASC);

CREATE  INDEX XIF_L3NET_RNDV_PT_NBLK_ID ON LAYER3_NETWORK
(RENDEZVOUS_NETBLOCK_ID   ASC);

CREATE  INDEX XIF_L3_NET_DEF_GATE_NBID ON LAYER3_NETWORK
(DEFAULT_GATEWAY_NETBLOCK_ID   ASC);

/***********************************************
 * Table: LAYER3_NETWORK_COLLECTION
 ***********************************************/

CREATE TABLE LAYER3_NETWORK_COLLECTION
(
	LAYER3_NETWORK_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	LAYER3_NETWORK_COLLECTION_NAME VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	LAYER3_NETWORK_COLLECTION_TYPE VARCHAR2(50 BYTE) NULL ,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX AK_L3NETCOLL_NAME_TYPE ON LAYER3_NETWORK_COLLECTION
(LAYER3_NETWORK_COLLECTION_NAME   ASC,LAYER3_NETWORK_COLLECTION_TYPE   ASC);

CREATE UNIQUE INDEX PK_LAYER3_NETWORK_COLLECTION ON LAYER3_NETWORK_COLLECTION
(LAYER3_NETWORK_COLLECTION_ID   ASC);

ALTER TABLE LAYER3_NETWORK_COLLECTION
	ADD CONSTRAINT  PK_LAYER3_NETWORK_COLLECTION PRIMARY KEY (LAYER3_NETWORK_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_LAYER3_NETWORK_COLLECTION  ENABLE  VALIDATE;

ALTER TABLE LAYER3_NETWORK_COLLECTION
ADD CONSTRAINT  AK_L3NETCOLL_NAME_TYPE UNIQUE (LAYER3_NETWORK_COLLECTION_NAME,LAYER3_NETWORK_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_L3NETCOLL_NAME_TYPE  ENABLE  VALIDATE;

ALTER TABLE LAYER3_NETWORK_COLLECTION
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1900248370 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE LAYER3_NETWORK_COLLECTION
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1899461192 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_L3_NETCOL_NETCOL_TYPE ON LAYER3_NETWORK_COLLECTION
(LAYER3_NETWORK_COLLECTION_TYPE   ASC);

/***********************************************
 * Table: LAYER3_NETWORK_COLLECTION_HIER
 ***********************************************/

CREATE TABLE LAYER3_NETWORK_COLLECTION_HIER
(
	LAYER3_NETWORK_COLLECTION_ID NUMBER NOT NULL ,
	CHILD_L3_NETWORK_COLL_ID NUMBER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_LAYER3_NETWORK_COLLECTION_H ON LAYER3_NETWORK_COLLECTION_HIER
(LAYER3_NETWORK_COLLECTION_ID   ASC,CHILD_L3_NETWORK_COLL_ID   ASC);

ALTER TABLE LAYER3_NETWORK_COLLECTION_HIER
	ADD CONSTRAINT  PK_LAYER3_NETWORK_COLLECTION_H PRIMARY KEY (LAYER3_NETWORK_COLLECTION_ID,CHILD_L3_NETWORK_COLL_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_LAYER3_NETWORK_COLLECTION_H  ENABLE  VALIDATE;

ALTER TABLE LAYER3_NETWORK_COLLECTION_HIER
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_649864222 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE LAYER3_NETWORK_COLLECTION_HIER
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_650651400 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_L3NETHIERL3NETID ON LAYER3_NETWORK_COLLECTION_HIER
(LAYER3_NETWORK_COLLECTION_ID   ASC);

CREATE  INDEX XIF_L3NETHIER_CHLD_L3NETID ON LAYER3_NETWORK_COLLECTION_HIER
(CHILD_L3_NETWORK_COLL_ID   ASC);

/***********************************************
 * Table: LOGICAL_PORT
 ***********************************************/

CREATE TABLE LOGICAL_PORT
(
	LOGICAL_PORT_ID      NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	LOGICAL_PORT_NAME    varchar2(50) NOT NULL ,
	LOGICAL_PORT_TYPE    VARCHAR2(50 BYTE) NULL ,
	PARENT_LOGICAL_PORT_ID NUMBER NULL ,
	MAC_ADDRESS          INTEGER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_LOGICAL_PORT ON LOGICAL_PORT
(LOGICAL_PORT_ID   ASC);

ALTER TABLE LOGICAL_PORT
	ADD CONSTRAINT  PK_LOGICAL_PORT PRIMARY KEY (LOGICAL_PORT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_LOGICAL_PORT  ENABLE  VALIDATE;

ALTER TABLE LOGICAL_PORT
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1181241932 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE LOGICAL_PORT
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1180454754 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_LOGICAL_PORT_LG_PORT_TYPE ON LOGICAL_PORT
(LOGICAL_PORT_TYPE   ASC);

CREATE  INDEX XIF_LOGICAL_PORT_PARNET_ID ON LOGICAL_PORT
(PARENT_LOGICAL_PORT_ID   ASC);

/***********************************************
 * Table: LOGICAL_PORT_SLOT
 ***********************************************/

CREATE TABLE LOGICAL_PORT_SLOT
(
	LOGICAL_PORT_ID      NUMBER NOT NULL ,
	SLOT_ID              NUMBER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_LOGICAL_PORT_SLOT ON LOGICAL_PORT_SLOT
(LOGICAL_PORT_ID   ASC,SLOT_ID   ASC);

ALTER TABLE LOGICAL_PORT_SLOT
	ADD CONSTRAINT  PK_LOGICAL_PORT_SLOT PRIMARY KEY (LOGICAL_PORT_ID,SLOT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_LOGICAL_PORT_SLOT  ENABLE  VALIDATE;

ALTER TABLE LOGICAL_PORT_SLOT
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_216667211 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE LOGICAL_PORT_SLOT
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_217454389 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_LGL_PORT_SLOT_LGL_PORT_ID ON LOGICAL_PORT_SLOT
(LOGICAL_PORT_ID   ASC);

CREATE  INDEX XIF_LGL_PORT_SLOT_SLOT_ID ON LOGICAL_PORT_SLOT
(SLOT_ID   ASC);

/***********************************************
 * Table: LOGICAL_VOLUME
 ***********************************************/

CREATE TABLE LOGICAL_VOLUME
(
	LOGICAL_VOLUME_ID    NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	LOGICAL_VOLUME_NAME  varchar2(50) NOT NULL ,
	LOGICAL_VOLUME_TYPE  VARCHAR2(50 BYTE) NOT NULL ,
	VOLUME_GROUP_ID      NUMBER NOT NULL ,
	DEVICE_ID            NUMBER NOT NULL ,
	LOGICAL_VOLUME_SIZE_IN_BYTES INTEGER NOT NULL ,
	LOGICAL_VOLUME_OFFSET_IN_BYTES INTEGER NULL ,
	FILESYSTEM_TYPE      VARCHAR2(50 BYTE) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_LOGICAL_VOLUME ON LOGICAL_VOLUME
(LOGICAL_VOLUME_ID   ASC);

ALTER TABLE LOGICAL_VOLUME
	ADD CONSTRAINT  PK_LOGICAL_VOLUME PRIMARY KEY (LOGICAL_VOLUME_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_LOGICAL_VOLUME  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_LOGICAL_VOLUME_FILESYSTEM ON LOGICAL_VOLUME
(LOGICAL_VOLUME_ID   ASC,FILESYSTEM_TYPE   ASC);

ALTER TABLE LOGICAL_VOLUME
ADD CONSTRAINT  AK_LOGICAL_VOLUME_FILESYSTEM UNIQUE (LOGICAL_VOLUME_ID,FILESYSTEM_TYPE);

CREATE UNIQUE INDEX AK_LOGVOL_DEVID_LVNAME ON LOGICAL_VOLUME
(DEVICE_ID   ASC,LOGICAL_VOLUME_NAME   ASC,LOGICAL_VOLUME_TYPE   ASC);

ALTER TABLE LOGICAL_VOLUME
ADD CONSTRAINT  AK_LOGVOL_DEVID_LVNAME UNIQUE (DEVICE_ID,LOGICAL_VOLUME_NAME,LOGICAL_VOLUME_TYPE);

ALTER TABLE LOGICAL_VOLUME
ADD CONSTRAINT  AK_LOGVOL_LV_DEVID UNIQUE (LOGICAL_VOLUME_ID);

ALTER TABLE LOGICAL_VOLUME
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1179256100 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE LOGICAL_VOLUME
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1178468922 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE LOGICAL_VOLUME
	MODIFY LOGICAL_VOLUME_TYPE DEFAULT 'legacy';

CREATE  INDEX XIF5LOGICAL_VOLUME ON LOGICAL_VOLUME
(LOGICAL_VOLUME_TYPE   ASC);

CREATE  INDEX XIF_LOGVOL_DEVICE_ID ON LOGICAL_VOLUME
(DEVICE_ID   ASC);

CREATE  INDEX XIF_LOGVOL_FSTYPE ON LOGICAL_VOLUME
(FILESYSTEM_TYPE   ASC);

CREATE  INDEX XIF_LOGVOL_VGID ON LOGICAL_VOLUME
(VOLUME_GROUP_ID   ASC,DEVICE_ID   ASC);

/***********************************************
 * Table: LOGICAL_VOLUME_PROPERTY
 ***********************************************/

CREATE TABLE LOGICAL_VOLUME_PROPERTY
(
	LOGICAL_VOLUME_PROPERTY_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	LOGICAL_VOLUME_ID    NUMBER NULL ,
	LOGICAL_VOLUME_TYPE  VARCHAR2(50 BYTE) NULL ,
	LOGICAL_VOLUME_PURPOSE VARCHAR2(50 BYTE) NULL ,
	FILESYSTEM_TYPE      VARCHAR2(50 BYTE) NULL ,
	LOGICAL_VOLUME_PROPERTY_NAME VARCHAR2(50 BYTE) NULL ,
	LOGICAL_VOLUME_PROPERTY_VALUE VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN LOGICAL_VOLUME_PROPERTY.FILESYSTEM_TYPE IS 'THIS COLUMN IS DEPRECATED AND WILL BE REMOVED >= 0.66';

CREATE UNIQUE INDEX PK_LOGICAL_VOLUME_PROPERTY ON LOGICAL_VOLUME_PROPERTY
(LOGICAL_VOLUME_PROPERTY_ID   ASC);

ALTER TABLE LOGICAL_VOLUME_PROPERTY
	ADD CONSTRAINT  PK_LOGICAL_VOLUME_PROPERTY PRIMARY KEY (LOGICAL_VOLUME_PROPERTY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_LOGICAL_VOLUME_PROPERTY  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_LOGICAL_VOL_PROP_FS_LV_NAME ON LOGICAL_VOLUME_PROPERTY
(LOGICAL_VOLUME_ID   ASC,LOGICAL_VOLUME_PROPERTY_NAME   ASC);

ALTER TABLE LOGICAL_VOLUME_PROPERTY
ADD CONSTRAINT  AK_LOGICAL_VOL_PROP_FS_LV_NAME UNIQUE (LOGICAL_VOLUME_ID,LOGICAL_VOLUME_PROPERTY_NAME);

ALTER TABLE LOGICAL_VOLUME_PROPERTY
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1838125216 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE LOGICAL_VOLUME_PROPERTY
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1838912394 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_LVOL_PROP_LVID_FSTYP ON LOGICAL_VOLUME_PROPERTY
(LOGICAL_VOLUME_ID   ASC,FILESYSTEM_TYPE   ASC);

CREATE  INDEX XIF_LVOL_PROP_LVPN_FSTY ON LOGICAL_VOLUME_PROPERTY
(LOGICAL_VOLUME_PROPERTY_NAME   ASC,FILESYSTEM_TYPE   ASC);

CREATE  INDEX XIF_LVPROP_PURPOSE ON LOGICAL_VOLUME_PROPERTY
(LOGICAL_VOLUME_PURPOSE   ASC);

CREATE  INDEX XIF_LVPROP_TYPE ON LOGICAL_VOLUME_PROPERTY
(LOGICAL_VOLUME_TYPE   ASC);

/***********************************************
 * Table: LOGICAL_VOLUME_PURPOSE
 ***********************************************/

CREATE TABLE LOGICAL_VOLUME_PURPOSE
(
	LOGICAL_VOLUME_PURPOSE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	LOGICAL_VOLUME_ID    NUMBER NOT NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_LOGICAL_VOLUME_PURPOSE ON LOGICAL_VOLUME_PURPOSE
(LOGICAL_VOLUME_PURPOSE   ASC,LOGICAL_VOLUME_ID   ASC);

ALTER TABLE LOGICAL_VOLUME_PURPOSE
	ADD CONSTRAINT  PK_LOGICAL_VOLUME_PURPOSE PRIMARY KEY (LOGICAL_VOLUME_PURPOSE,LOGICAL_VOLUME_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_LOGICAL_VOLUME_PURPOSE  ENABLE  VALIDATE;

ALTER TABLE LOGICAL_VOLUME_PURPOSE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1767220084 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE LOGICAL_VOLUME_PURPOSE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1768007262 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_LVPURP_LVID ON LOGICAL_VOLUME_PURPOSE
(LOGICAL_VOLUME_ID   ASC);

CREATE  INDEX XIF_LVPURP_VAL_LGPUPRP ON LOGICAL_VOLUME_PURPOSE
(LOGICAL_VOLUME_PURPOSE   ASC);

/***********************************************
 * Table: MLAG_PEERING
 ***********************************************/

CREATE TABLE MLAG_PEERING
(
	MLAG_PEERING_ID      NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DEVICE1_ID           NUMBER NULL ,
	DEVICE2_ID           NUMBER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_MLAG_PEERING ON MLAG_PEERING
(MLAG_PEERING_ID   ASC);

ALTER TABLE MLAG_PEERING
	ADD CONSTRAINT  PK_MLAG_PEERING PRIMARY KEY (MLAG_PEERING_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_MLAG_PEERING  ENABLE  VALIDATE;

ALTER TABLE MLAG_PEERING
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_660759413 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE MLAG_PEERING
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_659972235 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_MLAG_PEERING_DEVID1 ON MLAG_PEERING
(DEVICE1_ID   ASC);

CREATE  INDEX XIF_MLAG_PEERING_DEVID2 ON MLAG_PEERING
(DEVICE2_ID   ASC);

/***********************************************
 * Table: NETBLOCK
 ***********************************************/

CREATE TABLE NETBLOCK
(
	NETBLOCK_ID          NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	IP_ADDRESS           NUMBER NOT NULL ,
	NETBLOCK_TYPE        VARCHAR2(50 BYTE) NOT NULL ,
	IS_SINGLE_ADDRESS    CHAR(1 BYTE) NOT NULL ,
	CAN_SUBNET           CHAR(1) NOT NULL ,
	PARENT_NETBLOCK_ID   NUMBER NULL ,
	NETBLOCK_STATUS      VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NIC_ID               VARCHAR2(255 BYTE) NULL ,
	NIC_COMPANY_ID       NUMBER NULL ,
	IP_UNIVERSE_ID       NUMBER(13,0) NOT NULL ,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	RESERVATION_TICKET_NUMBER VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_NETBLOCK ON NETBLOCK
(NETBLOCK_ID   ASC);

ALTER TABLE NETBLOCK
	ADD CONSTRAINT  PK_NETBLOCK PRIMARY KEY (NETBLOCK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_NETBLOCK  ENABLE  VALIDATE;

ALTER TABLE NETBLOCK
	MODIFY IS_SINGLE_ADDRESS CONSTRAINT  CKC_IS_SINGLE_ADDRESS_NETBLOCK CHECK (IS_SINGLE_ADDRESS is null or (IS_SINGLE_ADDRESS in ('Y','N') and IS_SINGLE_ADDRESS = upper(IS_SINGLE_ADDRESS)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETBLOCK
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_NETBLOCK CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETBLOCK
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_NETBLOCK CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETBLOCK
	MODIFY CAN_SUBNET CONSTRAINT  CHECK_YES_NO_172122967 CHECK (CAN_SUBNET IN ('Y', 'N'));

ALTER TABLE NETBLOCK
	MODIFY IP_UNIVERSE_ID DEFAULT 0;

CREATE  INDEX XIF5NETBLOCK ON NETBLOCK
(NIC_COMPANY_ID   ASC);

CREATE  INDEX XIF6NETBLOCK ON NETBLOCK
(IP_UNIVERSE_ID   ASC);

CREATE  INDEX XIF7NETBLOCK ON NETBLOCK
(NETBLOCK_TYPE   ASC);

CREATE    BITMAP INDEX IDX_NETBLK_NETBLKSTATUS ON NETBLOCK
(NETBLOCK_STATUS   ASC);

CREATE  INDEX IX_NETBLK_IP_ADDRESS ON NETBLOCK
(IP_ADDRESS   ASC);

CREATE  INDEX IX_NETBLK_IP_ADDRESS_PARENT ON NETBLOCK
(PARENT_NETBLOCK_ID   ASC);

/***********************************************
 * Table: NETBLOCK_COLLECTION
 ***********************************************/

CREATE TABLE NETBLOCK_COLLECTION
(
	NETBLOCK_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NETBLOCK_COLLECTION_NAME VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NETBLOCK_COLLECTION_TYPE VARCHAR2(50 BYTE) NULL ,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_NETBLOCK_COLLECTION ON NETBLOCK_COLLECTION
(NETBLOCK_COLLECTION_ID   ASC);

CREATE UNIQUE INDEX UQ_NETBLOCK_COLLECTION_NAME ON NETBLOCK_COLLECTION
(NETBLOCK_COLLECTION_NAME   ASC,NETBLOCK_COLLECTION_TYPE   ASC);

ALTER TABLE NETBLOCK_COLLECTION
	ADD CONSTRAINT  PK_NETBLOCK_COLLECTION PRIMARY KEY (NETBLOCK_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_NETBLOCK_COLLECTION  ENABLE  VALIDATE;

ALTER TABLE NETBLOCK_COLLECTION
ADD CONSTRAINT  UQ_NETBLOCK_COLLECTION_NAME UNIQUE (NETBLOCK_COLLECTION_NAME,NETBLOCK_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX UQ_NETBLOCK_COLLECTION_NAME  ENABLE  VALIDATE;

ALTER TABLE NETBLOCK_COLLECTION
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_138884144 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETBLOCK_COLLECTION
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_139671322 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIFK_NB_COL_VAL_NB_COL_TYP ON NETBLOCK_COLLECTION
(NETBLOCK_COLLECTION_TYPE   ASC);

/***********************************************
 * Table: NETBLOCK_COLLECTION_HIER
 ***********************************************/

CREATE TABLE NETBLOCK_COLLECTION_HIER
(
	NETBLOCK_COLLECTION_ID NUMBER NOT NULL ,
	CHILD_NETBLOCK_COLLECTION_ID NUMBER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_NETBLOCK_COLLECTION_HIER ON NETBLOCK_COLLECTION_HIER
(NETBLOCK_COLLECTION_ID   ASC,CHILD_NETBLOCK_COLLECTION_ID   ASC);

ALTER TABLE NETBLOCK_COLLECTION_HIER
	ADD CONSTRAINT  PK_NETBLOCK_COLLECTION_HIER PRIMARY KEY (NETBLOCK_COLLECTION_ID,CHILD_NETBLOCK_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_NETBLOCK_COLLECTION_HIER  ENABLE  VALIDATE;

ALTER TABLE NETBLOCK_COLLECTION_HIER
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1318222441 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETBLOCK_COLLECTION_HIER
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1317435263 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIFK_NBLK_C_HIER_CHLD_NC ON NETBLOCK_COLLECTION_HIER
(CHILD_NETBLOCK_COLLECTION_ID   ASC);

CREATE  INDEX XIFK_NBLK_C_HIER_PRNT_NC ON NETBLOCK_COLLECTION_HIER
(NETBLOCK_COLLECTION_ID   ASC);

CREATE TABLE NETBLOCK_COLLECTION_NETBLOCK
(
	NETBLOCK_COLLECTION_ID NUMBER NOT NULL ,
	NETBLOCK_ID          NUMBER NOT NULL ,
	NETBLOCK_ID_RANK     INTEGER NULL ,
	START_DATE           TIMESTAMP NULL ,
	FINISH_DATE          TIMESTAMP NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_NETBLOCK_COLLECTION_NETBLOC ON NETBLOCK_COLLECTION_NETBLOCK
(NETBLOCK_COLLECTION_ID   ASC,NETBLOCK_ID   ASC);

ALTER TABLE NETBLOCK_COLLECTION_NETBLOCK
	ADD CONSTRAINT  PK_NETBLOCK_COLLECTION_NETBLOC PRIMARY KEY (NETBLOCK_COLLECTION_ID,NETBLOCK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_NETBLOCK_COLLECTION_NETBLOC  ENABLE  VALIDATE;

CREATE UNIQUE INDEX XAKNETBLK_COLL_NBLK_ID ON NETBLOCK_COLLECTION_NETBLOCK
(NETBLOCK_COLLECTION_ID   ASC,NETBLOCK_ID_RANK   ASC);

ALTER TABLE NETBLOCK_COLLECTION_NETBLOCK
ADD CONSTRAINT  AK_NETBLK_COLL_NBLK_ID UNIQUE (NETBLOCK_COLLECTION_ID,NETBLOCK_ID_RANK);

ALTER TABLE NETBLOCK_COLLECTION_NETBLOCK
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_62445523 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETBLOCK_COLLECTION_NETBLOCK
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_63232701 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX IFK_NB_COL_NB_NBLKID ON NETBLOCK_COLLECTION_NETBLOCK
(NETBLOCK_ID   ASC);

CREATE  INDEX XIFK_NB_COL_NB_NBCOLID ON NETBLOCK_COLLECTION_NETBLOCK
(NETBLOCK_COLLECTION_ID   ASC);

/***********************************************
 * Table: NETWORK_INTERFACE
 ***********************************************/

CREATE TABLE NETWORK_INTERFACE
(
	NETWORK_INTERFACE_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DEVICE_ID            NUMBER NOT NULL ,
	NETWORK_INTERFACE_NAME VARCHAR2(255 BYTE) NULL ,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	PARENT_NETWORK_INTERFACE_ID NUMBER NULL ,
	PARENT_RELATION_TYPE VARCHAR2(255) NULL ,
	NETBLOCK_ID          NUMBER NULL ,
	PHYSICAL_PORT_ID     NUMBER NULL ,
	SLOT_ID              NUMBER NULL ,
	LOGICAL_PORT_ID      NUMBER NULL ,
	NETWORK_INTERFACE_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	IS_INTERFACE_UP      CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	MAC_ADDR             NUMBER NULL ,
	SHOULD_MONITOR       VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PROVIDES_NAT         CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SHOULD_MANAGE        CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PROVIDES_DHCP        CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN NETWORK_INTERFACE.PHYSICAL_PORT_ID IS 'historical column to be dropped in the next release after tools use slot_id.  matches slot_id by trigger.';

COMMENT ON COLUMN NETWORK_INTERFACE.SLOT_ID IS 'to be dropped after transition to logical_ports are complete.';

CREATE UNIQUE INDEX PK_NETWORK_INTERFACE_ID ON NETWORK_INTERFACE
(NETWORK_INTERFACE_ID   ASC);

ALTER TABLE NETWORK_INTERFACE
	ADD CONSTRAINT  PK_NETWORK_INTERFACE_ID PRIMARY KEY (NETWORK_INTERFACE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_NETWORK_INTERFACE_ID  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_NETINT_DEVID_NAME ON NETWORK_INTERFACE
(DEVICE_ID   ASC,NETWORK_INTERFACE_NAME   ASC);

ALTER TABLE NETWORK_INTERFACE
ADD CONSTRAINT  FK_NETINT_DEVID_NAME UNIQUE (DEVICE_ID,NETWORK_INTERFACE_NAME);

CREATE UNIQUE INDEX AK_NET_INT_DEVID_NETINTID ON NETWORK_INTERFACE
(NETWORK_INTERFACE_ID   ASC,DEVICE_ID   ASC);

ALTER TABLE NETWORK_INTERFACE
ADD CONSTRAINT  AK_NET_INT_DEVID_NETINTID UNIQUE (NETWORK_INTERFACE_ID,DEVICE_ID);

ALTER TABLE NETWORK_INTERFACE
	MODIFY IS_INTERFACE_UP CONSTRAINT  CKC_IS_INTERFACE_UP_NETWORK_ CHECK (IS_INTERFACE_UP in ('Y','N') and IS_INTERFACE_UP = upper(IS_INTERFACE_UP))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETWORK_INTERFACE
	MODIFY MAC_ADDR CONSTRAINT  CKC_MAC_ADDR_NETWORK_ CHECK (MAC_ADDR is null or (MAC_ADDR between 0 and 281474976710656))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETWORK_INTERFACE
	MODIFY PROVIDES_NAT CONSTRAINT  CKC_PROVIDES_NAT_NETWORK_ CHECK (PROVIDES_NAT in ('Y','N') and PROVIDES_NAT = upper(PROVIDES_NAT))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETWORK_INTERFACE
	MODIFY SHOULD_MANAGE CONSTRAINT  CKC_SHOULD_MANAGE_NETWORK_ CHECK (SHOULD_MANAGE in ('Y','N') and SHOULD_MANAGE = upper(SHOULD_MANAGE))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETWORK_INTERFACE
	MODIFY PROVIDES_DHCP CONSTRAINT  CKC_PROVIDES_DHCP_NETWORK_ CHECK (PROVIDES_DHCP in ('Y','N') and PROVIDES_DHCP = upper(PROVIDES_DHCP))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETWORK_INTERFACE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_NETWORK_INT CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETWORK_INTERFACE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_NETWORK_INT CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETWORK_INTERFACE
	MODIFY PARENT_RELATION_TYPE CONSTRAINT  CKC_NETINT_PARENT_R_1604677531 CHECK (PARENT_RELATION_TYPE IN ('NONE', 'SUBINTERFACE', 'SECONDARY'));

ALTER TABLE NETWORK_INTERFACE
	MODIFY IS_INTERFACE_UP DEFAULT 'Y';

ALTER TABLE NETWORK_INTERFACE
	MODIFY PROVIDES_NAT DEFAULT 'N';

ALTER TABLE NETWORK_INTERFACE
	MODIFY SHOULD_MANAGE DEFAULT 'Y';

ALTER TABLE NETWORK_INTERFACE
	MODIFY PROVIDES_DHCP DEFAULT 'N';

CREATE    BITMAP INDEX IDX_NETINT_ISIFACEUP ON NETWORK_INTERFACE
(IS_INTERFACE_UP   ASC);

CREATE    BITMAP INDEX IDX_NETINT_PROVIDESNAT ON NETWORK_INTERFACE
(PROVIDES_NAT   ASC);

CREATE    BITMAP INDEX IDX_NETINT_PROVIDES_DHCP ON NETWORK_INTERFACE
(PROVIDES_DHCP   ASC);

CREATE    BITMAP INDEX IDX_NETINT_SHOULDMANGE ON NETWORK_INTERFACE
(SHOULD_MANAGE   ASC);

CREATE    BITMAP INDEX IDX_NETINT_SHOULDMONITOR ON NETWORK_INTERFACE
(SHOULD_MONITOR   ASC);

CREATE  INDEX XIF_NETINT_NETDEV_ID ON NETWORK_INTERFACE
(DEVICE_ID   ASC);

CREATE  INDEX XIF_NETINT_PARENTNETINT ON NETWORK_INTERFACE
(PARENT_NETWORK_INTERFACE_ID   ASC);

CREATE  INDEX XIF_NETINT_PRIM_V4ID ON NETWORK_INTERFACE
(NETBLOCK_ID   ASC);

CREATE  INDEX XIF_NETINT_SLOT_ID ON NETWORK_INTERFACE
(SLOT_ID   ASC);

CREATE    BITMAP INDEX XIF_NETINT_TYPEID ON NETWORK_INTERFACE
(NETWORK_INTERFACE_TYPE   ASC);

CREATE  INDEX XIF_NET_INT_LGL_PORT_ID ON NETWORK_INTERFACE
(LOGICAL_PORT_ID   ASC);

CREATE  INDEX XIF_NET_INT_PHYS_PORT_ID ON NETWORK_INTERFACE
(PHYSICAL_PORT_ID   ASC);

/***********************************************
 * Table: NETWORK_INTERFACE_NETBLOCK
 ***********************************************/

CREATE TABLE NETWORK_INTERFACE_NETBLOCK
(
	NETWORK_INTERFACE_ID NUMBER NOT NULL ,
	NETBLOCK_ID          NUMBER NOT NULL ,
	NETWORK_INTERFACE_RANK INTEGER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN NETWORK_INTERFACE_NETBLOCK.NETWORK_INTERFACE_RANK IS 'specifies the order of priority for the ip address.  generally only the highest priority matters (or highest priority v4 and v6) and is the "primary" if the underlying device supports it.';

CREATE UNIQUE INDEX PK_NETWORK_INTERFACE_NETBLOCK ON NETWORK_INTERFACE_NETBLOCK
(NETWORK_INTERFACE_ID   ASC,NETBLOCK_ID   ASC);

ALTER TABLE NETWORK_INTERFACE_NETBLOCK
	ADD CONSTRAINT  PK_NETWORK_INTERFACE_NETBLOCK PRIMARY KEY (NETWORK_INTERFACE_ID,NETBLOCK_ID)   USING INDEX PK_NETWORK_INTERFACE_NETBLOCK  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_NETINT_NBLK_NBLK_ID ON NETWORK_INTERFACE_NETBLOCK
(NETBLOCK_ID   ASC);

ALTER TABLE NETWORK_INTERFACE_NETBLOCK
ADD CONSTRAINT  AK_NETINT_NBLK_NBLK_ID UNIQUE (NETBLOCK_ID);

CREATE UNIQUE INDEX AK_NETWORK_INTERFACE_NBLK_NI_R ON NETWORK_INTERFACE_NETBLOCK
(NETWORK_INTERFACE_ID   ASC,NETWORK_INTERFACE_RANK   ASC);

ALTER TABLE NETWORK_INTERFACE_NETBLOCK
ADD CONSTRAINT  AK_NETWORK_INTERFACE_NBLK_NI_R UNIQUE (NETWORK_INTERFACE_ID,NETWORK_INTERFACE_RANK);

ALTER TABLE NETWORK_INTERFACE_NETBLOCK
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1450451504 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETWORK_INTERFACE_NETBLOCK
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1449664326 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETWORK_INTERFACE_NETBLOCK
	MODIFY NETWORK_INTERFACE_RANK DEFAULT 0;

CREATE  INDEX XIF_NETINT_NB_NBLK_ID ON NETWORK_INTERFACE_NETBLOCK
(NETWORK_INTERFACE_ID   ASC);

/***********************************************
 * Table: NETWORK_INTERFACE_PURPOSE
 ***********************************************/

CREATE TABLE NETWORK_INTERFACE_PURPOSE
(
	DEVICE_ID            NUMBER NOT NULL ,
	NETWORK_INTERFACE_PURPOSE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NETWORK_INTERFACE_ID NUMBER NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_NETWORK_INT_PURPOSE ON NETWORK_INTERFACE_PURPOSE
(DEVICE_ID   ASC,NETWORK_INTERFACE_PURPOSE   ASC);

ALTER TABLE NETWORK_INTERFACE_PURPOSE
	ADD CONSTRAINT  PK_NETWORK_INT_PURPOSE PRIMARY KEY (DEVICE_ID,NETWORK_INTERFACE_PURPOSE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_NETWORK_INT_PURPOSE  ENABLE  VALIDATE;

ALTER TABLE NETWORK_INTERFACE_PURPOSE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1249071155 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETWORK_INTERFACE_PURPOSE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1248283977 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1NETWORK_INTERFACE_PURPOSE ON NETWORK_INTERFACE_PURPOSE
(DEVICE_ID   ASC);

CREATE  INDEX XIF2NETWORK_INTERFACE_PURPOSE ON NETWORK_INTERFACE_PURPOSE
(NETWORK_INTERFACE_PURPOSE   ASC);

CREATE  INDEX XIF3NETWORK_INTERFACE_PURPOSE ON NETWORK_INTERFACE_PURPOSE
(NETWORK_INTERFACE_ID   ASC,DEVICE_ID   ASC);

/***********************************************
 * Table: NETWORK_RANGE
 ***********************************************/

CREATE TABLE NETWORK_RANGE
(
	NETWORK_RANGE_ID     NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NETWORK_RANGE_TYPE   VARCHAR2(50 BYTE) NOT NULL ,
	DESCRIPTION          VARCHAR2(4000) NULL ,
	PARENT_NETBLOCK_ID   NUMBER NOT NULL ,
	START_NETBLOCK_ID    NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	STOP_NETBLOCK_ID     NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DNS_PREFIX           VARCHAR2(255) NULL ,
	DNS_DOMAIN_ID        NUMBER NULL ,
	LEASE_TIME           NUMBER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN NETWORK_RANGE.PARENT_NETBLOCK_ID IS 'The netblock where the range appears.  This can be of a different type than start/stop netblocks, but start/stop need to be within the parent.';

CREATE UNIQUE INDEX PK_NETWORK_RANGE ON NETWORK_RANGE
(NETWORK_RANGE_ID   ASC);

ALTER TABLE NETWORK_RANGE
	ADD CONSTRAINT  PK_NETWORK_RANGE PRIMARY KEY (NETWORK_RANGE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_NETWORK_RANGE  ENABLE  VALIDATE;

ALTER TABLE NETWORK_RANGE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_DHCP_RAN CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETWORK_RANGE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_DHCP_RAN CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_NETRNG_DNSDOMAINID ON NETWORK_RANGE
(DNS_DOMAIN_ID   ASC);

CREATE  INDEX XIF_NETRNG_NETRNG_TYP ON NETWORK_RANGE
(NETWORK_RANGE_TYPE   ASC);

CREATE  INDEX XIF_NETRNG_PRNGNBLKID ON NETWORK_RANGE
(PARENT_NETBLOCK_ID   ASC);

CREATE  INDEX XIF_NETRNG_STARTNETBLK ON NETWORK_RANGE
(START_NETBLOCK_ID   ASC);

CREATE  INDEX XIF_NETRNG_STOPNETBLK ON NETWORK_RANGE
(STOP_NETBLOCK_ID   ASC);

/***********************************************
 * Table: NETWORK_SERVICE
 ***********************************************/

CREATE TABLE NETWORK_SERVICE
(
	NETWORK_SERVICE_ID   NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NAME                 VARCHAR2(255 BYTE) NULL ,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	NETWORK_SERVICE_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	IS_MONITORED         CHAR(1 BYTE) NULL ,
	DEVICE_ID            NUMBER NULL ,
	NETWORK_INTERFACE_ID NUMBER NULL ,
	DNS_RECORD_ID        NUMBER NULL ,
	SERVICE_ENVIRONMENT_ID NUMBER(13,0) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_SERVICE ON NETWORK_SERVICE
(NETWORK_SERVICE_ID   ASC);

ALTER TABLE NETWORK_SERVICE
	ADD CONSTRAINT  PK_SERVICE PRIMARY KEY (NETWORK_SERVICE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SERVICE  ENABLE  VALIDATE;

ALTER TABLE NETWORK_SERVICE
	MODIFY IS_MONITORED CONSTRAINT  CKC_IS_MONITORED_NETWORK_ CHECK (IS_MONITORED is null or (IS_MONITORED in ('Y','N') and IS_MONITORED = upper(IS_MONITORED)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETWORK_SERVICE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_NETWORK_SVC CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE NETWORK_SERVICE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_NETWORK_SVC CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE    BITMAP INDEX IDX_NETSVC_ISMONITORED ON NETWORK_SERVICE
(IS_MONITORED   ASC);

CREATE    BITMAP INDEX IDX_NETSVC_NETSVCTYPE ON NETWORK_SERVICE
(NETWORK_SERVICE_TYPE   ASC);

CREATE    BITMAP INDEX IDX_NETSVC_SVCENV ON NETWORK_SERVICE
(SERVICE_ENVIRONMENT_ID   ASC);

CREATE  INDEX IX_NETSVC_DNSIDRECID ON NETWORK_SERVICE
(DNS_RECORD_ID   ASC);

CREATE  INDEX IX_NETSVC_NETDEVID ON NETWORK_SERVICE
(DEVICE_ID   ASC);

CREATE  INDEX IX_NETSVC_NETINTID ON NETWORK_SERVICE
(NETWORK_INTERFACE_ID   ASC);

/***********************************************
 * Table: OPERATING_SYSTEM
 ***********************************************/

CREATE TABLE OPERATING_SYSTEM
(
	OPERATING_SYSTEM_ID  NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	OPERATING_SYSTEM_NAME VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	COMPANY_ID           NUMBER NULL ,
	MAJOR_VERSION        varchar2(50) NOT NULL ,
	VERSION              VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	OPERATING_SYSTEM_FAMILY VARCHAR2(50 BYTE) NULL ,
	PROCESSOR_ARCHITECTURE VARCHAR2(50 BYTE) NULL ,
	SW_PACKAGE_REPOSITORY_ID NUMBER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_OPERATING_SYSTEM ON OPERATING_SYSTEM
(OPERATING_SYSTEM_ID   ASC);

ALTER TABLE OPERATING_SYSTEM
	ADD CONSTRAINT  PK_OPERATING_SYSTEM PRIMARY KEY (OPERATING_SYSTEM_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_OPERATING_SYSTEM  ENABLE  VALIDATE;

ALTER TABLE OPERATING_SYSTEM
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_OPERATIN CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE OPERATING_SYSTEM
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_OPERATIN CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_OS_COMPANY ON OPERATING_SYSTEM
(COMPANY_ID   ASC);

CREATE  INDEX XIF_OS_OS_FAMILY ON OPERATING_SYSTEM
(OPERATING_SYSTEM_FAMILY   ASC);

/***********************************************
 * Table: OPERATING_SYSTEM_SNAPSHOT
 ***********************************************/

CREATE TABLE OPERATING_SYSTEM_SNAPSHOT
(
	OPERATING_SYSTEM_SNAPSHOT_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	OPERATING_SYSTEM_SNAPSHOT_NAME VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	OPERATING_SYSTEM_SNAPSHOT_TYPE VARCHAR2(50 BYTE) NOT NULL ,
	OPERATING_SYSTEM_ID  NUMBER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_OPERATING_SYSTEM_SNAPSH ON OPERATING_SYSTEM_SNAPSHOT
(OPERATING_SYSTEM_SNAPSHOT_ID   ASC);

ALTER TABLE OPERATING_SYSTEM_SNAPSHOT
	ADD CONSTRAINT  PK_VAL_OPERATING_SYSTEM_SNAPSH PRIMARY KEY (OPERATING_SYSTEM_SNAPSHOT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_OPERATING_SYSTEM_SNAPSH  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_OS_SNAP_NAME_TYPE ON OPERATING_SYSTEM_SNAPSHOT
(OPERATING_SYSTEM_ID   ASC,OPERATING_SYSTEM_SNAPSHOT_NAME   ASC,OPERATING_SYSTEM_SNAPSHOT_TYPE   ASC);

ALTER TABLE OPERATING_SYSTEM_SNAPSHOT
ADD CONSTRAINT  AK_OS_SNAP_NAME_TYPE UNIQUE (OPERATING_SYSTEM_ID,OPERATING_SYSTEM_SNAPSHOT_NAME,OPERATING_SYSTEM_SNAPSHOT_TYPE);

ALTER TABLE OPERATING_SYSTEM_SNAPSHOT
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_663379994 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE OPERATING_SYSTEM_SNAPSHOT
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_662592816 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_OS_SNAP_OSID ON OPERATING_SYSTEM_SNAPSHOT
(OPERATING_SYSTEM_ID   ASC);

CREATE  INDEX XIF_OS_SNAP_SNAP_TYPE ON OPERATING_SYSTEM_SNAPSHOT
(OPERATING_SYSTEM_SNAPSHOT_TYPE   ASC);

/***********************************************
 * Table: PERSON
 ***********************************************/

CREATE TABLE PERSON
(
	PERSON_ID            NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	FIRST_NAME           VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	MIDDLE_NAME          VARCHAR2(50 BYTE) NULL ,
	LAST_NAME            VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NAME_SUFFIX          VARCHAR2(10 BYTE) NULL ,
	GENDER               CHAR(1 BYTE) NULL ,
	PREFERRED_FIRST_NAME VARCHAR2(50 BYTE) NULL ,
	PREFERRED_LAST_NAME  VARCHAR2(50 BYTE) NULL ,
	NICKNAME             VARCHAR2(255) NULL ,
	BIRTH_DATE           DATE NULL ,
	DIET                 VARCHAR2(255) NULL ,
	SHIRT_SIZE           VARCHAR2(20 BYTE) NULL ,
	PANT_SIZE            VARCHAR2(20 BYTE) NULL ,
	HAT_SIZE             VARCHAR2(20 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN PERSON.FIRST_NAME IS 'Legal First Name';

COMMENT ON COLUMN PERSON.MIDDLE_NAME IS 'Legal Middle name or name(s)';

COMMENT ON COLUMN PERSON.LAST_NAME IS 'Legal Last Name';

COMMENT ON COLUMN PERSON.PREFERRED_FIRST_NAME IS 'What the person''s preferred name is called, suitable for official commications.';

COMMENT ON COLUMN PERSON.PREFERRED_LAST_NAME IS 'A known last name, typically used if someone has a different married name but professionally is known by something different.';

COMMENT ON COLUMN PERSON.DESCRIPTION IS 'free form description, generally unused';

COMMENT ON COLUMN PERSON.NICKNAME IS 'Common nickname for the person, differs from the preferred name in that its more casual.';

CREATE UNIQUE INDEX PK_PERSON_ID ON PERSON
(PERSON_ID   ASC);

ALTER TABLE PERSON
	ADD CONSTRAINT  PK_PERSON_ID PRIMARY KEY (PERSON_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PERSON_ID  ENABLE  VALIDATE;

ALTER TABLE PERSON
	MODIFY GENDER CONSTRAINT  Validation_Rule_176_1095976282 CHECK (GENDER is null or (GENDER in ('M','F','U') and GENDER = upper(GENDER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON
	MODIFY SHIRT_SIZE CONSTRAINT  Validation_Rule_1770_218378485 CHECK (SHIRT_SIZE is null or (SHIRT_SIZE in ('XS','S','M','L','XL','XXL','XXXL') and SHIRT_SIZE = upper(SHIRT_SIZE)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON
	MODIFY PANT_SIZE CONSTRAINT  Validation_Rule_177_1190387970 CHECK (PANT_SIZE is null or (PANT_SIZE in ('XS','S','M','L','XL','XXL','XXXL') and PANT_SIZE = upper(PANT_SIZE)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_738944843 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_739732021 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1PERSON ON PERSON
(DIET   ASC);

CREATE  INDEX IDX_PERSON_NAME ON PERSON
(FIRST_NAME   ASC,LAST_NAME   ASC);

/***********************************************
 * Table: PERSON_ACCOUNT_REALM_COMPANY
 ***********************************************/

CREATE TABLE PERSON_ACCOUNT_REALM_COMPANY
(
	PERSON_ID            NUMBER NOT NULL ,
	COMPANY_ID           NUMBER NOT NULL ,
	ACCOUNT_REALM_ID     NUMBER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_PERSON_ACCOUNT_REALM_COMPAN ON PERSON_ACCOUNT_REALM_COMPANY
(PERSON_ID   ASC,COMPANY_ID   ASC,ACCOUNT_REALM_ID   ASC);

ALTER TABLE PERSON_ACCOUNT_REALM_COMPANY
	ADD CONSTRAINT  PK_PERSON_ACCOUNT_REALM_COMPAN PRIMARY KEY (PERSON_ID,COMPANY_ID,ACCOUNT_REALM_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PERSON_ACCOUNT_REALM_COMPAN  ENABLE  VALIDATE;

ALTER TABLE PERSON_ACCOUNT_REALM_COMPANY
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_5697049 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON_ACCOUNT_REALM_COMPANY
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_4909871 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF2PERSON_ACCOUNT_REALM_COMPA ON PERSON_ACCOUNT_REALM_COMPANY
(ACCOUNT_REALM_ID   ASC,COMPANY_ID   ASC);

CREATE  INDEX XIF3PERSON_ACCOUNT_REALM_COMPA ON PERSON_ACCOUNT_REALM_COMPANY
(PERSON_ID   ASC);

/***********************************************
 * Table: PERSON_AUTH_QUESTION
 ***********************************************/

CREATE TABLE PERSON_AUTH_QUESTION
(
	AUTH_QUESTION_ID     NUMBER(13) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PERSON_ID            NUMBER NOT NULL ,
	USER_ANSWER          VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	IS_ACTIVE            CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE PERSON_AUTH_QUESTION IS 'Captures system user chosen answers to the set of predetermined questions for user authentication purposes.';

COMMENT ON COLUMN PERSON_AUTH_QUESTION.AUTH_QUESTION_ID IS 'Uniquely identifies authentication question.';

COMMENT ON COLUMN PERSON_AUTH_QUESTION.USER_ANSWER IS 'Records system user answer to the authentication question.';

CREATE UNIQUE INDEX PK_PERSON_AUTH_QUESTION ON PERSON_AUTH_QUESTION
(AUTH_QUESTION_ID   ASC,PERSON_ID   ASC);

ALTER TABLE PERSON_AUTH_QUESTION
	ADD CONSTRAINT  PK_PERSON_AUTH_QUESTION PRIMARY KEY (AUTH_QUESTION_ID,PERSON_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PERSON_AUTH_QUESTION  ENABLE  VALIDATE;

ALTER TABLE PERSON_AUTH_QUESTION
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_SYS_USR_AQ CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON_AUTH_QUESTION
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_SYS_USR_AQ CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON_AUTH_QUESTION
	MODIFY IS_ACTIVE CONSTRAINT  CHECK_YES_NO_272505412 CHECK (IS_ACTIVE IN ('Y', 'N'));

CREATE  INDEX XIF3PERSON_AUTH_QUESTION ON PERSON_AUTH_QUESTION
(PERSON_ID   ASC);

CREATE  INDEX IX_PERSON_AQ_AUTH_QUES_ID ON PERSON_AUTH_QUESTION
(AUTH_QUESTION_ID   ASC);

/***********************************************
 * Table: PERSON_COMPANY
 ***********************************************/

CREATE TABLE PERSON_COMPANY
(
	COMPANY_ID           NUMBER(13,0) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PERSON_ID            NUMBER(13,0) NOT NULL ,
	PERSON_COMPANY_STATUS VARCHAR2(50 BYTE) NOT NULL ,
	PERSON_COMPANY_RELATION VARCHAR2(50 BYTE) NOT NULL ,
	IS_EXEMPT            CHAR(1) NOT NULL ,
	IS_MANAGEMENT        CHAR(1) NOT NULL ,
	IS_FULL_TIME         CHAR(1) NOT NULL ,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	EMPLOYEE_ID          VARCHAR2(255) NULL ,
	PAYROLL_ID           VARCHAR2(255) NULL ,
	EXTERNAL_HR_ID       VARCHAR2(255) NULL ,
	POSITION_TITLE       VARCHAR2(50 BYTE) NULL ,
	BADGE_SYSTEM_ID      VARCHAR2(255 BYTE) NULL ,
	HIRE_DATE            DATE NULL ,
	TERMINATION_DATE     DATE NULL ,
	MANAGER_PERSON_ID    NUMBER NULL ,
	SUPERVISOR_PERSON_ID NUMBER NULL ,
	NICKNAME             VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN PERSON_COMPANY.NICKNAME IS 'Nickname in the context of a given company.  This is less likely to be used, the value in person is preferrred.';

CREATE UNIQUE INDEX AK_UQ_PERSON_COMPANY_EMPID ON PERSON_COMPANY
(EMPLOYEE_ID   ASC,COMPANY_ID   ASC);

CREATE UNIQUE INDEX AK_UQ_PRSON_COMPANY_BDGID ON PERSON_COMPANY
(BADGE_SYSTEM_ID   ASC,COMPANY_ID   ASC);

CREATE UNIQUE INDEX PK_PERSON_COMPANY ON PERSON_COMPANY
(COMPANY_ID   ASC,PERSON_ID   ASC);

ALTER TABLE PERSON_COMPANY
	ADD CONSTRAINT  PK_PERSON_COMPANY PRIMARY KEY (COMPANY_ID,PERSON_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PERSON_COMPANY  ENABLE  VALIDATE;

ALTER TABLE PERSON_COMPANY
ADD CONSTRAINT  AK_UQ_PERSON_COMPANY_EMPID UNIQUE (EMPLOYEE_ID,COMPANY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_UQ_PERSON_COMPANY_EMPID  ENABLE  VALIDATE;

ALTER TABLE PERSON_COMPANY
ADD CONSTRAINT  AK_UQ_PRSON_COMPANY_BDGID UNIQUE (BADGE_SYSTEM_ID,COMPANY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_UQ_PRSON_COMPANY_BDGID  ENABLE  VALIDATE;

ALTER TABLE PERSON_COMPANY
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_611318543 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON_COMPANY
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_610531365 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON_COMPANY
	MODIFY IS_EXEMPT CONSTRAINT  CHECK_YES_NO_1391508687 CHECK (IS_EXEMPT IN ('Y', 'N'));

ALTER TABLE PERSON_COMPANY
	MODIFY IS_MANAGEMENT CONSTRAINT  CHECK_YES_NO_PRSNCMPY_MGMT CHECK (IS_MANAGEMENT IN ('Y', 'N'));

ALTER TABLE PERSON_COMPANY
	MODIFY IS_FULL_TIME CONSTRAINT  CHECK_YES_NO_691526916 CHECK (IS_FULL_TIME IN ('Y', 'N'));

ALTER TABLE PERSON_COMPANY
	MODIFY IS_EXEMPT DEFAULT 'Y';

ALTER TABLE PERSON_COMPANY
	MODIFY IS_MANAGEMENT DEFAULT 'N';

ALTER TABLE PERSON_COMPANY
	MODIFY IS_FULL_TIME DEFAULT 'Y';

CREATE  INDEX XIF3PERSON_COMPANY ON PERSON_COMPANY
(MANAGER_PERSON_ID   ASC);

CREATE  INDEX XIF4PERSON_COMPANY ON PERSON_COMPANY
(SUPERVISOR_PERSON_ID   ASC);

CREATE  INDEX XIF5PERSON_COMPANY ON PERSON_COMPANY
(PERSON_COMPANY_STATUS   ASC);

CREATE  INDEX XIF6PERSON_COMPANY ON PERSON_COMPANY
(PERSON_COMPANY_RELATION   ASC);

CREATE  INDEX XIFPERSON_COMPANY_COMPANY_ID ON PERSON_COMPANY
(COMPANY_ID   ASC);

CREATE  INDEX XIFPERSON_COMPANY_PERSON_ID ON PERSON_COMPANY
(PERSON_ID   ASC);

/***********************************************
 * Table: PERSON_COMPANY_ATTR
 ***********************************************/

CREATE TABLE PERSON_COMPANY_ATTR
(
	COMPANY_ID           NUMBER(13,0) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PERSON_ID            NUMBER(13,0) NOT NULL ,
	PERSON_COMPANY_ATTR_NAME varchar2(50) NULL ,
	ATTRIBUTE_VALUE      varchar2(50) NULL ,
	ATTRIBUTE_VALUE_TIMESTAMP DATE NULL ,
	ATTRIBUTE_VALUE_PERSON_ID NUMBER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN PERSON_COMPANY_ATTR.ATTRIBUTE_VALUE_PERSON_ID IS 'person_id value of the attribute.';

COMMENT ON COLUMN PERSON_COMPANY_ATTR.ATTRIBUTE_VALUE IS 'string value of the attribute.';

CREATE UNIQUE INDEX PK_PERSON_COMPANY_ATTR ON PERSON_COMPANY_ATTR
(COMPANY_ID   ASC,PERSON_ID   ASC);

ALTER TABLE PERSON_COMPANY_ATTR
	ADD CONSTRAINT  PK_PERSON_COMPANY_ATTR PRIMARY KEY (COMPANY_ID,PERSON_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PERSON_COMPANY_ATTR  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_PERSON_COMPANY_ATTR_NAME ON PERSON_COMPANY_ATTR
(COMPANY_ID   ASC,PERSON_ID   ASC,PERSON_COMPANY_ATTR_NAME   ASC);

ALTER TABLE PERSON_COMPANY_ATTR
ADD CONSTRAINT  AK_PERSON_COMPANY_ATTR_NAME UNIQUE (COMPANY_ID,PERSON_ID,PERSON_COMPANY_ATTR_NAME);

ALTER TABLE PERSON_COMPANY_ATTR
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_213297558 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON_COMPANY_ATTR
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_212510380 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF2PERSON_COMPANY_ATTR ON PERSON_COMPANY_ATTR
(ATTRIBUTE_VALUE_PERSON_ID   ASC);

CREATE  INDEX XIF3PERSON_COMPANY_ATTR ON PERSON_COMPANY_ATTR
(PERSON_COMPANY_ATTR_NAME   ASC);

/***********************************************
 * Table: PERSON_COMPANY_BADGE
 ***********************************************/

CREATE TABLE PERSON_COMPANY_BADGE
(
	COMPANY_ID           NUMBER(13,0) NOT NULL ,
	PERSON_ID            NUMBER(13,0) NOT NULL ,
	BADGE_ID             VARCHAR2(255) NOT NULL ,
	DESCRIPTION          VARCHAR2(4000) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE PERSON_COMPANY_BADGE IS 'badges associated with a person''s relationship to a company';

COMMENT ON COLUMN PERSON_COMPANY_BADGE.BADGE_ID IS 'Identification usually defined externally in a badge system.';

CREATE UNIQUE INDEX PK_PERSON_COMPANY_BADGE ON PERSON_COMPANY_BADGE
(COMPANY_ID   ASC,PERSON_ID   ASC,BADGE_ID   ASC);

ALTER TABLE PERSON_COMPANY_BADGE
	ADD CONSTRAINT  PK_PERSON_COMPANY_BADGE PRIMARY KEY (COMPANY_ID,PERSON_ID,BADGE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PERSON_COMPANY_BADGE  ENABLE  VALIDATE;

ALTER TABLE PERSON_COMPANY_BADGE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1479962647 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON_COMPANY_BADGE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1480749825 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1PERSON_COMPANY_BADGE ON PERSON_COMPANY_BADGE
(COMPANY_ID   ASC,PERSON_ID   ASC);

/***********************************************
 * Table: PERSON_CONTACT
 ***********************************************/

CREATE TABLE PERSON_CONTACT
(
	PERSON_CONTACT_ID    NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PERSON_ID            NUMBER NOT NULL ,
	PERSON_CONTACT_TYPE  VARCHAR2(50 BYTE) NOT NULL ,
	PERSON_CONTACT_TECHNOLOGY VARCHAR2(50 BYTE) NOT NULL ,
	PERSON_CONTACT_LOCATION_TYPE VARCHAR2(50 BYTE) NOT NULL ,
	PERSON_CONTACT_PRIVACY VARCHAR2(255) NOT NULL ,
	PERSON_CONTACT_CR_COMPANY_ID NUMBER NULL ,
	ISO_COUNTRY_CODE     CHAR(2 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PHONE_NUMBER         VARCHAR2(50 BYTE) NULL ,
	PHONE_EXTENSION      VARCHAR2(10 BYTE) NULL ,
	PHONE_PIN            INTEGER NULL ,
	PERSON_CONTACT_ACCOUNT_NAME VARCHAR2(255) NULL ,
	PERSON_CONTACT_ORDER NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PERSON_CONTACT_NOTES VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN PERSON_CONTACT.PERSON_CONTACT_CR_COMPANY_ID IS 'The Contact''s Carrier Company Id';

COMMENT ON COLUMN PERSON_CONTACT.PERSON_CONTACT_TECHNOLOGY IS 'technology sub-type or protocol(phone,mobile,fax,voicemail,conference)';

CREATE UNIQUE INDEX AK_PRSN_CONTCT_TYPE_ORDER ON PERSON_CONTACT
(PERSON_CONTACT_ORDER   ASC,PERSON_ID   ASC,PERSON_CONTACT_TYPE   ASC);

CREATE UNIQUE INDEX PK_PERSON_CONTACT_TYPE ON PERSON_CONTACT
(PERSON_CONTACT_ID   ASC);

ALTER TABLE PERSON_CONTACT
	ADD CONSTRAINT  PK_PERSON_CONTACT_TYPE PRIMARY KEY (PERSON_CONTACT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PERSON_CONTACT_TYPE  ENABLE  VALIDATE;

ALTER TABLE PERSON_CONTACT
ADD CONSTRAINT  AK_PRSN_CONTCT_TYPE_ORDER UNIQUE (PERSON_CONTACT_ORDER,PERSON_ID,PERSON_CONTACT_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_PRSN_CONTCT_TYPE_ORDER  ENABLE  VALIDATE;

ALTER TABLE PERSON_CONTACT
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_SYSUSR_PHONE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON_CONTACT
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_SYSUSR_PHONE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON_CONTACT
	MODIFY PERSON_CONTACT_PRIVACY CONSTRAINT  CKC_CONTACT_PRIVACY_440865622 CHECK (PERSON_CONTACT_PRIVACY IN ('PRIVATE', 'PUBLIC', 'HIDDEN'));

CREATE  INDEX XIF4PERSON_CONTACT ON PERSON_CONTACT
(PERSON_CONTACT_LOCATION_TYPE   ASC);

CREATE  INDEX XIF5PERSON_CONTACT ON PERSON_CONTACT
(PERSON_CONTACT_CR_COMPANY_ID   ASC);

CREATE  INDEX XIF6PERSON_CONTACT ON PERSON_CONTACT
(PERSON_CONTACT_TECHNOLOGY   ASC,PERSON_CONTACT_TYPE   ASC);

CREATE  INDEX XIF_PERSON_CONTACT_PERSON_ID ON PERSON_CONTACT
(PERSON_ID   ASC);

CREATE  INDEX XIF_PERSON_TYPE_ISO_CODE ON PERSON_CONTACT
(ISO_COUNTRY_CODE   ASC);

/***********************************************
 * Table: PERSON_IMAGE
 ***********************************************/

CREATE TABLE PERSON_IMAGE
(
	PERSON_IMAGE_ID      NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PERSON_ID            NUMBER NOT NULL ,
	PERSON_IMAGE_ORDER   INTEGER NOT NULL ,
	IMAGE_TYPE           VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	IMAGE_BLOB           BLOB NOT NULL ,
	IMAGE_CHECKSUM       VARCHAR2(255) NULL ,
	IMAGE_LABEL          VARCHAR2(255) NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_PERSON_IMAGE ON PERSON_IMAGE
(PERSON_IMAGE_ID   ASC);

ALTER TABLE PERSON_IMAGE
	ADD CONSTRAINT  PK_PERSON_IMAGE PRIMARY KEY (PERSON_IMAGE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PERSON_IMAGE  ENABLE  VALIDATE;

ALTER TABLE PERSON_IMAGE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_SYS_USER_IMG CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON_IMAGE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_SYS_USER_IMG CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF3PERSON_IMAGE ON PERSON_IMAGE
(PERSON_ID   ASC);

CREATE    BITMAP INDEX IDX_PRSNIMG_IMG_TYPE ON PERSON_IMAGE
(IMAGE_TYPE   ASC);

/***********************************************
 * Table: PERSON_IMAGE_USAGE
 ***********************************************/

CREATE TABLE PERSON_IMAGE_USAGE
(
	PERSON_IMAGE_ID      NUMBER NOT NULL ,
	PERSON_IMAGE_USAGE   varchar2(50) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_PERSON_IMAGE_USAGE ON PERSON_IMAGE_USAGE
(PERSON_IMAGE_ID   ASC,PERSON_IMAGE_USAGE   ASC);

ALTER TABLE PERSON_IMAGE_USAGE
	ADD CONSTRAINT  PK_PERSON_IMAGE_USAGE PRIMARY KEY (PERSON_IMAGE_ID,PERSON_IMAGE_USAGE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PERSON_IMAGE_USAGE  ENABLE  VALIDATE;

ALTER TABLE PERSON_IMAGE_USAGE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_635132711 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON_IMAGE_USAGE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_635919889 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1PERSON_IMAGE_USAGE ON PERSON_IMAGE_USAGE
(PERSON_IMAGE_ID   ASC);

CREATE  INDEX XIF2PERSON_IMAGE_USAGE ON PERSON_IMAGE_USAGE
(PERSON_IMAGE_USAGE   ASC);

/***********************************************
 * Table: PERSON_LOCATION
 ***********************************************/

CREATE TABLE PERSON_LOCATION
(
	PERSON_LOCATION_ID   NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PERSON_ID            NUMBER NULL ,
	PERSON_LOCATION_TYPE VARCHAR2(50 BYTE) NULL ,
	SITE_CODE            VARCHAR2(50 BYTE) NULL ,
	PHYSICAL_ADDRESS_ID  NUMBER(13,0) NULL ,
	BUILDING             VARCHAR2(50 BYTE) NULL ,
	FLOOR                VARCHAR2(10 BYTE) NULL ,
	SECTION              VARCHAR2(50 BYTE) NULL ,
	SEAT_NUMBER          VARCHAR2(10 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_PERSON_LOCATION ON PERSON_LOCATION
(PERSON_LOCATION_ID   ASC);

ALTER TABLE PERSON_LOCATION
	ADD CONSTRAINT  PK_PERSON_LOCATION PRIMARY KEY (PERSON_LOCATION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PERSON_LOCATION  ENABLE  VALIDATE;

ALTER TABLE PERSON_LOCATION
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_SYSUSR_LOC CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON_LOCATION
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_SYSUSR_LOC CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIFPERSLOC_PERSID ON PERSON_LOCATION
(PERSON_ID   ASC);

CREATE  INDEX XIFPERSLOC_PERSLOCTYP ON PERSON_LOCATION
(PERSON_LOCATION_TYPE   ASC);

CREATE  INDEX XIFPERSLOC_PHYSADDRID ON PERSON_LOCATION
(PHYSICAL_ADDRESS_ID   ASC);

CREATE  INDEX XIFPERSLOC_SITECODE ON PERSON_LOCATION
(SITE_CODE   ASC);

/***********************************************
 * Table: PERSON_NOTE
 ***********************************************/

CREATE TABLE PERSON_NOTE
(
	NOTE_ID              NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PERSON_ID            NUMBER NULL ,
	NOTE_TEXT            VARCHAR2(4000 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NOTE_DATE            DATE NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NOTE_USER            VARCHAR2(30 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_PERSON_NOTE ON PERSON_NOTE
(NOTE_ID   ASC);

ALTER TABLE PERSON_NOTE
	ADD CONSTRAINT  PK_PERSON_NOTE PRIMARY KEY (NOTE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PERSON_NOTE  ENABLE  VALIDATE;

ALTER TABLE PERSON_NOTE
	MODIFY NOTE_USER CONSTRAINT  CKC_NOTE_USER_SYSTEM_U CHECK (NOTE_USER = upper(NOTE_USER))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON_NOTE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_PERSON_NOTES CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON_NOTE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_PERSON_NOTES CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1PERSON_NOTE ON PERSON_NOTE
(PERSON_ID   ASC);

/***********************************************
 * Table: PERSON_PARKING_PASS
 ***********************************************/

CREATE TABLE PERSON_PARKING_PASS
(
	PERSON_PARKING_PASS_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PERSON_ID            NUMBER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_PERSON_PARKING_PASS ON PERSON_PARKING_PASS
(PERSON_PARKING_PASS_ID   ASC,PERSON_ID   ASC);

ALTER TABLE PERSON_PARKING_PASS
	ADD CONSTRAINT  PK_SYSTEM_PARKING_PASS PRIMARY KEY (PERSON_PARKING_PASS_ID,PERSON_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PERSON_PARKING_PASS  ENABLE  VALIDATE;

ALTER TABLE PERSON_PARKING_PASS
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_PARKPASS CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON_PARKING_PASS
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_PARKPASS CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF2PERSON_PARKING_PASS ON PERSON_PARKING_PASS
(PERSON_ID   ASC);

/***********************************************
 * Table: PERSON_VEHICLE
 ***********************************************/

CREATE TABLE PERSON_VEHICLE
(
	PERSON_VEHICLE_ID    NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PERSON_ID            NUMBER NOT NULL ,
	VEHICLE_MAKE         VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	VEHICLE_MODEL        VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	VEHICLE_YEAR         VARCHAR2(5 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	VEHICLE_COLOR        VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	VEHICLE_LICENSE_PLATE VARCHAR2(8 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	VEHICLE_LICENSE_STATE CHAR(2 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX AK_UQ_PRSN_VECHICLE_PRSN ON PERSON_VEHICLE
(VEHICLE_LICENSE_PLATE   ASC,VEHICLE_LICENSE_STATE   ASC);

CREATE UNIQUE INDEX PK_PERSON_VEHICLE ON PERSON_VEHICLE
(PERSON_VEHICLE_ID   ASC);

ALTER TABLE PERSON_VEHICLE
	ADD CONSTRAINT  PK_PERSON_VEHICLE PRIMARY KEY (PERSON_VEHICLE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PERSON_VEHICLE  ENABLE  VALIDATE;

ALTER TABLE PERSON_VEHICLE
ADD CONSTRAINT  AK_UQ_PERSON_VEHICLE_PRSNID UNIQUE (VEHICLE_LICENSE_PLATE,VEHICLE_LICENSE_STATE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_UQ_PRSN_VECHICLE_PRSN  ENABLE  VALIDATE;

ALTER TABLE PERSON_VEHICLE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_PERSON_VEH CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PERSON_VEHICLE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_PERSON_VEH CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF2PERSON_VEHICLE ON PERSON_VEHICLE
(PERSON_ID   ASC);

/***********************************************
 * Table: PHYSICAL_ADDRESS
 ***********************************************/

CREATE TABLE PHYSICAL_ADDRESS
(
	PHYSICAL_ADDRESS_ID  NUMBER(13,0) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PHYSICAL_ADDRESS_TYPE varchar2(50) NULL ,
	COMPANY_ID           NUMBER NULL ,
	SITE_RANK            NUMBER NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DISPLAY_LABEL        VARCHAR2(100 BYTE) NULL ,
	ADDRESS_AGENT        VARCHAR2(100 BYTE) NULL ,
	ADDRESS_HOUSENAME    VARCHAR2(255) NULL ,
	ADDRESS_STREET       VARCHAR2(255) NULL ,
	ADDRESS_BUILDING     VARCHAR2(255) NULL ,
	ADDRESS_POBOX        VARCHAR2(255) NULL ,
	ADDRESS_NEIGHBORHOOD VARCHAR2(255) NULL ,
	ADDRESS_CITY         VARCHAR2(100 BYTE) NULL ,
	ADDRESS_SUBREGION    CHAR(18) NULL ,
	ADDRESS_REGION       VARCHAR2(100 BYTE) NULL ,
	POSTAL_CODE          VARCHAR2(20 BYTE) NULL ,
	ISO_COUNTRY_CODE     CHAR(2 BYTE) NOT NULL ,
	ADDRESS_FREEFORM     VARCHAR2(50 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_OFFICE_SITE ON PHYSICAL_ADDRESS
(PHYSICAL_ADDRESS_ID   ASC);

ALTER TABLE PHYSICAL_ADDRESS
	ADD CONSTRAINT  PK_VAL_OFFICE_SITE PRIMARY KEY (PHYSICAL_ADDRESS_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_OFFICE_SITE  ENABLE  VALIDATE;

CREATE UNIQUE INDEX XIU_PHYSADDR_COMPID_SITERK ON PHYSICAL_ADDRESS
(COMPANY_ID   ASC,SITE_RANK   ASC);

ALTER TABLE PHYSICAL_ADDRESS
ADD CONSTRAINT  UQ_PHYSADDR_COMPID_SITERK UNIQUE (COMPANY_ID,SITE_RANK);

ALTER TABLE PHYSICAL_ADDRESS
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VOFFLOCSITE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PHYSICAL_ADDRESS
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VOFFLOCSITE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PHYSICAL_ADDRESS
	MODIFY PHYSICAL_ADDRESS_TYPE DEFAULT 'location';

CREATE  INDEX XIF_PHYSADDR_COMPANY_ID ON PHYSICAL_ADDRESS
(COMPANY_ID   ASC);

CREATE  INDEX XIF_PHYSADDR_ISO_CC ON PHYSICAL_ADDRESS
(ISO_COUNTRY_CODE   ASC);

CREATE  INDEX XIF_PHYSADDR_TYPE_VAL ON PHYSICAL_ADDRESS
(PHYSICAL_ADDRESS_TYPE   ASC);

/***********************************************
 * Table: PHYSICAL_CONNECTION
 ***********************************************/

CREATE TABLE PHYSICAL_CONNECTION
(
	PHYSICAL_CONNECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PHYSICAL_PORT1_ID    NUMBER NULL ,
	PHYSICAL_PORT2_ID    NUMBER NULL ,
	SLOT1_ID             NUMBER NULL ,
	SLOT2_ID             NUMBER NULL ,
	CABLE_TYPE           VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_PHYSICAL_CONNECTION ON PHYSICAL_CONNECTION
(PHYSICAL_CONNECTION_ID   ASC);

ALTER TABLE PHYSICAL_CONNECTION
	ADD CONSTRAINT  PK_PHYSICAL_CONNECTION PRIMARY KEY (PHYSICAL_CONNECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PHYSICAL_CONNECTION  ENABLE  VALIDATE;

ALTER TABLE PHYSICAL_CONNECTION
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_DEV_SER_PORT CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PHYSICAL_CONNECTION
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_DEV_SER_PORT CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_PHYSCONN_PHYSPORT1_ID ON PHYSICAL_CONNECTION
(PHYSICAL_PORT1_ID   ASC);

CREATE  INDEX XIF_PHYSCONN_PHYSPORT2_ID ON PHYSICAL_CONNECTION
(PHYSICAL_PORT2_ID   ASC);

CREATE  INDEX XIF_PHYSCONN_SLOT1_ID ON PHYSICAL_CONNECTION
(SLOT1_ID   ASC);

CREATE  INDEX XIF_PHYSCONN_SLOT2_ID ON PHYSICAL_CONNECTION
(SLOT2_ID   ASC);

CREATE    BITMAP INDEX XIF_PHYSICAL_CONN_V_CABLE_TYPE ON PHYSICAL_CONNECTION
(CABLE_TYPE   ASC);

/***********************************************
 * Table: PHYSICALISH_VOLUME
 ***********************************************/

CREATE TABLE PHYSICALISH_VOLUME
(
	PHYSICALISH_VOLUME_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PHYSICALISH_VOLUME_NAME varchar2(50) NOT NULL ,
	PHYSICALISH_VOLUME_TYPE VARCHAR2(50 BYTE) NOT NULL ,
	DEVICE_ID            NUMBER NOT NULL ,
	LOGICAL_VOLUME_ID    NUMBER NULL ,
	COMPONENT_ID         NUMBER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_PHYSICALISH_VOLUME ON PHYSICALISH_VOLUME
(PHYSICALISH_VOLUME_ID   ASC);

ALTER TABLE PHYSICALISH_VOLUME
	ADD CONSTRAINT  PK_PHYSICALISH_VOLUME PRIMARY KEY (PHYSICALISH_VOLUME_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PHYSICALISH_VOLUME  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_PHYSICALISH_VOLUME_DEVID ON PHYSICALISH_VOLUME
(PHYSICALISH_VOLUME_ID   ASC,DEVICE_ID   ASC);

ALTER TABLE PHYSICALISH_VOLUME
ADD CONSTRAINT  AK_PHYSICALISH_VOLUME_DEVID UNIQUE (PHYSICALISH_VOLUME_ID,DEVICE_ID);

CREATE  INDEX AK_PHYSVOLNAME_TYPE_DEVID ON PHYSICALISH_VOLUME
(DEVICE_ID   ASC,PHYSICALISH_VOLUME_NAME   ASC,PHYSICALISH_VOLUME_TYPE   ASC);

ALTER TABLE PHYSICALISH_VOLUME
ADD CONSTRAINT  AK_PHYSVOLNAME_TYPE_DEVID UNIQUE (DEVICE_ID,PHYSICALISH_VOLUME_NAME,PHYSICALISH_VOLUME_TYPE)  DEFERRABLE;

ALTER TABLE PHYSICALISH_VOLUME
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_151801387 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PHYSICALISH_VOLUME
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_152588565 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_PHYSICALISH_VOL_PVTYPE ON PHYSICALISH_VOLUME
(PHYSICALISH_VOLUME_TYPE   ASC);

CREATE  INDEX XIF_PHYSVOL_COMPID ON PHYSICALISH_VOLUME
(COMPONENT_ID   ASC);

CREATE  INDEX XIF_PHYSVOL_DEVICE_ID ON PHYSICALISH_VOLUME
(DEVICE_ID   ASC);

CREATE  INDEX XIF_PHYSVOL_LVID ON PHYSICALISH_VOLUME
(LOGICAL_VOLUME_ID   ASC);

/***********************************************
 * Table: PROPERTY
 ***********************************************/

CREATE TABLE PROPERTY
(
	PROPERTY_ID          NUMBER(13) NOT NULL ,
	ACCOUNT_COLLECTION_ID NUMBER NULL ,
	ACCOUNT_ID           NUMBER NULL ,
	ACCOUNT_REALM_ID     NUMBER NULL ,
	COMPANY_COLLECTION_ID NUMBER NULL ,
	COMPANY_ID           NUMBER NULL ,
	DEVICE_COLLECTION_ID NUMBER NULL ,
	DNS_DOMAIN_COLLECTION_ID NUMBER(13,0) NULL ,
	DNS_DOMAIN_ID        NUMBER NULL ,
	LAYER2_NETWORK_COLLECTION_ID NUMBER NULL ,
	LAYER3_NETWORK_COLLECTION_ID NUMBER NULL ,
	NETBLOCK_COLLECTION_ID NUMBER NULL ,
	OPERATING_SYSTEM_ID  NUMBER NULL ,
	OPERATING_SYSTEM_SNAPSHOT_ID NUMBER NULL ,
	PERSON_ID            NUMBER NULL ,
	PROPERTY_COLLECTION_ID NUMBER NULL ,
	SERVICE_ENV_COLLECTION_ID NUMBER(13,0) NULL ,
	SITE_CODE            VARCHAR2(50 BYTE) NULL ,
	PROPERTY_NAME        VARCHAR2(255) NOT NULL ,
	PROPERTY_TYPE        VARCHAR2(50) NOT NULL ,
	PROPERTY_VALUE       VARCHAR2(1024) NULL ,
	PROPERTY_VALUE_TIMESTAMP TIMESTAMP NULL ,
	PROPERTY_VALUE_COMPANY_ID NUMBER NULL ,
	PROPERTY_VALUE_ACCOUNT_COLL_ID NUMBER NULL ,
	PROPERTY_VALUE_DEVICE_COLL_ID NUMBER NULL ,
	PROPERTY_VALUE_NBLK_COLL_ID NUMBER NULL ,
	PROPERTY_VALUE_PASSWORD_TYPE VARCHAR2(50 BYTE) NULL ,
	PROPERTY_VALUE_PERSON_ID NUMBER NULL ,
	PROPERTY_VALUE_SW_PACKAGE_ID NUMBER NULL ,
	PROPERTY_VALUE_TOKEN_COL_ID NUMBER(13) NULL ,
	PROPERTY_RANK        INTEGER NULL ,
	START_DATE           TIMESTAMP NULL ,
	FINISH_DATE          TIMESTAMP NULL ,
	IS_ENABLED           CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE PROPERTY IS 'generic mechanism to create arbitrary associations between lhs database objects and assign them to zero or one other database objects/strings/lists/etc.  They are trigger enforced based on characteristics in val_property and val_property_value where foreign key enforcement does not work.';

COMMENT ON COLUMN PROPERTY.PROPERTY_ID IS 'primary key for table to uniquely identify rows.';

COMMENT ON COLUMN PROPERTY.COMPANY_ID IS 'LHS settable based on val_property.  THIS COLUMN IS DEPRECATED AND WILL BE REMOVED >= 0.66';

COMMENT ON COLUMN PROPERTY.PROPERTY_VALUE_COMPANY_ID IS 'RHS - fk to company_id,  permitted based on val_property.property_data_type.  THIS COLUMN IS DEPRECATED AND WILL BE REMOVED >= 0.66';

COMMENT ON COLUMN PROPERTY.DEVICE_COLLECTION_ID IS 'LHS settable based on val_property';

COMMENT ON COLUMN PROPERTY.DNS_DOMAIN_ID IS 'LHS settable based on val_property.   THIS COLUMN IS BEING DEPRECATED IN FAVOR OF DNS_DOMAIN_COLLECTION_ID IN >= 0.66';

COMMENT ON COLUMN PROPERTY.ACCOUNT_ID IS 'LHS settable based on val_property';

COMMENT ON COLUMN PROPERTY.ACCOUNT_COLLECTION_ID IS 'LHS settable based on val_property';

COMMENT ON COLUMN PROPERTY.PROPERTY_VALUE_ACCOUNT_COLL_ID IS 'RHS, fk to account_collection,    permitted based on val_property.property_data_type.';

COMMENT ON COLUMN PROPERTY.SITE_CODE IS 'LHS settable based on val_property';

COMMENT ON COLUMN PROPERTY.PROPERTY_NAME IS 'textual name of a property';

COMMENT ON COLUMN PROPERTY.PROPERTY_TYPE IS 'textual type of a department';

COMMENT ON COLUMN PROPERTY.PROPERTY_VALUE IS 'RHS - general purpose column for value of property not defined by other types.  This may be enforced by fk (trigger) if val_property.property_data_type is list (fk is to val_property_value).   permitted based on val_property.property_data_type.';

COMMENT ON COLUMN PROPERTY.PROPERTY_VALUE_TIMESTAMP IS 'RHS - value is a timestamp , permitted based on val_property.property_data_type.';

COMMENT ON COLUMN PROPERTY.START_DATE IS 'date/time that the assignment takes effect or NULL.  .  The view v_property filters this out.';

COMMENT ON COLUMN PROPERTY.FINISH_DATE IS 'date/time that the assignment ceases taking effect or NULL.  .  The view v_property filters this out.';

COMMENT ON COLUMN PROPERTY.PROPERTY_VALUE_PASSWORD_TYPE IS 'RHS - fk to val_password_type.     permitted based on val_property.property_data_type.';

COMMENT ON COLUMN PROPERTY.PROPERTY_VALUE_TOKEN_COL_ID IS 'RHS - fk to token_collection_id.     permitted based on val_property.property_data_type.';

COMMENT ON COLUMN PROPERTY.IS_ENABLED IS 'indiciates if the property is temporarily disabled or not.  The view v_property filters this out.';

COMMENT ON COLUMN PROPERTY.PROPERTY_VALUE_SW_PACKAGE_ID IS 'RHS - fk to sw_package.  possibly will be deprecated.     permitted based on val_property.property_data_type.';

COMMENT ON COLUMN PROPERTY.OPERATING_SYSTEM_ID IS 'LHS settable based on val_property';

COMMENT ON COLUMN PROPERTY.PROPERTY_VALUE_PERSON_ID IS 'RHS - fk to person.     permitted based on val_property.property_data_type.';

COMMENT ON COLUMN PROPERTY.PERSON_ID IS 'LHS settable based on val_property';

COMMENT ON COLUMN PROPERTY.PROPERTY_VALUE_NBLK_COLL_ID IS 'RHS - fk to network_collection.    permitted based on val_property.property_data_type.';

COMMENT ON COLUMN PROPERTY.NETBLOCK_COLLECTION_ID IS 'LHS settable based on val_property';

COMMENT ON COLUMN PROPERTY.PROPERTY_RANK IS 'for multivalues, specifies the order.  If set, this basically becomes part of the "ak" for the lhs.';

COMMENT ON COLUMN PROPERTY.SERVICE_ENV_COLLECTION_ID IS 'LHS settable based on val_property';

COMMENT ON COLUMN PROPERTY.ACCOUNT_REALM_ID IS 'LHS settable based on val_property';

COMMENT ON COLUMN PROPERTY.PROPERTY_COLLECTION_ID IS 'LHS settable based on val_property.  NOTE, this is actually collections of property_name,property_type';

COMMENT ON COLUMN PROPERTY.OPERATING_SYSTEM_SNAPSHOT_ID IS 'LHS settable based on val_property';

COMMENT ON COLUMN PROPERTY.PROPERTY_VALUE_DEVICE_COLL_ID IS 'RHS - fk to device_collection.    permitted based on val_property.property_data_type.';

COMMENT ON COLUMN PROPERTY.DNS_DOMAIN_COLLECTION_ID IS 'LHS settable based on val_property  THIS COLUMN IS DEPRECATED AND WILL BE REMOVED >= 0.66';

CREATE UNIQUE INDEX PK_PROPERTY ON PROPERTY
(PROPERTY_ID   ASC);

ALTER TABLE PROPERTY
	ADD CONSTRAINT  PK_PROPERTY PRIMARY KEY (PROPERTY_ID);

ALTER TABLE PROPERTY
	MODIFY IS_ENABLED CONSTRAINT  CKC_PROP_ISENBLD CHECK (IS_ENABLED IN ('Y', 'N'));

ALTER TABLE PROPERTY
	MODIFY IS_ENABLED DEFAULT 'Y';

CREATE  INDEX XIF30PROPERTY ON PROPERTY
(LAYER2_NETWORK_COLLECTION_ID   ASC);

CREATE  INDEX XIF31PROPERTY ON PROPERTY
(LAYER3_NETWORK_COLLECTION_ID   ASC);

CREATE  INDEX XIFPROP_ACCOUNT_ID ON PROPERTY
(ACCOUNT_ID   ASC);

CREATE  INDEX XIFPROP_ACCTCOL_ID ON PROPERTY
(ACCOUNT_COLLECTION_ID   ASC);

CREATE  INDEX XIFPROP_COMPID ON PROPERTY
(COMPANY_ID   ASC);

CREATE  INDEX XIFPROP_DEVCOLID ON PROPERTY
(DEVICE_COLLECTION_ID   ASC);

CREATE  INDEX XIFPROP_DNSDOMID ON PROPERTY
(DNS_DOMAIN_ID   ASC);

CREATE  INDEX XIFPROP_NMTYP ON PROPERTY
(PROPERTY_NAME   ASC,PROPERTY_TYPE   ASC);

CREATE  INDEX XIFPROP_OSID ON PROPERTY
(OPERATING_SYSTEM_ID   ASC);

CREATE  INDEX XIFPROP_PVAL_ACCT_COLID ON PROPERTY
(PROPERTY_VALUE_ACCOUNT_COLL_ID   ASC);

CREATE  INDEX XIFPROP_PVAL_COMPID ON PROPERTY
(PROPERTY_VALUE_COMPANY_ID   ASC);

CREATE  INDEX XIFPROP_PVAL_PWDTYP ON PROPERTY
(PROPERTY_VALUE_PASSWORD_TYPE   ASC);

CREATE  INDEX XIFPROP_PVAL_SWPKGID ON PROPERTY
(PROPERTY_VALUE_SW_PACKAGE_ID   ASC);

CREATE  INDEX XIFPROP_PVAL_TOKCOLID ON PROPERTY
(PROPERTY_VALUE_TOKEN_COL_ID   ASC);

CREATE  INDEX XIFPROP_SITE_CODE ON PROPERTY
(SITE_CODE   ASC);

CREATE  INDEX XIF_PROPERTY_ACCTREALMID ON PROPERTY
(ACCOUNT_REALM_ID   ASC);

CREATE  INDEX XIF_PROPERTY_DNS_DOM_COLLECT ON PROPERTY
(DNS_DOMAIN_COLLECTION_ID   ASC);

CREATE  INDEX XIF_PROPERTY_NBLK_COLL_ID ON PROPERTY
(NETBLOCK_COLLECTION_ID   ASC);

CREATE  INDEX XIF_PROPERTY_PERSON_ID ON PROPERTY
(PERSON_ID   ASC);

CREATE  INDEX XIF_PROPERTY_PROP_COLL_ID ON PROPERTY
(PROPERTY_COLLECTION_ID   ASC);

CREATE  INDEX XIF_PROPERTY_PV_NBLKCOL_ID ON PROPERTY
(PROPERTY_VALUE_NBLK_COLL_ID   ASC);

CREATE  INDEX XIF_PROPERTY_VAL_PRSNID ON PROPERTY
(PROPERTY_VALUE_PERSON_ID   ASC);

CREATE  INDEX XIF_PROP_COMPCOLL_ID ON PROPERTY
(COMPANY_COLLECTION_ID   ASC);

CREATE  INDEX XIF_PROP_OS_SNAPSHOT ON PROPERTY
(OPERATING_SYSTEM_SNAPSHOT_ID   ASC);

CREATE  INDEX XIF_PROP_PV_DEVCOLID ON PROPERTY
(PROPERTY_VALUE_DEVICE_COLL_ID   ASC);

CREATE  INDEX XIF_PROP_SVC_ENV_COLL_ID ON PROPERTY
(SERVICE_ENV_COLLECTION_ID   ASC);

/***********************************************
 * Table: PROPERTY_COLLECTION
 ***********************************************/

CREATE TABLE PROPERTY_COLLECTION
(
	PROPERTY_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PROPERTY_COLLECTION_NAME VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PROPERTY_COLLECTION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE PROPERTY_COLLECTION IS 'Collections of Property Name/Types.  Used for grouping properties for different purposes';

CREATE UNIQUE INDEX AK_UQPROPCOLL_NAME_TYPE ON PROPERTY_COLLECTION
(PROPERTY_COLLECTION_NAME   ASC,PROPERTY_COLLECTION_TYPE   ASC);

CREATE UNIQUE INDEX PK_PROPERTY_COLLECTION ON PROPERTY_COLLECTION
(PROPERTY_COLLECTION_ID   ASC);

ALTER TABLE PROPERTY_COLLECTION
	ADD CONSTRAINT  PK_PROPERTY_COLLECTION PRIMARY KEY (PROPERTY_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PROPERTY_COLLECTION  ENABLE  VALIDATE;

ALTER TABLE PROPERTY_COLLECTION
ADD CONSTRAINT  AK_UQPROPCOLL_NAME_TYPE UNIQUE (PROPERTY_COLLECTION_NAME,PROPERTY_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_UQPROPCOLL_NAME_TYPE  ENABLE  VALIDATE;

ALTER TABLE PROPERTY_COLLECTION
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_608322620 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PROPERTY_COLLECTION
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_609109798 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1PROPERTY_COLLECTION ON PROPERTY_COLLECTION
(PROPERTY_COLLECTION_TYPE   ASC);

/***********************************************
 * Table: PROPERTY_COLLECTION_HIER
 ***********************************************/

CREATE TABLE PROPERTY_COLLECTION_HIER
(
	PROPERTY_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	CHILD_PROPERTY_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_PROPERTY_COLLECTION_HIER ON PROPERTY_COLLECTION_HIER
(PROPERTY_COLLECTION_ID   ASC,CHILD_PROPERTY_COLLECTION_ID   ASC);

ALTER TABLE PROPERTY_COLLECTION_HIER
	ADD CONSTRAINT  PK_PROPERTY_COLLECTION_HIER PRIMARY KEY (PROPERTY_COLLECTION_ID,CHILD_PROPERTY_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PROPERTY_COLLECTION_HIER  ENABLE  VALIDATE;

ALTER TABLE PROPERTY_COLLECTION_HIER
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1401056845 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PROPERTY_COLLECTION_HIER
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1400269667 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1PROPERTY_COLLECTION_HIER ON PROPERTY_COLLECTION_HIER
(PROPERTY_COLLECTION_ID   ASC);

CREATE  INDEX XIF2PROPERTY_COLLECTION_HIER ON PROPERTY_COLLECTION_HIER
(CHILD_PROPERTY_COLLECTION_ID   ASC);

/***********************************************
 * Table: PROPERTY_COLLECTION_PROPERTY
 ***********************************************/

CREATE TABLE PROPERTY_COLLECTION_PROPERTY
(
	PROPERTY_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PROPERTY_NAME        VARCHAR2(255) NOT NULL ,
	PROPERTY_TYPE        VARCHAR2(50) NOT NULL ,
	PROPERTY_ID_RANK     INTEGER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE PROPERTY_COLLECTION_PROPERTY IS 'name,type members of a property collection';

COMMENT ON COLUMN PROPERTY_COLLECTION_PROPERTY.PROPERTY_NAME IS 'property name for validation purposes';

COMMENT ON COLUMN PROPERTY_COLLECTION_PROPERTY.PROPERTY_TYPE IS 'property type for validation purposes';

CREATE UNIQUE INDEX PK_PROPERTY_COLLECTION_PROPERT ON PROPERTY_COLLECTION_PROPERTY
(PROPERTY_COLLECTION_ID   ASC,PROPERTY_NAME   ASC,PROPERTY_TYPE   ASC);

ALTER TABLE PROPERTY_COLLECTION_PROPERTY
	ADD CONSTRAINT  PK_PROPERTY_COLLECTION_PROPERT PRIMARY KEY (PROPERTY_COLLECTION_ID,PROPERTY_NAME,PROPERTY_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PROPERTY_COLLECTION_PROPERT  ENABLE  VALIDATE;

CREATE UNIQUE INDEX XAKPROP_COLL_PROP_RANK ON PROPERTY_COLLECTION_PROPERTY
(PROPERTY_COLLECTION_ID   ASC,PROPERTY_ID_RANK   ASC);

ALTER TABLE PROPERTY_COLLECTION_PROPERTY
ADD CONSTRAINT  XAKPROP_COLL_PROP_RANK UNIQUE (PROPERTY_COLLECTION_ID,PROPERTY_ID_RANK);

ALTER TABLE PROPERTY_COLLECTION_PROPERTY
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_103223286 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PROPERTY_COLLECTION_PROPERTY
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_102436108 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIFPROP_COLL_PROP_NAMTYP ON PROPERTY_COLLECTION_PROPERTY
(PROPERTY_NAME   ASC,PROPERTY_TYPE   ASC);

CREATE  INDEX XIFPROP_COLL_PROP_PROP_COLL_ID ON PROPERTY_COLLECTION_PROPERTY
(PROPERTY_COLLECTION_ID   ASC);

/***********************************************
 * Table: PSEUDO_KLOGIN
 ***********************************************/

CREATE TABLE PSEUDO_KLOGIN
(
	PSEUDO_KLOGIN_ID     NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PRINCIPAL            VARCHAR2(100 BYTE) NULL ,
	DEST_ACCOUNT_ID      NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_PSEUDO_KLOGIN ON PSEUDO_KLOGIN
(PSEUDO_KLOGIN_ID   ASC);

ALTER TABLE PSEUDO_KLOGIN
	ADD CONSTRAINT  PK_PSEUDO_KLOGIN PRIMARY KEY (PSEUDO_KLOGIN_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PSEUDO_KLOGIN  ENABLE  VALIDATE;

ALTER TABLE PSEUDO_KLOGIN
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_PSEUDO_K CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE PSEUDO_KLOGIN
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_PSEUDO_K CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX IDX_PSKLOGIN_DACCTID ON PSEUDO_KLOGIN
(DEST_ACCOUNT_ID   ASC);

/***********************************************
 * Table: RACK
 ***********************************************/

CREATE TABLE RACK
(
	RACK_ID              NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SITE_CODE            VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ROOM                 VARCHAR2(50 BYTE) NULL ,
	SUB_ROOM             VARCHAR2(50 BYTE) NULL ,
	RACK_ROW             VARCHAR2(50 BYTE) NULL ,
	RACK_NAME            VARCHAR2(50 BYTE) NOT NULL ,
	RACK_STYLE           VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	RACK_TYPE            VARCHAR2(255 BYTE) NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	RACK_HEIGHT_IN_U     NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DISPLAY_FROM_BOTTOM  CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX AK_UQ_SITE_ROOM_SUB_R_RACK ON RACK
(SITE_CODE   ASC,ROOM   ASC,SUB_ROOM   ASC,RACK_ROW   ASC,RACK_NAME   ASC);

CREATE UNIQUE INDEX PK_RACK_ID ON RACK
(RACK_ID   ASC);

ALTER TABLE RACK
	ADD CONSTRAINT  PK_RACK_ID PRIMARY KEY (RACK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_RACK_ID  ENABLE  VALIDATE;

ALTER TABLE RACK
ADD CONSTRAINT  AK_UQ_SITE_ROOM_SUB_R_RACK UNIQUE (SITE_CODE,ROOM,SUB_ROOM,RACK_ROW,RACK_NAME)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_UQ_SITE_ROOM_SUB_R_RACK  ENABLE  VALIDATE;

ALTER TABLE RACK
	MODIFY RACK_STYLE CONSTRAINT  CKC_RACK_STYLE_RACK CHECK (RACK_STYLE in ('RELAY','CABINET') and RACK_STYLE = upper(RACK_STYLE))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE RACK
	MODIFY DISPLAY_FROM_BOTTOM CONSTRAINT  CKC_DISPLAY_FROM_BOTT_RACK CHECK (DISPLAY_FROM_BOTTOM in ('Y','N') and DISPLAY_FROM_BOTTOM = upper(DISPLAY_FROM_BOTTOM))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE RACK
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_RACK CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE RACK
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_RACK CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF2RACK ON RACK
(RACK_TYPE   ASC);

/***********************************************
 * Table: RACK_LOCATION
 ***********************************************/

CREATE TABLE RACK_LOCATION
(
	RACK_LOCATION_ID     NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	RACK_ID              NUMBER NOT NULL ,
	RACK_U_OFFSET_OF_DEVICE_TOP NUMBER NOT NULL ,
	RACK_SIDE            VARCHAR2(10 BYTE) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX AK_UQ_RACK_OFFSET_SID_LOCATION ON RACK_LOCATION
(RACK_ID   ASC,RACK_U_OFFSET_OF_DEVICE_TOP   ASC,RACK_SIDE   ASC);

CREATE UNIQUE INDEX PK_RACK_LOCATION ON RACK_LOCATION
(RACK_LOCATION_ID   ASC);

ALTER TABLE RACK_LOCATION
	ADD CONSTRAINT  PK_RACK_LOCATION PRIMARY KEY (RACK_LOCATION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_RACK_LOCATION  ENABLE  VALIDATE;

ALTER TABLE RACK_LOCATION
ADD CONSTRAINT  AK_UQ_RACK_OFFSET_SID_LOCATION UNIQUE (RACK_ID,RACK_U_OFFSET_OF_DEVICE_TOP,RACK_SIDE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_UQ_RACK_OFFSET_SID_LOCATION  ENABLE  VALIDATE;

ALTER TABLE RACK_LOCATION
	MODIFY RACK_SIDE CONSTRAINT  CKC_RACK_SIDE_LOCATION CHECK (RACK_SIDE in ('FRONT','BACK'))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE RACK_LOCATION
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_LOCATION CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE RACK_LOCATION
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_LOCATION CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE RACK_LOCATION
	MODIFY RACK_SIDE DEFAULT 'FRONT';

/***********************************************
 * Table: SERVICE_ENVIRONMENT
 ***********************************************/

CREATE TABLE SERVICE_ENVIRONMENT
(
	SERVICE_ENVIRONMENT_ID NUMBER(13,0) NOT NULL ,
	SERVICE_ENVIRONMENT_NAME VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PRODUCTION_STATE     VARCHAR2(50 BYTE) NOT NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_SERVICE_ENVIRONMENT ON SERVICE_ENVIRONMENT
(SERVICE_ENVIRONMENT_ID   ASC);

ALTER TABLE SERVICE_ENVIRONMENT
	ADD CONSTRAINT  PK_SERVICE_ENVIRONMENT PRIMARY KEY (SERVICE_ENVIRONMENT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SERVICE_ENVIRONMENT  ENABLE  VALIDATE;

ALTER TABLE SERVICE_ENVIRONMENT
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_VAL_PROD CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SERVICE_ENVIRONMENT
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_VAL_PROD CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1SERVICE_ENVIRONMENT ON SERVICE_ENVIRONMENT
(PRODUCTION_STATE   ASC);

/***********************************************
 * Table: SERVICE_ENVIRONMENT_COLL_HIER
 ***********************************************/

CREATE TABLE SERVICE_ENVIRONMENT_COLL_HIER
(
	SERVICE_ENV_COLLECTION_ID NUMBER(13,0) NOT NULL ,
	CHILD_SERVICE_ENV_COLL_ID NUMBER(13,0) NOT NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_SERVICE_ENVIRONMENT_HIER ON SERVICE_ENVIRONMENT_COLL_HIER
(SERVICE_ENV_COLLECTION_ID   ASC,CHILD_SERVICE_ENV_COLL_ID   ASC);

ALTER TABLE SERVICE_ENVIRONMENT_COLL_HIER
	ADD CONSTRAINT  PK_SERVICE_ENVIRONMENT_HIER PRIMARY KEY (SERVICE_ENV_COLLECTION_ID,CHILD_SERVICE_ENV_COLL_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SERVICE_ENVIRONMENT_HIER  ENABLE  VALIDATE;

ALTER TABLE SERVICE_ENVIRONMENT_COLL_HIER
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_438434523 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SERVICE_ENVIRONMENT_COLL_HIER
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_437647345 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1SERVICE_ENVIRONMENT_COLL_H ON SERVICE_ENVIRONMENT_COLL_HIER
(CHILD_SERVICE_ENV_COLL_ID   ASC);

CREATE  INDEX XIF2SERVICE_ENVIRONMENT_COLL_H ON SERVICE_ENVIRONMENT_COLL_HIER
(SERVICE_ENV_COLLECTION_ID   ASC);

/***********************************************
 * Table: SERVICE_ENVIRONMENT_COLLECTION
 ***********************************************/

CREATE TABLE SERVICE_ENVIRONMENT_COLLECTION
(
	SERVICE_ENV_COLLECTION_ID NUMBER(13,0) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SERVICE_ENV_COLLECTION_NAME varchar2(50) NOT NULL ,
	SERVICE_ENV_COLLECTION_TYPE VARCHAR2(50 BYTE) NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_SERVICE_ENVIRONMENT_COLLECT ON SERVICE_ENVIRONMENT_COLLECTION
(SERVICE_ENV_COLLECTION_ID   ASC);

ALTER TABLE SERVICE_ENVIRONMENT_COLLECTION
	ADD CONSTRAINT  PK_SERVICE_ENVIRONMENT_COLLECT PRIMARY KEY (SERVICE_ENV_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SERVICE_ENVIRONMENT_COLLECT  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_VAL_SVC_ENV_NAME_TYPE ON SERVICE_ENVIRONMENT_COLLECTION
(SERVICE_ENV_COLLECTION_NAME   ASC,SERVICE_ENV_COLLECTION_TYPE   ASC);

ALTER TABLE SERVICE_ENVIRONMENT_COLLECTION
ADD CONSTRAINT  AK_VAL_SVC_ENV_NAME_TYPE UNIQUE (SERVICE_ENV_COLLECTION_NAME,SERVICE_ENV_COLLECTION_TYPE);

ALTER TABLE SERVICE_ENVIRONMENT_COLLECTION
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_184097037 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SERVICE_ENVIRONMENT_COLLECTION
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_184884215 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1SERVICE_ENVIRONMENT_COLLEC ON SERVICE_ENVIRONMENT_COLLECTION
(SERVICE_ENV_COLLECTION_TYPE   ASC);

/***********************************************
 * Table: SITE
 ***********************************************/

CREATE TABLE SITE
(
	SITE_CODE            VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	COLO_COMPANY_ID      NUMBER NULL ,
	PHYSICAL_ADDRESS_ID  NUMBER(13,0) NULL ,
	SITE_STATUS          VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_SITE_CODE ON SITE
(SITE_CODE   ASC);

ALTER TABLE SITE
	ADD CONSTRAINT  PK_SITE_CODE PRIMARY KEY (SITE_CODE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SITE_CODE  ENABLE  VALIDATE;

ALTER TABLE SITE
	MODIFY SITE_STATUS CONSTRAINT  CKC_SITE_STATUS_SITE CHECK (SITE_STATUS in ('ACTIVE','INACTIVE','OBSOLETE','PLANNED') and SITE_STATUS = upper(SITE_STATUS))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SITE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_SITE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SITE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_SITE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX FK_SITE_COLO_COMPANY_ID ON SITE
(COLO_COMPANY_ID   ASC);

CREATE  INDEX XIFSITE_PHYSADDR_ID ON SITE
(PHYSICAL_ADDRESS_ID   ASC);

/***********************************************
 * Table: SITE_NETBLOCK
 ***********************************************/

CREATE TABLE SITE_NETBLOCK
(
	SITE_CODE            VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NETBLOCK_ID          NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_SITE_NETBLOCK ON SITE_NETBLOCK
(SITE_CODE   ASC,NETBLOCK_ID   ASC);

ALTER TABLE SITE_NETBLOCK
	ADD CONSTRAINT  PK_SITE_NETBLOCK PRIMARY KEY (SITE_CODE,NETBLOCK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SITE_NETBLOCK  ENABLE  VALIDATE;

ALTER TABLE SITE_NETBLOCK
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_SITE_NET CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SITE_NETBLOCK
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_SITE_NET CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: SLOT
 ***********************************************/

CREATE TABLE SLOT
(
	SLOT_ID              NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	COMPONENT_ID         NUMBER NOT NULL ,
	SLOT_NAME            varchar2(50) NOT NULL ,
	SLOT_INDEX           INTEGER NULL ,
	SLOT_TYPE_ID         NUMBER NOT NULL ,
	COMPONENT_TYPE_SLOT_TMPLT_ID NUMBER NULL ,
	IS_ENABLED           CHAR(1) NOT NULL ,
	PHYSICAL_LABEL       varchar2(50) NULL ,
	MAC_ADDRESS          INTEGER NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	SLOT_X_OFFSET        INTEGER NULL ,
	SLOT_Y_OFFSET        INTEGER NULL ,
	SLOT_Z_OFFSET        INTEGER NULL ,
	SLOT_SIDE            varchar2(50) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_SLOT_ID ON SLOT
(SLOT_ID   ASC);

ALTER TABLE SLOT
	ADD CONSTRAINT  PK_SLOT_ID PRIMARY KEY (SLOT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SLOT_ID  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_SLOT_SLOT_TYPE_ID ON SLOT
(SLOT_ID   ASC,SLOT_TYPE_ID   ASC);

ALTER TABLE SLOT
ADD CONSTRAINT  AK_SLOT_SLOT_TYPE_ID UNIQUE (SLOT_ID,SLOT_TYPE_ID);

CREATE UNIQUE INDEX UQ_SLOT_CMP_SLT_TMPLT_ID ON SLOT
(COMPONENT_ID   ASC,COMPONENT_TYPE_SLOT_TMPLT_ID   ASC);

ALTER TABLE SLOT
ADD CONSTRAINT  UQ_SLOT_CMP_SLT_TMPLT_ID UNIQUE (COMPONENT_ID,COMPONENT_TYPE_SLOT_TMPLT_ID);

ALTER TABLE SLOT
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_755242764 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SLOT
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_756029942 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SLOT
	MODIFY IS_ENABLED CONSTRAINT  CHECKSLOT_ENBLED__YES_NO CHECK (IS_ENABLED IN ('Y', 'N'));

ALTER TABLE SLOT
	MODIFY SLOT_SIDE CONSTRAINT  CKC_SLOT_SLOT_SIDE CHECK (SLOT_SIDE in ('FRONT','BACK'));

ALTER TABLE SLOT
	MODIFY IS_ENABLED DEFAULT 'Y';

CREATE  INDEX XIF_SLOT_CMP_TYP_TMP_ID ON SLOT
(COMPONENT_TYPE_SLOT_TMPLT_ID   ASC);

CREATE  INDEX XIF_SLOT_COMPONENT_ID ON SLOT
(COMPONENT_ID   ASC);

CREATE  INDEX XIF_SLOT_SLOT_TYPE_ID ON SLOT
(SLOT_TYPE_ID   ASC);

/***********************************************
 * Table: SLOT_TYPE
 ***********************************************/

CREATE TABLE SLOT_TYPE
(
	SLOT_TYPE_ID         NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SLOT_TYPE            varchar2(50) NOT NULL ,
	SLOT_FUNCTION        VARCHAR2(50 BYTE) NOT NULL ,
	SLOT_PHYSICAL_INTERFACE_TYPE varchar2(50) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	REMOTE_SLOT_PERMITTED CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_SLOT_TYPE ON SLOT_TYPE
(SLOT_TYPE_ID   ASC);

ALTER TABLE SLOT_TYPE
	ADD CONSTRAINT  PK_SLOT_TYPE PRIMARY KEY (SLOT_TYPE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SLOT_TYPE  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_SLOT_TYPE_NAME_TYPE ON SLOT_TYPE
(SLOT_TYPE   ASC,SLOT_FUNCTION   ASC);

ALTER TABLE SLOT_TYPE
ADD CONSTRAINT  AK_SLOT_TYPE_NAME_TYPE UNIQUE (SLOT_TYPE,SLOT_FUNCTION);

ALTER TABLE SLOT_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_2053139631 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SLOT_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_2053926809 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SLOT_TYPE
	MODIFY REMOTE_SLOT_PERMITTED CONSTRAINT  CHECK_YES_NO_28083896 CHECK (REMOTE_SLOT_PERMITTED IN ('Y', 'N'));

ALTER TABLE SLOT_TYPE
	MODIFY REMOTE_SLOT_PERMITTED DEFAULT 'N';

CREATE  INDEX XIF_SLOT_TYPE_PHYSINT_FUNC ON SLOT_TYPE
(SLOT_PHYSICAL_INTERFACE_TYPE   ASC,SLOT_FUNCTION   ASC);

CREATE  INDEX XIF_SLOT_TYPE_SLT_FUNC ON SLOT_TYPE
(SLOT_FUNCTION   ASC);

/***********************************************
 * Table: SLOT_TYPE_PRMT_COMP_SLOT_TYPE
 ***********************************************/

CREATE TABLE SLOT_TYPE_PRMT_COMP_SLOT_TYPE
(
	SLOT_TYPE_ID         NUMBER NOT NULL ,
	COMPONENT_SLOT_TYPE_ID NUMBER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_SLOT_TYPE_PRMT_COMP_SLOT_TY ON SLOT_TYPE_PRMT_COMP_SLOT_TYPE
(SLOT_TYPE_ID   ASC,COMPONENT_SLOT_TYPE_ID   ASC);

ALTER TABLE SLOT_TYPE_PRMT_COMP_SLOT_TYPE
	ADD CONSTRAINT  PK_SLOT_TYPE_PRMT_COMP_SLOT_TY PRIMARY KEY (SLOT_TYPE_ID,COMPONENT_SLOT_TYPE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SLOT_TYPE_PRMT_COMP_SLOT_TY  ENABLE  VALIDATE;

ALTER TABLE SLOT_TYPE_PRMT_COMP_SLOT_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_470353476 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SLOT_TYPE_PRMT_COMP_SLOT_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_471140654 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_STPCST_CMP_SLT_TYP_ID ON SLOT_TYPE_PRMT_COMP_SLOT_TYPE
(SLOT_TYPE_ID   ASC);

CREATE  INDEX XIF_STPCST_SLOT_TYPE_ID ON SLOT_TYPE_PRMT_COMP_SLOT_TYPE
(COMPONENT_SLOT_TYPE_ID   ASC);

/***********************************************
 * Table: SLOT_TYPE_PRMT_REM_SLOT_TYPE
 ***********************************************/

CREATE TABLE SLOT_TYPE_PRMT_REM_SLOT_TYPE
(
	SLOT_TYPE_ID         NUMBER NOT NULL ,
	REMOTE_SLOT_TYPE_ID  NUMBER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_SLOT_TYPE_PRMT_REM_SLOT_TYP ON SLOT_TYPE_PRMT_REM_SLOT_TYPE
(SLOT_TYPE_ID   ASC,REMOTE_SLOT_TYPE_ID   ASC);

ALTER TABLE SLOT_TYPE_PRMT_REM_SLOT_TYPE
	ADD CONSTRAINT  PK_SLOT_TYPE_PRMT_REM_SLOT_TYP PRIMARY KEY (SLOT_TYPE_ID,REMOTE_SLOT_TYPE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SLOT_TYPE_PRMT_REM_SLOT_TYP  ENABLE  VALIDATE;

ALTER TABLE SLOT_TYPE_PRMT_REM_SLOT_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_84026361 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SLOT_TYPE_PRMT_REM_SLOT_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_84813539 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_STPRST_REMOTE_SLOT_TYPE_ID ON SLOT_TYPE_PRMT_REM_SLOT_TYPE
(REMOTE_SLOT_TYPE_ID   ASC);

CREATE  INDEX XIF_STPRST_SLOT_TYPE_ID ON SLOT_TYPE_PRMT_REM_SLOT_TYPE
(SLOT_TYPE_ID   ASC);

/***********************************************
 * Table: SNMP_COMMSTR
 ***********************************************/

CREATE TABLE SNMP_COMMSTR
(
	SNMP_COMMSTR_ID      NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DEVICE_ID            NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SNMP_COMMSTR_TYPE    VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	RD_STRING            VARCHAR2(255 BYTE) NULL ,
	WR_STRING            VARCHAR2(255 BYTE) NULL ,
	PURPOSE              VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX AK_UQ_SNMP_COMMSTR_DE_SNMP_COM ON SNMP_COMMSTR
(DEVICE_ID   ASC,SNMP_COMMSTR_TYPE   ASC);

CREATE UNIQUE INDEX PK_SNMP_COMMSTR ON SNMP_COMMSTR
(SNMP_COMMSTR_ID   ASC);

ALTER TABLE SNMP_COMMSTR
	ADD CONSTRAINT  PK_SNMP_COMMSTR PRIMARY KEY (SNMP_COMMSTR_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SNMP_COMMSTR  ENABLE  VALIDATE;

ALTER TABLE SNMP_COMMSTR
ADD CONSTRAINT  AK_UQ_SNMP_COMMSTR_DE_SNMP_COM UNIQUE (DEVICE_ID,SNMP_COMMSTR_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_UQ_SNMP_COMMSTR_DE_SNMP_COM  ENABLE  VALIDATE;

ALTER TABLE SNMP_COMMSTR
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_SNMP_COM CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SNMP_COMMSTR
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_SNMP_COM CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX IX_SNMP_COMMSTR_NETDEV_ID ON SNMP_COMMSTR
(DEVICE_ID   ASC);

CREATE    BITMAP INDEX IX_SNMP_COMMSTR_TYPE_ID ON SNMP_COMMSTR
(SNMP_COMMSTR_TYPE   ASC);

/***********************************************
 * Table: SSH_KEY
 ***********************************************/

CREATE TABLE SSH_KEY
(
	SSH_KEY_ID           NUMBER(13,0) NOT NULL ,
	SSH_KEY_TYPE         CHAR(18) NULL ,
	SSH_PUBLIC_KEY       VARCHAR2(4096) NOT NULL ,
	SSH_PRIVATE_KEY      VARCHAR2(4096) NULL ,
	ENCRYPTION_KEY_ID    NUMBER(13) NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_SSH_KEY ON SSH_KEY
(SSH_KEY_ID   ASC);

ALTER TABLE SSH_KEY
	ADD CONSTRAINT  PK_SSH_KEY PRIMARY KEY (SSH_KEY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SSH_KEY  ENABLE  VALIDATE;

CREATE UNIQUE INDEX XAK_SSH_KEY_PRIVATE_KEY ON SSH_KEY
(SSH_PRIVATE_KEY   ASC);

ALTER TABLE SSH_KEY
ADD CONSTRAINT  AK_SSH_KEY_PRIVATE_KEY UNIQUE (SSH_PRIVATE_KEY);

CREATE UNIQUE INDEX XIFAK_SSH_KEY_PUBLIC_KEY ON SSH_KEY
(SSH_PUBLIC_KEY   ASC);

ALTER TABLE SSH_KEY
ADD CONSTRAINT  AK_SSH_KEY_PUBLIC_KEY UNIQUE (SSH_PUBLIC_KEY);

ALTER TABLE SSH_KEY
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_961962073 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SSH_KEY
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_962749251 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1SSH_KEY ON SSH_KEY
(ENCRYPTION_KEY_ID   ASC);

CREATE  INDEX XIF2SSH_KEY ON SSH_KEY
(SSH_KEY_TYPE   ASC);

/***********************************************
 * Table: STATIC_ROUTE
 ***********************************************/

CREATE TABLE STATIC_ROUTE
(
	STATIC_ROUTE_ID      NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DEVICE_SRC_ID        NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NETWORK_INTERFACE_DST_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NETBLOCK_ID          NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_STATIC_ROUTE_ID ON STATIC_ROUTE
(STATIC_ROUTE_ID   ASC);

ALTER TABLE STATIC_ROUTE
	ADD CONSTRAINT  PK_STATIC_ROUTE_ID PRIMARY KEY (STATIC_ROUTE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_STATIC_ROUTE_ID  ENABLE  VALIDATE;

ALTER TABLE STATIC_ROUTE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_STATIC_R CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE STATIC_ROUTE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_STATIC_R CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX IDX_STATICRT_DEVSRCID ON STATIC_ROUTE
(DEVICE_SRC_ID   ASC);

CREATE  INDEX IDX_STATICRT_NETBLOCKID ON STATIC_ROUTE
(NETBLOCK_ID   ASC);

CREATE  INDEX IDX_STATICRT_NETINTDSTID ON STATIC_ROUTE
(NETWORK_INTERFACE_DST_ID   ASC);

/***********************************************
 * Table: STATIC_ROUTE_TEMPLATE
 ***********************************************/

CREATE TABLE STATIC_ROUTE_TEMPLATE
(
	STATIC_ROUTE_TEMPLATE_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NETBLOCK_SRC_ID      NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NETWORK_INTERFACE_DST_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	NETBLOCK_ID          NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_STATIC_ROUTE_TEMPLATE ON STATIC_ROUTE_TEMPLATE
(STATIC_ROUTE_TEMPLATE_ID   ASC);

ALTER TABLE STATIC_ROUTE_TEMPLATE
	ADD CONSTRAINT  PK_STATIC_ROUTE_TEMPLATE PRIMARY KEY (STATIC_ROUTE_TEMPLATE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_STATIC_ROUTE_TEMPLATE  ENABLE  VALIDATE;

ALTER TABLE STATIC_ROUTE_TEMPLATE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_STATIC_RT_TMPL CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE STATIC_ROUTE_TEMPLATE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_STATIC_RT_TMPL CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: SUDO_ACCT_COL_DEVICE_COLLECTIO
 ***********************************************/

CREATE TABLE SUDO_ACCT_COL_DEVICE_COLLECTIO
(
	SUDO_ALIAS_NAME      VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DEVICE_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ACCOUNT_COLLECTION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	RUN_AS_ACCOUNT_COLLECTION_ID NUMBER NULL ,
	REQUIRES_PASSWORD    CHAR(1 BYTE) NOT NULL ,
	CAN_EXEC_CHILD       CHAR(1 BYTE) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_SUDO_ACCT_COL_DEV_COL ON SUDO_ACCT_COL_DEVICE_COLLECTIO
(SUDO_ALIAS_NAME   ASC,DEVICE_COLLECTION_ID   ASC,ACCOUNT_COLLECTION_ID   ASC);

ALTER TABLE SUDO_ACCT_COL_DEVICE_COLLECTIO
	ADD CONSTRAINT  PK_SUDO_ACCT_COL_DEV_COLL PRIMARY KEY (SUDO_ALIAS_NAME,DEVICE_COLLECTION_ID,ACCOUNT_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SUDO_ACCT_COL_DEV_COL  ENABLE  VALIDATE;

ALTER TABLE SUDO_ACCT_COL_DEVICE_COLLECTIO
	MODIFY SUDO_ALIAS_NAME CONSTRAINT  CKC_SUDO_ALIAS_NAME_SUDO_UCL CHECK (regexp_like(sudo_alias_name, '^[A-Z][A-Z0-9_]*$'))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SUDO_ACCT_COL_DEVICE_COLLECTIO
	MODIFY REQUIRES_PASSWORD CONSTRAINT  CKC_REQUIRES_PASSWORD_SUDO_UCL CHECK (REQUIRES_PASSWORD is null or (REQUIRES_PASSWORD in ('Y','N') and REQUIRES_PASSWORD = upper(REQUIRES_PASSWORD)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SUDO_ACCT_COL_DEVICE_COLLECTIO
	MODIFY CAN_EXEC_CHILD CONSTRAINT  CKC_CAN_EXEC_CHILD_SUDO_UCL CHECK (CAN_EXEC_CHILD is null or (CAN_EXEC_CHILD in ('Y','N') and CAN_EXEC_CHILD = upper(CAN_EXEC_CHILD)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SUDO_ACCT_COL_DEVICE_COLLECTIO
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_SUDOUSRCOLDEVCOLL CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SUDO_ACCT_COL_DEVICE_COLLECTIO
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_SUDOUSRCOLDEVCOLL CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: SUDO_ALIAS
 ***********************************************/

CREATE TABLE SUDO_ALIAS
(
	SUDO_ALIAS_NAME      VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SUDO_ALIAS_VALUE     VARCHAR2(4000 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_SUDO_ALIAS ON SUDO_ALIAS
(SUDO_ALIAS_NAME   ASC);

ALTER TABLE SUDO_ALIAS
	ADD CONSTRAINT  PK_SUDO_ALIAS PRIMARY KEY (SUDO_ALIAS_NAME)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SUDO_ALIAS  ENABLE  VALIDATE;

ALTER TABLE SUDO_ALIAS
	MODIFY SUDO_ALIAS_NAME CONSTRAINT  CKC_SUDO_ALIAS_NAME_SUDO_ALI CHECK (regexp_like(sudo_alias_name, '^[A-Z][A-Z0-9_]*$'))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SUDO_ALIAS
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_SUDO_ALIAS CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SUDO_ALIAS
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_SUDO_ALIAS CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: SVC_ENVIRONMENT_COLL_SVC_ENV
 ***********************************************/

CREATE TABLE SVC_ENVIRONMENT_COLL_SVC_ENV
(
	SERVICE_ENV_COLLECTION_ID NUMBER(13,0) NOT NULL ,
	SERVICE_ENVIRONMENT_ID NUMBER(13,0) NOT NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_SVC_ENVIRONMENT_COLL_SVC_EN ON SVC_ENVIRONMENT_COLL_SVC_ENV
(SERVICE_ENV_COLLECTION_ID   ASC,SERVICE_ENVIRONMENT_ID   ASC);

ALTER TABLE SVC_ENVIRONMENT_COLL_SVC_ENV
	ADD CONSTRAINT  PK_SVC_ENVIRONMENT_COLL_SVC_EN PRIMARY KEY (SERVICE_ENV_COLLECTION_ID,SERVICE_ENVIRONMENT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SVC_ENVIRONMENT_COLL_SVC_EN  ENABLE  VALIDATE;

ALTER TABLE SVC_ENVIRONMENT_COLL_SVC_ENV
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_199357683 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SVC_ENVIRONMENT_COLL_SVC_ENV
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_200144861 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1SVC_ENVIRONMENT_COLL_SVC_E ON SVC_ENVIRONMENT_COLL_SVC_ENV
(SERVICE_ENVIRONMENT_ID   ASC);

CREATE  INDEX XIF2SVC_ENVIRONMENT_COLL_SVC_E ON SVC_ENVIRONMENT_COLL_SVC_ENV
(SERVICE_ENV_COLLECTION_ID   ASC);

/***********************************************
 * Table: SW_PACKAGE
 ***********************************************/

CREATE TABLE SW_PACKAGE
(
	SW_PACKAGE_ID        NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SW_PACKAGE_NAME      VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SW_PACKAGE_TYPE      VARCHAR2(50 BYTE) CONSTRAINT CKC_SW_PACKAGE_TYPE_NN NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_SW_PACKAGE ON SW_PACKAGE
(SW_PACKAGE_ID   ASC);

ALTER TABLE SW_PACKAGE
	ADD CONSTRAINT  PK_SW_PACKAGE PRIMARY KEY (SW_PACKAGE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SW_PACKAGE  ENABLE  VALIDATE;

ALTER TABLE SW_PACKAGE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_SWPKG CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SW_PACKAGE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_SWPKG CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: SW_PACKAGE_RELATION
 ***********************************************/

CREATE TABLE SW_PACKAGE_RELATION
(
	SW_PACKAGE_RELATION_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SW_PACKAGE_RELEASE_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	RELATED_SW_PACKAGE_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	RELATED_SW_PACKAGE_VERSION VARCHAR2(255 BYTE) NULL ,
	PACKAGE_RELATION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	RELATION_RESTRICTION CHAR(2 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_SW_PACKAGE_RELATION ON SW_PACKAGE_RELATION
(SW_PACKAGE_RELATION_ID   ASC);

ALTER TABLE SW_PACKAGE_RELATION
	ADD CONSTRAINT  PK_SW_PACKAGE_RELATION PRIMARY KEY (SW_PACKAGE_RELATION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SW_PACKAGE_RELATION  ENABLE  VALIDATE;

ALTER TABLE SW_PACKAGE_RELATION
	MODIFY RELATION_RESTRICTION CONSTRAINT  CKC_RELATION_RESTRICT_SW_PACKA CHECK (RELATION_RESTRICTION is null or (RELATION_RESTRICTION in ('<','>','<=','>=','=')))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SW_PACKAGE_RELATION
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_SWPKGRELTN CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SW_PACKAGE_RELATION
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_SWPKGRELTN CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX IDX_SW_PKG_RLTN_REL_SW_PKG_ID ON SW_PACKAGE_RELATION
(RELATED_SW_PACKAGE_ID   ASC);

CREATE  INDEX IDX_SW_PKG_RLTN_SW_PKG_REL_ID ON SW_PACKAGE_RELATION
(SW_PACKAGE_RELEASE_ID   ASC);

/***********************************************
 * Table: SW_PACKAGE_RELEASE
 ***********************************************/

CREATE TABLE SW_PACKAGE_RELEASE
(
	SW_PACKAGE_RELEASE_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SW_PACKAGE_ID        NUMBER(13,0) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SW_PACKAGE_VERSION   VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SW_PACKAGE_FORMAT    VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SW_PACKAGE_TYPE      VARCHAR2(50 BYTE) NULL ,
	CREATION_ACCOUNT_ID  NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PROCESSOR_ARCHITECTURE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SERVICE_ENVIRONMENT_ID NUMBER(13,0) NOT NULL ,
	SW_PACKAGE_REPOSITORY_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	UPLOADING_PRINCIPAL  VARCHAR2(255 BYTE) NULL ,
	PACKAGE_SIZE         NUMBER NULL ,
	INSTALLED_PACKAGE_SIZE_KB NUMBER NULL ,
	PATHNAME             VARCHAR2(1024 BYTE) NULL ,
	MD5SUM               VARCHAR2(255 BYTE) NULL ,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	INSTANTIATION_DATE   DATE NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX AK_UQ_SW_PKG_REL_COMB_SW_PACKA ON SW_PACKAGE_RELEASE
(SW_PACKAGE_ID   ASC,SW_PACKAGE_VERSION   ASC,PROCESSOR_ARCHITECTURE   ASC,SW_PACKAGE_REPOSITORY_ID   ASC);

CREATE UNIQUE INDEX PK_SW_PACKAGE_RELEASE ON SW_PACKAGE_RELEASE
(SW_PACKAGE_RELEASE_ID   ASC);

ALTER TABLE SW_PACKAGE_RELEASE
	ADD CONSTRAINT  PK_SW_PACKAGE_RELEASE PRIMARY KEY (SW_PACKAGE_RELEASE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SW_PACKAGE_RELEASE  ENABLE  VALIDATE;

ALTER TABLE SW_PACKAGE_RELEASE
ADD CONSTRAINT  AK_UQ_SW_PKG_REL_COMB_SW_PACKA UNIQUE (SW_PACKAGE_ID,SW_PACKAGE_VERSION,PROCESSOR_ARCHITECTURE,SW_PACKAGE_REPOSITORY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_UQ_SW_PKG_REL_COMB_SW_PACKA  ENABLE  VALIDATE;

ALTER TABLE SW_PACKAGE_RELEASE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_SWPKGREL CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SW_PACKAGE_RELEASE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_SWPKGREL CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX IDX_SW_PKG_REL_SW_PKG_ID ON SW_PACKAGE_RELEASE
(SW_PACKAGE_ID   ASC);

/***********************************************
 * Table: SW_PACKAGE_REPOSITORY
 ***********************************************/

CREATE TABLE SW_PACKAGE_REPOSITORY
(
	SW_PACKAGE_REPOSITORY_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SW_REPOSITORY_NAME   VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	APT_REPOSITORY       VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX AK_UQ_SW_PKG_REP_APT_SW_PACKA ON SW_PACKAGE_REPOSITORY
(APT_REPOSITORY   ASC);

CREATE UNIQUE INDEX AK_UQ_SW_PKG_REP_SW_R_SW_PACKA ON SW_PACKAGE_REPOSITORY
(SW_REPOSITORY_NAME   ASC);

CREATE UNIQUE INDEX PK_SW_PACKAGE_REPOSITORY ON SW_PACKAGE_REPOSITORY
(SW_PACKAGE_REPOSITORY_ID   ASC);

ALTER TABLE SW_PACKAGE_REPOSITORY
	ADD CONSTRAINT  PK_SW_PACKAGE_REPOSITORY PRIMARY KEY (SW_PACKAGE_REPOSITORY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SW_PACKAGE_REPOSITORY  ENABLE  VALIDATE;

ALTER TABLE SW_PACKAGE_REPOSITORY
ADD CONSTRAINT  AK_UQ_SW_PKG_REP_APT_SW_PACKA UNIQUE (APT_REPOSITORY)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_UQ_SW_PKG_REP_APT_SW_PACKA  ENABLE  VALIDATE;

ALTER TABLE SW_PACKAGE_REPOSITORY
ADD CONSTRAINT  AK_UQ_SW_PKG_REP_SW_R_SW_PACKA UNIQUE (SW_REPOSITORY_NAME)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_UQ_SW_PKG_REP_SW_R_SW_PACKA  ENABLE  VALIDATE;

ALTER TABLE SW_PACKAGE_REPOSITORY
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_SWPKGREPOS CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE SW_PACKAGE_REPOSITORY
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_SWPKGREPOS CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: TICKETING_SYSTEM
 ***********************************************/

CREATE TABLE TICKETING_SYSTEM
(
	TICKETING_SYSTEM_ID  NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	TICKETING_SYSTEM_NAME varchar2(50) NOT NULL ,
	TICKETING_SYSTEM_URL VARCHAR2(255) NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_TICKETING_SYSTEM_ID ON TICKETING_SYSTEM
(TICKETING_SYSTEM_ID   ASC);

ALTER TABLE TICKETING_SYSTEM
	ADD CONSTRAINT  PK_TICKETING_SYSTEM_ID PRIMARY KEY (TICKETING_SYSTEM_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_TICKETING_SYSTEM_ID  ENABLE  VALIDATE;

ALTER TABLE TICKETING_SYSTEM
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_235465976 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE TICKETING_SYSTEM
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_236253154 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: TOKEN
 ***********************************************/

CREATE TABLE TOKEN
(
	TOKEN_ID             NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	TOKEN_TYPE           VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	TOKEN_STATUS         VARCHAR2(50 BYTE) NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	TOKEN_SERIAL         VARCHAR2(20 BYTE) NULL ,
	ZERO_TIME            DATE NULL ,
	TIME_MODULO          NUMBER NULL ,
	TIME_SKEW            NUMBER NULL ,
	TOKEN_KEY            VARCHAR2(512 BYTE) NULL ,
	ENCRYPTION_KEY_ID    NUMBER(13) NULL ,
	TOKEN_PASSWORD       VARCHAR2(128 BYTE) NULL ,
	EXPIRE_TIME          DATE NULL ,
	IS_TOKEN_LOCKED      CHAR(1) NOT NULL ,
	TOKEN_UNLOCK_TIME    DATE NULL ,
	BAD_LOGINS           INTEGER NULL ,
	LAST_UPDATED         DATE NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN TOKEN.ENCRYPTION_KEY_ID IS 'encryption information for token_key, if used';

CREATE UNIQUE INDEX PK_TOKEN ON TOKEN
(TOKEN_ID   ASC);

ALTER TABLE TOKEN
	ADD CONSTRAINT  PK_TOKEN PRIMARY KEY (TOKEN_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_TOKEN  ENABLE  VALIDATE;

CREATE UNIQUE INDEX XAK1TOKEN ON TOKEN
(TOKEN_KEY   ASC);

ALTER TABLE TOKEN
ADD CONSTRAINT  AK_TOKEN_TOKEN_KEY UNIQUE (TOKEN_KEY);

ALTER TABLE TOKEN
	MODIFY TOKEN_TYPE CONSTRAINT  SYS_C0020104 CHECK ("TOKEN_TYPE" IS NOT
NULL)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE TOKEN
	MODIFY LAST_UPDATED CONSTRAINT  SYS_C0020105 CHECK ("LAST_UPDATED" IS NOT
NULL)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE TOKEN
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_TOKEN CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE TOKEN
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_TOKEN CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE TOKEN
	MODIFY IS_TOKEN_LOCKED CONSTRAINT  CHECK_YES_NO_TKN_ISLCKD CHECK (IS_TOKEN_LOCKED IN ('Y', 'N'));

ALTER TABLE TOKEN
	MODIFY IS_TOKEN_LOCKED DEFAULT 'N';

CREATE    BITMAP INDEX IDX_TOKEN_TOKENSTATUS ON TOKEN
(TOKEN_STATUS   ASC);

CREATE    BITMAP INDEX IDX_TOKEN_TOKENTYPE ON TOKEN
(TOKEN_TYPE   ASC);

/***********************************************
 * Table: TOKEN_COLLECTION
 ***********************************************/

CREATE TABLE TOKEN_COLLECTION
(
	TOKEN_COLLECTION_ID  NUMBER(13) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	TOKEN_COLLECTION_NAME VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	TOKEN_COLLECTION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE TOKEN_COLLECTION IS 'Group tokens together in arbitrary ways.';

CREATE UNIQUE INDEX PK_TOKEN_COLLECTION ON TOKEN_COLLECTION
(TOKEN_COLLECTION_ID   ASC);

CREATE UNIQUE INDEX UQ_TOKEN_COLL_NAME_TYPE ON TOKEN_COLLECTION
(TOKEN_COLLECTION_NAME   ASC,TOKEN_COLLECTION_TYPE   ASC);

ALTER TABLE TOKEN_COLLECTION
	ADD CONSTRAINT  PK_TOKEN_COLLECTION PRIMARY KEY (TOKEN_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_TOKEN_COLLECTION  ENABLE  VALIDATE;

ALTER TABLE TOKEN_COLLECTION
ADD CONSTRAINT  UQ_TOKEN_COLL_NAME_TYPE UNIQUE (TOKEN_COLLECTION_NAME,TOKEN_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX UQ_TOKEN_COLL_NAME_TYPE  ENABLE  VALIDATE;

ALTER TABLE TOKEN_COLLECTION
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_TOKEN_COL CHECK (DATA_INS_USER is null or
		(DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE TOKEN_COLLECTION
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_TOKEN_COL CHECK (DATA_UPD_USER is null or
		(DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: TOKEN_COLLECTION_HIER
 ***********************************************/

CREATE TABLE TOKEN_COLLECTION_HIER
(
	TOKEN_COLLECTION_ID  NUMBER(13) NOT NULL ,
	CHILD_TOKEN_COLLECTION_ID NUMBER(13) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE TOKEN_COLLECTION_HIER IS 'Assign individual tokens to groups.';

CREATE UNIQUE INDEX PK_TOKEN_COLLECTION_HIER ON TOKEN_COLLECTION_HIER
(TOKEN_COLLECTION_ID   ASC,CHILD_TOKEN_COLLECTION_ID   ASC);

ALTER TABLE TOKEN_COLLECTION_HIER
	ADD CONSTRAINT  PK_TOKEN_COLLECTION_HIER PRIMARY KEY (TOKEN_COLLECTION_ID,CHILD_TOKEN_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_TOKEN_COLLECTION_HIER  ENABLE  VALIDATE;

ALTER TABLE TOKEN_COLLECTION_HIER
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_1508_489989278 CHECK (DATA_INS_USER is null or
			(DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE TOKEN_COLLECTION_HIER
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_1511_691443351 CHECK (DATA_UPD_USER is null or
			(DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_TOK_COL_HIER_CH_TOK_COLID ON TOKEN_COLLECTION_HIER
(TOKEN_COLLECTION_ID   ASC);

CREATE  INDEX XIF_TOK_COL_HIER_TOK_COLID ON TOKEN_COLLECTION_HIER
(CHILD_TOKEN_COLLECTION_ID   ASC);

/***********************************************
 * Table: TOKEN_COLLECTION_TOKEN
 ***********************************************/

CREATE TABLE TOKEN_COLLECTION_TOKEN
(
	TOKEN_COLLECTION_ID  NUMBER(13) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	TOKEN_ID             NUMBER(13) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	TOKEN_ID_RANK        INTEGER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE TOKEN_COLLECTION_TOKEN IS 'Assign individual tokens to groups.';

CREATE UNIQUE INDEX PK_TOKEN_COLLECTION_TOKEN ON TOKEN_COLLECTION_TOKEN
(TOKEN_COLLECTION_ID   ASC,TOKEN_ID   ASC);

ALTER TABLE TOKEN_COLLECTION_TOKEN
	ADD CONSTRAINT  PK_TOKEN_COLLECTION_TOKEN PRIMARY KEY (TOKEN_COLLECTION_ID,TOKEN_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_TOKEN_COLLECTION_TOKEN  ENABLE  VALIDATE;

CREATE UNIQUE INDEX XAKTOKCOLL_TOK_TOK_ID ON TOKEN_COLLECTION_TOKEN
(TOKEN_COLLECTION_ID   ASC,TOKEN_ID_RANK   ASC);

ALTER TABLE TOKEN_COLLECTION_TOKEN
ADD CONSTRAINT  AK_TOKCOLL_TOK_TOK_ID UNIQUE (TOKEN_COLLECTION_ID,TOKEN_ID_RANK);

ALTER TABLE TOKEN_COLLECTION_TOKEN
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_TOK_COL_MEMBER CHECK (DATA_INS_USER is null or
			(DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE TOKEN_COLLECTION_TOKEN
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_TOK_COL_MEMBER CHECK (DATA_UPD_USER is null or
			(DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX IDX_TOK_COL_TOKEN_TOK_COL_ID ON TOKEN_COLLECTION_TOKEN
(TOKEN_COLLECTION_ID   ASC);

CREATE  INDEX IDX_TOK_COL_TOKEN_TOK_ID ON TOKEN_COLLECTION_TOKEN
(TOKEN_ID   ASC);

/***********************************************
 * Table: TOKEN_SEQUENCE
 ***********************************************/

CREATE TABLE TOKEN_SEQUENCE
(
	TOKEN_ID             NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	TOKEN_SEQUENCE       NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	LAST_UPDATED         DATE NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE
);

CREATE UNIQUE INDEX PK_TOKEN_SEQUENCE ON TOKEN_SEQUENCE
(TOKEN_ID   ASC);

ALTER TABLE TOKEN_SEQUENCE
	ADD CONSTRAINT  PK_TOKEN_SEQUENCE PRIMARY KEY (TOKEN_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_TOKEN_SEQUENCE  ENABLE  VALIDATE;

/***********************************************
 * Table: UNIX_GROUP
 ***********************************************/

CREATE TABLE UNIX_GROUP
(
	ACCOUNT_COLLECTION_ID NUMBER NOT NULL ,
	UNIX_GID             NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	GROUP_PASSWORD       VARCHAR2(20 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX AK_UNIX_GROUP_UNIX_GID ON UNIX_GROUP
(UNIX_GID   ASC);

CREATE UNIQUE INDEX PK_UNIX_GROUP ON UNIX_GROUP
(ACCOUNT_COLLECTION_ID   ASC);

ALTER TABLE UNIX_GROUP
	ADD CONSTRAINT  PK_UNIX_GROUP PRIMARY KEY (ACCOUNT_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_UNIX_GROUP  ENABLE  VALIDATE;

ALTER TABLE UNIX_GROUP
ADD CONSTRAINT  AK_UNIX_GROUP_UNIX_GID UNIQUE (UNIX_GID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_UNIX_GROUP_UNIX_GID  ENABLE  VALIDATE;

ALTER TABLE UNIX_GROUP
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_UNIX_GROUP CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE UNIX_GROUP
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_UNIX_GROUP CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_ACCOUNT_COLLECTION_TYPE
 ***********************************************/

CREATE TABLE VAL_ACCOUNT_COLLECTION_TYPE
(
	ACCOUNT_COLLECTION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	IS_INFRASTRUCTURE_TYPE CHAR(1) NOT NULL ,
	MAX_NUM_MEMBERS      INTEGER NULL ,
	MAX_NUM_COLLECTIONS  INTEGER NULL ,
	CAN_HAVE_HIERARCHY   CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN VAL_ACCOUNT_COLLECTION_TYPE.MAX_NUM_MEMBERS IS 'Maximum number of members in a given collection of this type
';

COMMENT ON COLUMN VAL_ACCOUNT_COLLECTION_TYPE.CAN_HAVE_HIERARCHY IS 'Indicates if the collections can have other collections to make it hierarchical.';

COMMENT ON COLUMN VAL_ACCOUNT_COLLECTION_TYPE.MAX_NUM_COLLECTIONS IS 'Maximum number of collections a given member can be a part of of this type.
';

CREATE UNIQUE INDEX PK_ACCOUNT_COLLECTION_TYPE ON VAL_ACCOUNT_COLLECTION_TYPE
(ACCOUNT_COLLECTION_TYPE   ASC);

ALTER TABLE VAL_ACCOUNT_COLLECTION_TYPE
	ADD CONSTRAINT  PK_VAL_ACCOUNT_COLLECTION_TYPE PRIMARY KEY (ACCOUNT_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_ACCOUNT_COLLECTION_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_ACCOUNT_COLLECTION_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VUSRCOLTYPE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_ACCOUNT_COLLECTION_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VUSRCOLTYPE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_ACCOUNT_COLLECTION_TYPE
	MODIFY IS_INFRASTRUCTURE_TYPE CONSTRAINT  CHECK_YES_NO_1816418084 CHECK (IS_INFRASTRUCTURE_TYPE IN ('Y', 'N'));

ALTER TABLE VAL_ACCOUNT_COLLECTION_TYPE
	MODIFY CAN_HAVE_HIERARCHY CONSTRAINT  CHECK_YES_NO_ACT_CHH CHECK (CAN_HAVE_HIERARCHY IN ('Y', 'N'));

ALTER TABLE VAL_ACCOUNT_COLLECTION_TYPE
	MODIFY IS_INFRASTRUCTURE_TYPE DEFAULT 'N';

ALTER TABLE VAL_ACCOUNT_COLLECTION_TYPE
	MODIFY CAN_HAVE_HIERARCHY DEFAULT 'Y';

/***********************************************
 * Table: VAL_ACCOUNT_ROLE
 ***********************************************/

CREATE TABLE VAL_ACCOUNT_ROLE
(
	ACCOUNT_ROLE         VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	UID_GID_FORCED       CHAR(1) NOT NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_ACCOUNT_ROLE IS 'Defines the role for the account, such as primary, administrator, privileged/superuser, test, etc';

CREATE UNIQUE INDEX PK_VAL_ACCOUNT_ROLE ON VAL_ACCOUNT_ROLE
(ACCOUNT_ROLE   ASC);

ALTER TABLE VAL_ACCOUNT_ROLE
	ADD CONSTRAINT  PK_VAL_ACCOUNT_ROLE PRIMARY KEY (ACCOUNT_ROLE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_ACCOUNT_ROLE  ENABLE  VALIDATE;

ALTER TABLE VAL_ACCOUNT_ROLE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_416937995 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_ACCOUNT_ROLE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_417725173 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_ACCOUNT_ROLE
	MODIFY UID_GID_FORCED CONSTRAINT  CHECK_YES_NO_312716257 CHECK (UID_GID_FORCED IN ('Y', 'N'));

/***********************************************
 * Table: VAL_ACCOUNT_TYPE
 ***********************************************/

CREATE TABLE VAL_ACCOUNT_TYPE
(
	ACCOUNT_TYPE         VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	IS_PERSON            CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	UID_GID_FORCED       CHAR(1) NOT NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_ACCOUNT_TYPE IS 'Defines the type of the account (pseudouser or person).  is_person is probably unnecessary and will be dropped in the future.';

CREATE UNIQUE INDEX PK_VAL_ACCOUNT_TYPE ON VAL_ACCOUNT_TYPE
(ACCOUNT_TYPE   ASC);

ALTER TABLE VAL_ACCOUNT_TYPE
	ADD CONSTRAINT  PK_VAL_ACCOUNT_TYPE PRIMARY KEY (ACCOUNT_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_ACCOUNT_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_ACCOUNT_TYPE
	MODIFY IS_PERSON CONSTRAINT  CKC_IS_PERSON_VAL_SYST CHECK (IS_PERSON in ('Y','N') and IS_PERSON = upper(IS_PERSON))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_ACCOUNT_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VACCTTYPE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_ACCOUNT_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VACCTTYPE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_ACCOUNT_TYPE
	MODIFY UID_GID_FORCED CONSTRAINT  CHECK_YES_NO_245606871 CHECK (UID_GID_FORCED IN ('Y', 'N'));

CREATE    BITMAP INDEX IDX_VACCOUNT_TYPE_ISPERSON ON VAL_ACCOUNT_TYPE
(IS_PERSON   ASC);

/***********************************************
 * Table: VAL_APP_KEY
 ***********************************************/

CREATE TABLE VAL_APP_KEY
(
	APPAAL_GROUP_NAME    VARCHAR2(50 BYTE) NOT NULL ,
	APP_KEY              VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_APP_KEY ON VAL_APP_KEY
(APPAAL_GROUP_NAME   ASC,APP_KEY   ASC);

ALTER TABLE VAL_APP_KEY
	ADD CONSTRAINT  PK_VAL_APP_KEY PRIMARY KEY (APPAAL_GROUP_NAME,APP_KEY)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_APP_KEY  ENABLE  VALIDATE;

ALTER TABLE VAL_APP_KEY
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_APP_KEY CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_APP_KEY
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_APP_KEY CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1VAL_APP_KEY ON VAL_APP_KEY
(APPAAL_GROUP_NAME   ASC);

/***********************************************
 * Table: VAL_APP_KEY_VALUES
 ***********************************************/

CREATE TABLE VAL_APP_KEY_VALUES
(
	APPAAL_GROUP_NAME    VARCHAR2(50 BYTE) NOT NULL ,
	APP_KEY              VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	APP_VALUE            VARCHAR2(4000 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_APP_KEY_VALUES ON VAL_APP_KEY_VALUES
(APPAAL_GROUP_NAME   ASC,APP_KEY   ASC,APP_VALUE   ASC);

ALTER TABLE VAL_APP_KEY_VALUES
	ADD CONSTRAINT  PK_VAL_APP_KEY_VALUES PRIMARY KEY (APPAAL_GROUP_NAME,APP_KEY,APP_VALUE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_APP_KEY_VALUES  ENABLE  VALIDATE;

ALTER TABLE VAL_APP_KEY_VALUES
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_AUTH_MTHD CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_APP_KEY_VALUES
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_AUTH_MTHD CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_APPAAL_GROUP_NAME
 ***********************************************/

CREATE TABLE VAL_APPAAL_GROUP_NAME
(
	APPAAL_GROUP_NAME    VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_APPAAL_GROUP_NAME ON VAL_APPAAL_GROUP_NAME
(APPAAL_GROUP_NAME   ASC);

ALTER TABLE VAL_APPAAL_GROUP_NAME
	ADD CONSTRAINT  PK_VAL_APPAAL_GROUP_NAME PRIMARY KEY (APPAAL_GROUP_NAME)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_APPAAL_GROUP_NAME  ENABLE  VALIDATE;

ALTER TABLE VAL_APPAAL_GROUP_NAME
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1430932871 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_APPAAL_GROUP_NAME
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1431720049 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_APPROVAL_CHAIN_RESP_PRD
 ***********************************************/

CREATE TABLE VAL_APPROVAL_CHAIN_RESP_PRD
(
	APPROVAL_CHAIN_RESPONSE_PERIOD varchar2(50) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_APPROVAL_CHAIN_RESP_PRD ON VAL_APPROVAL_CHAIN_RESP_PRD
(APPROVAL_CHAIN_RESPONSE_PERIOD   ASC);

ALTER TABLE VAL_APPROVAL_CHAIN_RESP_PRD
	ADD CONSTRAINT  PK_VAL_APPROVAL_CHAIN_RESP_PRD PRIMARY KEY (APPROVAL_CHAIN_RESPONSE_PERIOD)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_APPROVAL_CHAIN_RESP_PRD  ENABLE  VALIDATE;

ALTER TABLE VAL_APPROVAL_CHAIN_RESP_PRD
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_891492655 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_APPROVAL_CHAIN_RESP_PRD
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_890705477 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_APPROVAL_EXPIRATION_ACTION
 ***********************************************/

CREATE TABLE VAL_APPROVAL_EXPIRATION_ACTION
(
	APPROVAL_EXPIRATION_ACTION varchar2(50) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_APPROVAL_EXPIRATION_ACT ON VAL_APPROVAL_EXPIRATION_ACTION
(APPROVAL_EXPIRATION_ACTION   ASC);

ALTER TABLE VAL_APPROVAL_EXPIRATION_ACTION
	ADD CONSTRAINT  PK_VAL_APPROVAL_EXPIRATION_ACT PRIMARY KEY (APPROVAL_EXPIRATION_ACTION)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_APPROVAL_EXPIRATION_ACT  ENABLE  VALIDATE;

ALTER TABLE VAL_APPROVAL_EXPIRATION_ACTION
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_201117417 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_APPROVAL_EXPIRATION_ACTION
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_200330239 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_APPROVAL_NOTIFTY_TYPE
 ***********************************************/

CREATE TABLE VAL_APPROVAL_NOTIFTY_TYPE
(
	APPROVAL_NOTIFY_TYPE varchar2(50) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_APPROVAL_NOTIFY_TYPE ON VAL_APPROVAL_NOTIFTY_TYPE
(APPROVAL_NOTIFY_TYPE   ASC);

ALTER TABLE VAL_APPROVAL_NOTIFTY_TYPE
	ADD CONSTRAINT  PK_VAL_APPROVAL_NOTIFY_TYPE PRIMARY KEY (APPROVAL_NOTIFY_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_APPROVAL_NOTIFY_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_APPROVAL_NOTIFTY_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1433222165 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_APPROVAL_NOTIFTY_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1432434987 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_APPROVAL_PROCESS_TYPE
 ***********************************************/

CREATE TABLE VAL_APPROVAL_PROCESS_TYPE
(
	APPROVAL_PROCESS_TYPE varchar2(50) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_APPROVAL_PROCESS_TYPE ON VAL_APPROVAL_PROCESS_TYPE
(APPROVAL_PROCESS_TYPE   ASC);

ALTER TABLE VAL_APPROVAL_PROCESS_TYPE
	ADD CONSTRAINT  PK_VAL_APPROVAL_PROCESS_TYPE PRIMARY KEY (APPROVAL_PROCESS_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_APPROVAL_PROCESS_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_APPROVAL_PROCESS_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1416316699 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_APPROVAL_PROCESS_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1415529521 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_APPROVAL_TYPE
 ***********************************************/

CREATE TABLE VAL_APPROVAL_TYPE
(
	APPROVAL_TYPE        varchar2(50) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_APPROVAL_TYPE ON VAL_APPROVAL_TYPE
(APPROVAL_TYPE   ASC);

ALTER TABLE VAL_APPROVAL_TYPE
	ADD CONSTRAINT  PK_VAL_APPROVAL_TYPE PRIMARY KEY (APPROVAL_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_APPROVAL_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_APPROVAL_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_367990339 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_APPROVAL_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_368777517 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_ATTESTATION_FREQUENCY
 ***********************************************/

CREATE TABLE VAL_ATTESTATION_FREQUENCY
(
	ATTESTATION_FREQUENCY varchar2(50) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_ATTESTATION_FREQUENCY ON VAL_ATTESTATION_FREQUENCY
(ATTESTATION_FREQUENCY   ASC);

ALTER TABLE VAL_ATTESTATION_FREQUENCY
	ADD CONSTRAINT  PK_VAL_ATTESTATION_FREQUENCY PRIMARY KEY (ATTESTATION_FREQUENCY)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_ATTESTATION_FREQUENCY  ENABLE  VALIDATE;

ALTER TABLE VAL_ATTESTATION_FREQUENCY
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1434733344 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_ATTESTATION_FREQUENCY
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1433946166 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_AUTH_QUESTION
 ***********************************************/

CREATE TABLE VAL_AUTH_QUESTION
(
	AUTH_QUESTION_ID     NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	QUESTION_TEXT        VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_AUTH_QUESTION ON VAL_AUTH_QUESTION
(AUTH_QUESTION_ID   ASC);

ALTER TABLE VAL_AUTH_QUESTION
	ADD CONSTRAINT  PK_VAL_AUTH_QUESTION PRIMARY KEY (AUTH_QUESTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_AUTH_QUESTION  ENABLE  VALIDATE;

ALTER TABLE VAL_AUTH_QUESTION
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VAUTHQUEST CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_AUTH_QUESTION
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VAUTHQUEST CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_AUTH_RESOURCE
 ***********************************************/

CREATE TABLE VAL_AUTH_RESOURCE
(
	AUTH_RESOURCE        VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL 
);

CREATE UNIQUE INDEX PK_VAL_AUTH_RESOURCE ON VAL_AUTH_RESOURCE
(AUTH_RESOURCE   ASC);

ALTER TABLE VAL_AUTH_RESOURCE
	ADD CONSTRAINT  PK_VAL_AUTH_RESOURCE PRIMARY KEY (AUTH_RESOURCE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_AUTH_RESOURCE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_BADGE_STATUS
 ***********************************************/

CREATE TABLE VAL_BADGE_STATUS
(
	BADGE_STATUS         VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_BADGE_STATUS ON VAL_BADGE_STATUS
(BADGE_STATUS   ASC);

ALTER TABLE VAL_BADGE_STATUS
	ADD CONSTRAINT  PK_VAL_BADGE_STATUS PRIMARY KEY (BADGE_STATUS)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_BADGE_STATUS  ENABLE  VALIDATE;

ALTER TABLE VAL_BADGE_STATUS
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VBADGESTATUS CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_BADGE_STATUS
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VBADGESTATUS CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_CABLE_TYPE
 ***********************************************/

CREATE TABLE VAL_CABLE_TYPE
(
	CABLE_TYPE           VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_CABLE_TYPE ON VAL_CABLE_TYPE
(CABLE_TYPE   ASC);

ALTER TABLE VAL_CABLE_TYPE
	ADD CONSTRAINT  PK_CABLE_TYPE PRIMARY KEY (CABLE_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_CABLE_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_CABLE_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_CABLE_TYPE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_CABLE_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_CABLE_TYPE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_COMPANY_COLLECTION_TYPE
 ***********************************************/

CREATE TABLE VAL_COMPANY_COLLECTION_TYPE
(
	COMPANY_COLLECTION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	IS_INFRASTRUCTURE_TYPE CHAR(1) NOT NULL ,
	MAX_NUM_MEMBERS      INTEGER NULL ,
	MAX_NUM_COLLECTIONS  INTEGER NULL ,
	CAN_HAVE_HIERARCHY   CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN VAL_COMPANY_COLLECTION_TYPE.MAX_NUM_MEMBERS IS 'Maximum number of members in a given collection of this type
';

COMMENT ON COLUMN VAL_COMPANY_COLLECTION_TYPE.CAN_HAVE_HIERARCHY IS 'Indicates if the collections can have other collections to make it hierarchical.';

COMMENT ON COLUMN VAL_COMPANY_COLLECTION_TYPE.MAX_NUM_COLLECTIONS IS 'Maximum number of collections a given member can be a part of of this type.
';

CREATE UNIQUE INDEX PK_COMPANY_COLLECTION_TYPE ON VAL_COMPANY_COLLECTION_TYPE
(COMPANY_COLLECTION_TYPE   ASC);

ALTER TABLE VAL_COMPANY_COLLECTION_TYPE
	ADD CONSTRAINT  PK_COMPANY_COLLECTION_TYPE PRIMARY KEY (COMPANY_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_COMPANY_COLLECTION_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_COMPANY_COLLECTION_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_758917137 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_COMPANY_COLLECTION_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_758129959 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_COMPANY_COLLECTION_TYPE
	MODIFY IS_INFRASTRUCTURE_TYPE CONSTRAINT  CHECK_YES_NO_1614108214 CHECK (IS_INFRASTRUCTURE_TYPE IN ('Y', 'N'));

ALTER TABLE VAL_COMPANY_COLLECTION_TYPE
	MODIFY CAN_HAVE_HIERARCHY CONSTRAINT  CHECK_YES_NO_845966153 CHECK (CAN_HAVE_HIERARCHY IN ('Y', 'N'));

ALTER TABLE VAL_COMPANY_COLLECTION_TYPE
	MODIFY IS_INFRASTRUCTURE_TYPE DEFAULT 'N';

ALTER TABLE VAL_COMPANY_COLLECTION_TYPE
	MODIFY CAN_HAVE_HIERARCHY DEFAULT 'Y';

/***********************************************
 * Table: VAL_COMPANY_TYPE
 ***********************************************/

CREATE TABLE VAL_COMPANY_TYPE
(
	COMPANY_TYPE         VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	COMPANY_TYPE_PURPOSE VARCHAR2(50 BYTE) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_COMPANY_TYPE ON VAL_COMPANY_TYPE
(COMPANY_TYPE   ASC);

ALTER TABLE VAL_COMPANY_TYPE
	ADD CONSTRAINT  PK_VAL_COMPANY_TYPE PRIMARY KEY (COMPANY_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_COMPANY_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_COMPANY_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_149949196 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_COMPANY_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_150736374 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_COMPANY_TYPE
	MODIFY COMPANY_TYPE_PURPOSE DEFAULT 'default';

CREATE  INDEX XIF_V_COMPTYP_COMPTYPPURP ON VAL_COMPANY_TYPE
(COMPANY_TYPE_PURPOSE   ASC);

/***********************************************
 * Table: VAL_COMPANY_TYPE_PURPOSE
 ***********************************************/

CREATE TABLE VAL_COMPANY_TYPE_PURPOSE
(
	COMPANY_TYPE_PURPOSE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_COMPANY_TYPE_PURPOSE IS 'Mechanism to group company types together, mostly for display or more complicated rules';

CREATE UNIQUE INDEX PK_VAL_COMPANY_TYPE_PURPOSE ON VAL_COMPANY_TYPE_PURPOSE
(COMPANY_TYPE_PURPOSE   ASC);

ALTER TABLE VAL_COMPANY_TYPE_PURPOSE
	ADD CONSTRAINT  PK_VAL_COMPANY_TYPE_PURPOSE PRIMARY KEY (COMPANY_TYPE_PURPOSE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_COMPANY_TYPE_PURPOSE  ENABLE  VALIDATE;

ALTER TABLE VAL_COMPANY_TYPE_PURPOSE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1198541917 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_COMPANY_TYPE_PURPOSE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1197754739 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_COMPONENT_FUNCTION
 ***********************************************/

CREATE TABLE VAL_COMPONENT_FUNCTION
(
	COMPONENT_FUNCTION   VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_COMPONENT_FUNCTION ON VAL_COMPONENT_FUNCTION
(COMPONENT_FUNCTION   ASC);

ALTER TABLE VAL_COMPONENT_FUNCTION
	ADD CONSTRAINT  PK_VAL_COMPONENT_FUNCTION PRIMARY KEY (COMPONENT_FUNCTION)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_COMPONENT_FUNCTION  ENABLE  VALIDATE;

ALTER TABLE VAL_COMPONENT_FUNCTION
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1398055559 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_COMPONENT_FUNCTION
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1398842737 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_COMPONENT_PROPERTY
 ***********************************************/

CREATE TABLE VAL_COMPONENT_PROPERTY
(
	COMPONENT_PROPERTY_NAME varchar2(50) NOT NULL ,
	COMPONENT_PROPERTY_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	IS_MULTIVALUE        CHAR(1) NOT NULL ,
	PROPERTY_DATA_TYPE   varchar2(50) NOT NULL ,
	PERMIT_COMPONENT_TYPE_ID CHAR(10) NOT NULL ,
	REQUIRED_COMPONENT_TYPE_ID NUMBER NULL ,
	PERMIT_COMPONENT_FUNCTION CHAR(10) NOT NULL ,
	REQUIRED_COMPONENT_FUNCTION VARCHAR2(50 BYTE) NULL ,
	PERMIT_COMPONENT_ID  CHAR(10) NOT NULL ,
	PERMIT_INTCOMP_CONN_ID CHAR(10) NOT NULL ,
	PERMIT_SLOT_TYPE_ID  CHAR(10) NOT NULL ,
	REQUIRED_SLOT_TYPE_ID NUMBER NULL ,
	PERMIT_SLOT_FUNCTION CHAR(10) NOT NULL ,
	REQUIRED_SLOT_FUNCTION VARCHAR2(50 BYTE) NULL ,
	PERMIT_SLOT_ID       CHAR(10) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_COMPONENT_PROPERTY IS 'Contains a list of all valid properties for component tables (component, component_type, component_function, slot, slot_type, slot_function)';

CREATE UNIQUE INDEX PK_VAL_COMPONENT_PROPERTY ON VAL_COMPONENT_PROPERTY
(COMPONENT_PROPERTY_NAME   ASC,COMPONENT_PROPERTY_TYPE   ASC);

ALTER TABLE VAL_COMPONENT_PROPERTY
	ADD CONSTRAINT  PK_VAL_COMPONENT_PROPERTY PRIMARY KEY (COMPONENT_PROPERTY_NAME,COMPONENT_PROPERTY_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_COMPONENT_PROPERTY  ENABLE  VALIDATE;

ALTER TABLE VAL_COMPONENT_PROPERTY
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1314564255 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_COMPONENT_PROPERTY
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1315351433 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_COMPONENT_PROPERTY
	MODIFY IS_MULTIVALUE CONSTRAINT  CHECK_YES_NO_1709686918 CHECK (IS_MULTIVALUE IN ('Y', 'N'));

ALTER TABLE VAL_COMPONENT_PROPERTY
	MODIFY PERMIT_COMPONENT_TYPE_ID CONSTRAINT  CHECK_PRP_PRMT_1181188899 CHECK (PERMIT_COMPONENT_TYPE_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_COMPONENT_PROPERTY
	MODIFY PERMIT_COMPONENT_FUNCTION CONSTRAINT  CHECK_PRP_PRMT_1618700758 CHECK (PERMIT_COMPONENT_FUNCTION IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_COMPONENT_PROPERTY
	MODIFY PERMIT_COMPONENT_ID CONSTRAINT  CHECK_PRP_PRMT_27441051 CHECK (PERMIT_COMPONENT_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_COMPONENT_PROPERTY
	MODIFY PERMIT_SLOT_TYPE_ID CONSTRAINT  CHECK_PRP_PRMT_342055273 CHECK (PERMIT_SLOT_TYPE_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_COMPONENT_PROPERTY
	MODIFY PERMIT_SLOT_FUNCTION CONSTRAINT  CHECK_PRP_PRMT_1784750469 CHECK (PERMIT_SLOT_FUNCTION IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_COMPONENT_PROPERTY
	MODIFY PERMIT_SLOT_ID CONSTRAINT  CHECK_PRP_PRMT_1984425150 CHECK (PERMIT_SLOT_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_COMPONENT_PROPERTY
	MODIFY PERMIT_INTCOMP_CONN_ID CONSTRAINT  CHECK_PRP_PRMT_677097419 CHECK (PERMIT_INTCOMP_CONN_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_COMPONENT_PROPERTY
	MODIFY PERMIT_COMPONENT_TYPE_ID DEFAULT 'PROHIBITED';

ALTER TABLE VAL_COMPONENT_PROPERTY
	MODIFY PERMIT_COMPONENT_FUNCTION DEFAULT 'PROHIBITED';

ALTER TABLE VAL_COMPONENT_PROPERTY
	MODIFY PERMIT_COMPONENT_ID DEFAULT 'PROHIBITED';

ALTER TABLE VAL_COMPONENT_PROPERTY
	MODIFY PERMIT_SLOT_TYPE_ID DEFAULT 'PROHIBITED';

ALTER TABLE VAL_COMPONENT_PROPERTY
	MODIFY PERMIT_SLOT_FUNCTION DEFAULT 'PROHIBITED';

ALTER TABLE VAL_COMPONENT_PROPERTY
	MODIFY PERMIT_SLOT_ID DEFAULT 'PROHIBITED';

ALTER TABLE VAL_COMPONENT_PROPERTY
	MODIFY PERMIT_INTCOMP_CONN_ID DEFAULT 'PROHIBITED';

CREATE  INDEX XIF_PROP_RQD_SLT_FUNC ON VAL_COMPONENT_PROPERTY
(REQUIRED_SLOT_FUNCTION   ASC);

CREATE  INDEX XIF_VCOMP_PROP_COMP_PROP_TYPE ON VAL_COMPONENT_PROPERTY
(COMPONENT_PROPERTY_TYPE   ASC);

CREATE  INDEX XIF_VCOMP_PROP_RQD_CMPFUNC ON VAL_COMPONENT_PROPERTY
(REQUIRED_COMPONENT_FUNCTION   ASC);

CREATE  INDEX XIF_VCOMP_PROP_RQD_CMPTYPID ON VAL_COMPONENT_PROPERTY
(REQUIRED_COMPONENT_TYPE_ID   ASC);

CREATE  INDEX XIF_VCOMP_PROP_RQD_SLTTYP_ID ON VAL_COMPONENT_PROPERTY
(REQUIRED_SLOT_TYPE_ID   ASC);

/***********************************************
 * Table: VAL_COMPONENT_PROPERTY_TYPE
 ***********************************************/

CREATE TABLE VAL_COMPONENT_PROPERTY_TYPE
(
	COMPONENT_PROPERTY_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	IS_MULTIVALUE        CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_COMPONENT_PROPERTY_TYPE IS 'Contains list of valid component_property_types';

CREATE UNIQUE INDEX PK_VAL_COMPONENT_PROPERTY_TYPE ON VAL_COMPONENT_PROPERTY_TYPE
(COMPONENT_PROPERTY_TYPE   ASC);

ALTER TABLE VAL_COMPONENT_PROPERTY_TYPE
	ADD CONSTRAINT  PK_VAL_COMPONENT_PROPERTY_TYPE PRIMARY KEY (COMPONENT_PROPERTY_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_COMPONENT_PROPERTY_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_COMPONENT_PROPERTY_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_789446704 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_COMPONENT_PROPERTY_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_788659526 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_COMPONENT_PROPERTY_TYPE
	MODIFY IS_MULTIVALUE CONSTRAINT  CHECK_YES_NO_46206456 CHECK (IS_MULTIVALUE IN ('Y', 'N'));

ALTER TABLE VAL_COMPONENT_PROPERTY_TYPE
	MODIFY IS_MULTIVALUE DEFAULT 'N';

/***********************************************
 * Table: VAL_COMPONENT_PROPERTY_VALUE
 ***********************************************/

CREATE TABLE VAL_COMPONENT_PROPERTY_VALUE
(
	COMPONENT_PROPERTY_NAME varchar2(50) NOT NULL ,
	COMPONENT_PROPERTY_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	VALID_PROPERTY_VALUE VARCHAR2(255) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_COMPONENT_PROPERTY_VALU ON VAL_COMPONENT_PROPERTY_VALUE
(COMPONENT_PROPERTY_NAME   ASC,COMPONENT_PROPERTY_TYPE   ASC,VALID_PROPERTY_VALUE   ASC);

ALTER TABLE VAL_COMPONENT_PROPERTY_VALUE
	ADD CONSTRAINT  PK_VAL_COMPONENT_PROPERTY_VALU PRIMARY KEY (COMPONENT_PROPERTY_NAME,COMPONENT_PROPERTY_TYPE,VALID_PROPERTY_VALUE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_COMPONENT_PROPERTY_VALU  ENABLE  VALIDATE;

ALTER TABLE VAL_COMPONENT_PROPERTY_VALUE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_68423435 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_COMPONENT_PROPERTY_VALUE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_67636257 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_COMP_PROP_VAL_NAMETYP ON VAL_COMPONENT_PROPERTY_VALUE
(COMPONENT_PROPERTY_NAME   ASC,COMPONENT_PROPERTY_TYPE   ASC);

/***********************************************
 * Table: VAL_CONTRACT_TYPE
 ***********************************************/

CREATE TABLE VAL_CONTRACT_TYPE
(
	CONTRACT_TYPE        VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_CONTRACT_TYPE ON VAL_CONTRACT_TYPE
(CONTRACT_TYPE   ASC);

ALTER TABLE VAL_CONTRACT_TYPE
	ADD CONSTRAINT  PK_VAL_CONTRACT_TYPE PRIMARY KEY (CONTRACT_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_CONTRACT_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_CONTRACT_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1105849 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_CONTRACT_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_318671 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_COUNTRY_CODE
 ***********************************************/

CREATE TABLE VAL_COUNTRY_CODE
(
	ISO_COUNTRY_CODE     CHAR(2 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DIAL_COUNTRY_CODE    VARCHAR2(4 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	COUNTRY_NAME         VARCHAR2(255 BYTE) NULL ,
	DISPLAY_PRIORITY     INTEGER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_COUNTRY_CODE ON VAL_COUNTRY_CODE
(ISO_COUNTRY_CODE   ASC);

ALTER TABLE VAL_COUNTRY_CODE
	ADD CONSTRAINT  PK_VAL_COUNTRY_CODE PRIMARY KEY (ISO_COUNTRY_CODE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_COUNTRY_CODE  ENABLE  VALIDATE;

ALTER TABLE VAL_COUNTRY_CODE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_CNTRYCODE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_COUNTRY_CODE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_CNTRYCODE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_DEVICE_AUTO_MGMT_PROTOCOL
 ***********************************************/

CREATE TABLE VAL_DEVICE_AUTO_MGMT_PROTOCOL
(
	AUTO_MGMT_PROTOCOL   VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	CONNECTION_PORT      NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_DEVICE_AUTO_MGMT_PROTOC ON VAL_DEVICE_AUTO_MGMT_PROTOCOL
(AUTO_MGMT_PROTOCOL   ASC);

ALTER TABLE VAL_DEVICE_AUTO_MGMT_PROTOCOL
	ADD CONSTRAINT  PK_VAL_DEVICE_AUTO_MGMT_PROTOC PRIMARY KEY (AUTO_MGMT_PROTOCOL)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_DEVICE_AUTO_MGMT_PROTOC  ENABLE  VALIDATE;

ALTER TABLE VAL_DEVICE_AUTO_MGMT_PROTOCOL
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VDEVAUTOMGMTP CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_DEVICE_AUTO_MGMT_PROTOCOL
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VDEVAUTOMGMTP CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_DEVICE_COLLECTION_TYPE
 ***********************************************/

CREATE TABLE VAL_DEVICE_COLLECTION_TYPE
(
	DEVICE_COLLECTION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	MAX_NUM_MEMBERS      INTEGER NULL ,
	MAX_NUM_COLLECTIONS  INTEGER NULL ,
	CAN_HAVE_HIERARCHY   CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN VAL_DEVICE_COLLECTION_TYPE.MAX_NUM_MEMBERS IS 'Maximum number of members in a given collection of this type
';

COMMENT ON COLUMN VAL_DEVICE_COLLECTION_TYPE.CAN_HAVE_HIERARCHY IS 'Indicates if the collections can have other collections to make it hierarchical.';

COMMENT ON COLUMN VAL_DEVICE_COLLECTION_TYPE.MAX_NUM_COLLECTIONS IS 'Maximum number of collections a given member can be a part of of this type.
';

CREATE UNIQUE INDEX PK_VAL_DEVICE_COLLECTION_TYPE ON VAL_DEVICE_COLLECTION_TYPE
(DEVICE_COLLECTION_TYPE   ASC);

ALTER TABLE VAL_DEVICE_COLLECTION_TYPE
	ADD CONSTRAINT  PK_VAL_DEVICE_COLLECTION_TYPE PRIMARY KEY (DEVICE_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_DEVICE_COLLECTION_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_DEVICE_COLLECTION_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_DEVCOLL_TYPE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_DEVICE_COLLECTION_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_DEVCOLL_TYPE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_DEVICE_COLLECTION_TYPE
	MODIFY CAN_HAVE_HIERARCHY CONSTRAINT  CHECK_YES_NO_DCT_CHH CHECK (CAN_HAVE_HIERARCHY IN ('Y', 'N'));

ALTER TABLE VAL_DEVICE_COLLECTION_TYPE
	MODIFY CAN_HAVE_HIERARCHY DEFAULT 'Y';

/***********************************************
 * Table: VAL_DEVICE_MGMT_CTRL_TYPE
 ***********************************************/

CREATE TABLE VAL_DEVICE_MGMT_CTRL_TYPE
(
	DEVICE_MGMT_CONTROL_TYPE VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_DEVICE_MGMT_CTRL_TYPE ON VAL_DEVICE_MGMT_CTRL_TYPE
(DEVICE_MGMT_CONTROL_TYPE   ASC);

ALTER TABLE VAL_DEVICE_MGMT_CTRL_TYPE
	ADD CONSTRAINT  PK_VAL_DEVICE_MGMT_CTRL_TYPE PRIMARY KEY (DEVICE_MGMT_CONTROL_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_DEVICE_MGMT_CTRL_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_DEVICE_MGMT_CTRL_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1682327100 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_DEVICE_MGMT_CTRL_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1681539922 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_DEVICE_STATUS
 ***********************************************/

CREATE TABLE VAL_DEVICE_STATUS
(
	DEVICE_STATUS        VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_STATUS ON VAL_DEVICE_STATUS
(DEVICE_STATUS   ASC);

ALTER TABLE VAL_DEVICE_STATUS
	ADD CONSTRAINT  PK_VAL_STATUS PRIMARY KEY (DEVICE_STATUS)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_STATUS  ENABLE  VALIDATE;

ALTER TABLE VAL_DEVICE_STATUS
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_VAL_STAT CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_DEVICE_STATUS
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_VAL_STAT CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_DIET
 ***********************************************/

CREATE TABLE VAL_DIET
(
	DIET                 VARCHAR2(255) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_DIET ON VAL_DIET
(DIET   ASC);

ALTER TABLE VAL_DIET
	ADD CONSTRAINT  PK_VAL_DIET PRIMARY KEY (DIET)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_DIET  ENABLE  VALIDATE;

ALTER TABLE VAL_DIET
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1950505323 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_DIET
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1951292501 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_DNS_CLASS
 ***********************************************/

CREATE TABLE VAL_DNS_CLASS
(
	DNS_CLASS            VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_DNS_CLASS ON VAL_DNS_CLASS
(DNS_CLASS   ASC);

ALTER TABLE VAL_DNS_CLASS
	ADD CONSTRAINT  PK_VAL_DNS_CLASS PRIMARY KEY (DNS_CLASS)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_DNS_CLASS  ENABLE  VALIDATE;

ALTER TABLE VAL_DNS_CLASS
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_DNS_CLASS CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_DNS_CLASS
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_DNS_CLASS CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_DNS_DOMAIN_COLLECTION_TYPE
 ***********************************************/

CREATE TABLE VAL_DNS_DOMAIN_COLLECTION_TYPE
(
	DNS_DOMAIN_COLLECTION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	MAX_NUM_MEMBERS      INTEGER NULL ,
	MAX_NUM_COLLECTIONS  INTEGER NULL ,
	CAN_HAVE_HIERARCHY   CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN VAL_DNS_DOMAIN_COLLECTION_TYPE.MAX_NUM_MEMBERS IS 'Maximum INTEGER of members in a given collection of this type';

COMMENT ON COLUMN VAL_DNS_DOMAIN_COLLECTION_TYPE.MAX_NUM_COLLECTIONS IS 'Maximum INTEGER of collections a given member can be a part of of this type.';

COMMENT ON COLUMN VAL_DNS_DOMAIN_COLLECTION_TYPE.CAN_HAVE_HIERARCHY IS 'Indicates if the collections can have other collections to make it hierarchical.';

CREATE UNIQUE INDEX PK_VAL_DNS_DOMAIN_COLLECTION_T ON VAL_DNS_DOMAIN_COLLECTION_TYPE
(DNS_DOMAIN_COLLECTION_TYPE   ASC);

ALTER TABLE VAL_DNS_DOMAIN_COLLECTION_TYPE
	ADD CONSTRAINT  PK_VAL_DNS_DOMAIN_COLLECTION_T PRIMARY KEY (DNS_DOMAIN_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_DNS_DOMAIN_COLLECTION_T  ENABLE  VALIDATE;

ALTER TABLE VAL_DNS_DOMAIN_COLLECTION_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_266936618 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_DNS_DOMAIN_COLLECTION_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_267723796 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_DNS_DOMAIN_COLLECTION_TYPE
	MODIFY CAN_HAVE_HIERARCHY CONSTRAINT  CHECK_YES_NO_DNSDOM_COLL_CANHI CHECK (CAN_HAVE_HIERARCHY IN ('Y', 'N'));

ALTER TABLE VAL_DNS_DOMAIN_COLLECTION_TYPE
	MODIFY CAN_HAVE_HIERARCHY DEFAULT 'Y';

CREATE TABLE VAL_DNS_DOMAIN_TYPE
(
	DNS_DOMAIN_TYPE      varchar2(50) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(255) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(255) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_DNS_DOMAIN_TYPE ON VAL_DNS_DOMAIN_TYPE
(DNS_DOMAIN_TYPE   ASC);

ALTER TABLE VAL_DNS_DOMAIN_TYPE
	ADD CONSTRAINT  PKVAL_DNS_DOMAIN_TYPE PRIMARY KEY (DNS_DOMAIN_TYPE);

/***********************************************
 * Table: VAL_DNS_RECORD_RELATION_TYPE
 ***********************************************/

CREATE TABLE VAL_DNS_RECORD_RELATION_TYPE
(
	DNS_RECORD_RELATION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_DNS_RECORD_RELATION_TYP ON VAL_DNS_RECORD_RELATION_TYPE
(DNS_RECORD_RELATION_TYPE   ASC);

ALTER TABLE VAL_DNS_RECORD_RELATION_TYPE
	ADD CONSTRAINT  PK_VAL_DNS_RECORD_RELATION_TYP PRIMARY KEY (DNS_RECORD_RELATION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_DNS_RECORD_RELATION_TYP  ENABLE  VALIDATE;

ALTER TABLE VAL_DNS_RECORD_RELATION_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_DNS_REC_REL CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_DNS_RECORD_RELATION_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_DNS_REC_REL CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_DNS_SRV_SERVICE
 ***********************************************/

CREATE TABLE VAL_DNS_SRV_SERVICE
(
	DNS_SRV_SERVICE      VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_DNS_SRV_SRVICE ON VAL_DNS_SRV_SERVICE
(DNS_SRV_SERVICE   ASC);

ALTER TABLE VAL_DNS_SRV_SERVICE
	ADD CONSTRAINT  PK_VAL_DNS_SRV_SRVICE PRIMARY KEY (DNS_SRV_SERVICE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_DNS_SRV_SRVICE  ENABLE  VALIDATE;

ALTER TABLE VAL_DNS_SRV_SERVICE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_DNS_SRV_SVC CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_DNS_SRV_SERVICE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_DNS_SRV_SVC CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_DNS_TYPE
 ***********************************************/

CREATE TABLE VAL_DNS_TYPE
(
	DNS_TYPE             VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	ID_TYPE              VARCHAR2(10 BYTE) CONSTRAINT SYS_C0074678 NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_DNS_TYPE ON VAL_DNS_TYPE
(DNS_TYPE   ASC);

ALTER TABLE VAL_DNS_TYPE
	ADD CONSTRAINT  PK_VAL_DNS_TYPE PRIMARY KEY (DNS_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_DNS_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_DNS_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_DNS_TYPE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_DNS_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_DNS_TYPE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_DNS_TYPE
	MODIFY ID_TYPE CONSTRAINT  CKC_ID_TYPE_VAL_DNS_ CHECK (ID_TYPE IN ('ID', 'LINK', 'NON-ID', 'HIDDEN'))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_ENCAPSULATION_MODE
 ***********************************************/

CREATE TABLE VAL_ENCAPSULATION_MODE
(
	ENCAPSULATION_MODE   VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ENCAPSULATION_TYPE   VARCHAR2(50 BYTE) NOT NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_ENCAPSULATION_MODE ON VAL_ENCAPSULATION_MODE
(ENCAPSULATION_MODE   ASC,ENCAPSULATION_TYPE   ASC);

ALTER TABLE VAL_ENCAPSULATION_MODE
	ADD CONSTRAINT  PK_VAL_ENCAPSULATION_MODE PRIMARY KEY (ENCAPSULATION_MODE,ENCAPSULATION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_ENCAPSULATION_MODE  ENABLE  VALIDATE;

ALTER TABLE VAL_ENCAPSULATION_MODE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1430488979 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_ENCAPSULATION_MODE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1431276157 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_VAL_ENCAP_MODE_TYPE ON VAL_ENCAPSULATION_MODE
(ENCAPSULATION_TYPE   ASC);

/***********************************************
 * Table: VAL_ENCAPSULATION_TYPE
 ***********************************************/

CREATE TABLE VAL_ENCAPSULATION_TYPE
(
	ENCAPSULATION_TYPE   VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_ENCAPSULATION_TYPE ON VAL_ENCAPSULATION_TYPE
(ENCAPSULATION_TYPE   ASC);

ALTER TABLE VAL_ENCAPSULATION_TYPE
	ADD CONSTRAINT  PK_VAL_ENCAPSULATION_TYPE PRIMARY KEY (ENCAPSULATION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_ENCAPSULATION_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_ENCAPSULATION_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_ENCAP_TYPE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_ENCAPSULATION_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_ENCAP_TYPE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_ENCRYPTION_KEY_PURPOSE
 ***********************************************/

CREATE TABLE VAL_ENCRYPTION_KEY_PURPOSE
(
	ENCRYPTION_KEY_PURPOSE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ENCRYPTION_KEY_PURPOSE_VERSION NUMBER(13) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_ENCRYPTION_KEY_PURPOSE IS 'Valid purpose of encryption used by the key_crypto package; Used to identify which functional application knows the app provided portion of the encryption key';

CREATE UNIQUE INDEX PK_VAL_ENCRYPTION_KEY_PURPOSE ON VAL_ENCRYPTION_KEY_PURPOSE
(ENCRYPTION_KEY_PURPOSE   ASC,ENCRYPTION_KEY_PURPOSE_VERSION   ASC);

ALTER TABLE VAL_ENCRYPTION_KEY_PURPOSE
	ADD CONSTRAINT  PK_VAL_ENCRYPTION_KEY_PURPOSE PRIMARY KEY (ENCRYPTION_KEY_PURPOSE,ENCRYPTION_KEY_PURPOSE_VERSION)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_ENCRYPTION_KEY_PURPOSE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_ENCRYPTION_METHOD
 ***********************************************/

CREATE TABLE VAL_ENCRYPTION_METHOD
(
	ENCRYPTION_METHOD    VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_ENCRYPTION_METHOD IS 'List of text representations of methods of encryption.  Format is the same as Kerberos uses such as in rfc3962';

CREATE UNIQUE INDEX PK_VAL_ENCRYPTION_METHOD ON VAL_ENCRYPTION_METHOD
(ENCRYPTION_METHOD   ASC);

ALTER TABLE VAL_ENCRYPTION_METHOD
	ADD CONSTRAINT  PK_VAL_ENCRYPTION_METHOD PRIMARY KEY (ENCRYPTION_METHOD)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_ENCRYPTION_METHOD  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_FILESYSTEM_TYPE
 ***********************************************/

CREATE TABLE VAL_FILESYSTEM_TYPE
(
	FILESYSTEM_TYPE      VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_FILESYTEM_TYPE ON VAL_FILESYSTEM_TYPE
(FILESYSTEM_TYPE   ASC);

ALTER TABLE VAL_FILESYSTEM_TYPE
	ADD CONSTRAINT  PK_VAL_FILESYTEM_TYPE PRIMARY KEY (FILESYSTEM_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_FILESYTEM_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_FILESYSTEM_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_658917704 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_FILESYSTEM_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_659704882 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_IMAGE_TYPE
 ***********************************************/

CREATE TABLE VAL_IMAGE_TYPE
(
	IMAGE_TYPE           VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_IMAGE_TYPE ON VAL_IMAGE_TYPE
(IMAGE_TYPE   ASC);

ALTER TABLE VAL_IMAGE_TYPE
	ADD CONSTRAINT  PK_VAL_IMAGE_TYPE PRIMARY KEY (IMAGE_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_IMAGE_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_IMAGE_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VIMGTYPE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_IMAGE_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VIMGTYPE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_IP_GROUP_PROTOCOL
 ***********************************************/

CREATE TABLE VAL_IP_GROUP_PROTOCOL
(
	IP_GROUP_PROTOCOL    CHAR(18) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_IP_GROUP_PROTOCOL ON VAL_IP_GROUP_PROTOCOL
(IP_GROUP_PROTOCOL   ASC);

ALTER TABLE VAL_IP_GROUP_PROTOCOL
	ADD CONSTRAINT  PK_VAL_IP_GROUP_PROTOCOL PRIMARY KEY (IP_GROUP_PROTOCOL)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_IP_GROUP_PROTOCOL  ENABLE  VALIDATE;

ALTER TABLE VAL_IP_GROUP_PROTOCOL
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1515085225 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_IP_GROUP_PROTOCOL
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1515872403 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_KEY_USG_REASON_FOR_ASSGN
 ***********************************************/

CREATE TABLE VAL_KEY_USG_REASON_FOR_ASSGN
(
	KEY_USAGE_REASON_FOR_ASSIGN VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_KEY_USG_REASON_FOR_ASSGN IS 'Identifies a reason why certificate has been assigned a given key usage attribute.';

COMMENT ON COLUMN VAL_KEY_USG_REASON_FOR_ASSGN.KEY_USAGE_REASON_FOR_ASSIGN IS 'Uniquely identifies and indicates reason for assignment.';

CREATE UNIQUE INDEX PK_REASON_FOR_ASSIGNMENT ON VAL_KEY_USG_REASON_FOR_ASSGN
(KEY_USAGE_REASON_FOR_ASSIGN   ASC);

ALTER TABLE VAL_KEY_USG_REASON_FOR_ASSGN
	ADD CONSTRAINT  PK_REASON_FOR_ASSIGNMENT PRIMARY KEY (KEY_USAGE_REASON_FOR_ASSIGN)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_REASON_FOR_ASSIGNMENT  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_LAYER2_NETWORK_COLL_TYPE
 ***********************************************/

CREATE TABLE VAL_LAYER2_NETWORK_COLL_TYPE
(
	LAYER2_NETWORK_COLLECTION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	MAX_NUM_MEMBERS      INTEGER NULL ,
	MAX_NUM_COLLECTIONS  INTEGER NULL ,
	CAN_HAVE_HIERARCHY   CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN VAL_LAYER2_NETWORK_COLL_TYPE.MAX_NUM_MEMBERS IS 'Maximum number of members in a given collection of this type
';

COMMENT ON COLUMN VAL_LAYER2_NETWORK_COLL_TYPE.CAN_HAVE_HIERARCHY IS 'Indicates if the collections can have other collections to make it hierarchical.';

COMMENT ON COLUMN VAL_LAYER2_NETWORK_COLL_TYPE.MAX_NUM_COLLECTIONS IS 'Maximum number of collections a given member can be a part of of this type.
';

CREATE UNIQUE INDEX PK_VAL_LAYER2_NETWORK_COLL_TYP ON VAL_LAYER2_NETWORK_COLL_TYPE
(LAYER2_NETWORK_COLLECTION_TYPE   ASC);

ALTER TABLE VAL_LAYER2_NETWORK_COLL_TYPE
	ADD CONSTRAINT  PK_VAL_LAYER2_NETWORK_COLL_TYP PRIMARY KEY (LAYER2_NETWORK_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_LAYER2_NETWORK_COLL_TYP  ENABLE  VALIDATE;

ALTER TABLE VAL_LAYER2_NETWORK_COLL_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_162668514 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_LAYER2_NETWORK_COLL_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_163455692 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_LAYER2_NETWORK_COLL_TYPE
	MODIFY CAN_HAVE_HIERARCHY CONSTRAINT  CHECK_YES_NO_2053022263 CHECK (CAN_HAVE_HIERARCHY IN ('Y', 'N'));

ALTER TABLE VAL_LAYER2_NETWORK_COLL_TYPE
	MODIFY CAN_HAVE_HIERARCHY DEFAULT 'Y';

/***********************************************
 * Table: VAL_LAYER3_NETWORK_COLL_TYPE
 ***********************************************/

CREATE TABLE VAL_LAYER3_NETWORK_COLL_TYPE
(
	LAYER3_NETWORK_COLLECTION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	MAX_NUM_MEMBERS      INTEGER NULL ,
	MAX_NUM_COLLECTIONS  INTEGER NULL ,
	CAN_HAVE_HIERARCHY   CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN VAL_LAYER3_NETWORK_COLL_TYPE.MAX_NUM_MEMBERS IS 'Maximum number of members in a given collection of this type
';

COMMENT ON COLUMN VAL_LAYER3_NETWORK_COLL_TYPE.CAN_HAVE_HIERARCHY IS 'Indicates if the collections can have other collections to make it hierarchical.';

COMMENT ON COLUMN VAL_LAYER3_NETWORK_COLL_TYPE.MAX_NUM_COLLECTIONS IS 'Maximum number of collections a given member can be a part of of this type.
';

CREATE UNIQUE INDEX PK_VAL_LAYER3_NETWORK_COLL_TYP ON VAL_LAYER3_NETWORK_COLL_TYPE
(LAYER3_NETWORK_COLLECTION_TYPE   ASC);

ALTER TABLE VAL_LAYER3_NETWORK_COLL_TYPE
	ADD CONSTRAINT  PK_VAL_LAYER3_NETWORK_COLL_TYP PRIMARY KEY (LAYER3_NETWORK_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_LAYER3_NETWORK_COLL_TYP  ENABLE  VALIDATE;

ALTER TABLE VAL_LAYER3_NETWORK_COLL_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_162734050 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_LAYER3_NETWORK_COLL_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_163521228 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_LAYER3_NETWORK_COLL_TYPE
	MODIFY CAN_HAVE_HIERARCHY CONSTRAINT  CHECK_YES_NO_L3NC_CHH CHECK (CAN_HAVE_HIERARCHY IN ('Y', 'N'));

ALTER TABLE VAL_LAYER3_NETWORK_COLL_TYPE
	MODIFY CAN_HAVE_HIERARCHY DEFAULT 'Y';

/***********************************************
 * Table: VAL_LOGICAL_PORT_TYPE
 ***********************************************/

CREATE TABLE VAL_LOGICAL_PORT_TYPE
(
	LOGICAL_PORT_TYPE    VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_LOGICAL_PORT_TYPE ON VAL_LOGICAL_PORT_TYPE
(LOGICAL_PORT_TYPE   ASC);

ALTER TABLE VAL_LOGICAL_PORT_TYPE
	ADD CONSTRAINT  PK_VAL_LOGICAL_PORT_TYPE PRIMARY KEY (LOGICAL_PORT_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_LOGICAL_PORT_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_LOGICAL_PORT_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1329820818 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_LOGICAL_PORT_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1330607996 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_LOGICAL_VOLUME_PROPERTY
 ***********************************************/

CREATE TABLE VAL_LOGICAL_VOLUME_PROPERTY
(
	LOGICAL_VOLUME_PROPERTY_NAME VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	FILESYSTEM_TYPE      VARCHAR2(50 BYTE) NOT NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_LOGICAL_VOLUME_PROPERTY ON VAL_LOGICAL_VOLUME_PROPERTY
(LOGICAL_VOLUME_PROPERTY_NAME   ASC,FILESYSTEM_TYPE   ASC);

ALTER TABLE VAL_LOGICAL_VOLUME_PROPERTY
	ADD CONSTRAINT  PK_VAL_LOGICAL_VOLUME_PROPERTY PRIMARY KEY (LOGICAL_VOLUME_PROPERTY_NAME,FILESYSTEM_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_LOGICAL_VOLUME_PROPERTY  ENABLE  VALIDATE;

ALTER TABLE VAL_LOGICAL_VOLUME_PROPERTY
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_857353748 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_LOGICAL_VOLUME_PROPERTY
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_856566570 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_VAL_LVOL_PROP_FSTYPE ON VAL_LOGICAL_VOLUME_PROPERTY
(FILESYSTEM_TYPE   ASC);

/***********************************************
 * Table: VAL_LOGICAL_VOLUME_PURPOSE
 ***********************************************/

CREATE TABLE VAL_LOGICAL_VOLUME_PURPOSE
(
	LOGICAL_VOLUME_PURPOSE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_LOGICAL_VOLUME_PURPOSE ON VAL_LOGICAL_VOLUME_PURPOSE
(LOGICAL_VOLUME_PURPOSE   ASC);

ALTER TABLE VAL_LOGICAL_VOLUME_PURPOSE
	ADD CONSTRAINT  PK_VAL_LOGICAL_VOLUME_PURPOSE PRIMARY KEY (LOGICAL_VOLUME_PURPOSE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_LOGICAL_VOLUME_PURPOSE  ENABLE  VALIDATE;

ALTER TABLE VAL_LOGICAL_VOLUME_PURPOSE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1246430795 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_LOGICAL_VOLUME_PURPOSE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1245643617 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_LOGICAL_VOLUME_TYPE
 ***********************************************/

CREATE TABLE VAL_LOGICAL_VOLUME_TYPE
(
	LOGICAL_VOLUME_TYPE  VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_LOGICAL_VOLUME_TYPE ON VAL_LOGICAL_VOLUME_TYPE
(LOGICAL_VOLUME_TYPE   ASC);

ALTER TABLE VAL_LOGICAL_VOLUME_TYPE
	ADD CONSTRAINT  PK_LOGICAL_VOLUME_TYPE PRIMARY KEY (LOGICAL_VOLUME_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_LOGICAL_VOLUME_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_LOGICAL_VOLUME_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1952809336 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_LOGICAL_VOLUME_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1952022158 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_NETBLOCK_COLLECTION_TYPE
 ***********************************************/

CREATE TABLE VAL_NETBLOCK_COLLECTION_TYPE
(
	NETBLOCK_COLLECTION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	MAX_NUM_MEMBERS      INTEGER NULL ,
	MAX_NUM_COLLECTIONS  INTEGER NULL ,
	CAN_HAVE_HIERARCHY   CHAR(1) NOT NULL ,
	NETBLOCK_SINGLE_ADDR_RESTRICT VARCHAR2(3) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN VAL_NETBLOCK_COLLECTION_TYPE.MAX_NUM_MEMBERS IS 'Maximum number of members in a given collection of this type
';

COMMENT ON COLUMN VAL_NETBLOCK_COLLECTION_TYPE.CAN_HAVE_HIERARCHY IS 'Indicates if the collections can have other collections to make it hierarchical.';

COMMENT ON COLUMN VAL_NETBLOCK_COLLECTION_TYPE.MAX_NUM_COLLECTIONS IS 'Maximum number of collections a given member can be a part of of this type.
';

CREATE UNIQUE INDEX PK_VAL_NETBLOCK_COLLECTION_TYP ON VAL_NETBLOCK_COLLECTION_TYPE
(NETBLOCK_COLLECTION_TYPE   ASC);

ALTER TABLE VAL_NETBLOCK_COLLECTION_TYPE
	ADD CONSTRAINT  PK_VAL_NETBLOCK_COLLECTION_TYP PRIMARY KEY (NETBLOCK_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_NETBLOCK_COLLECTION_TYP  ENABLE  VALIDATE;

ALTER TABLE VAL_NETBLOCK_COLLECTION_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_331275498 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_NETBLOCK_COLLECTION_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_332062676 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_NETBLOCK_COLLECTION_TYPE
	MODIFY CAN_HAVE_HIERARCHY CONSTRAINT  CHECK_YES_NO_NCT_CHH CHECK (CAN_HAVE_HIERARCHY IN ('Y', 'N'));

ALTER TABLE VAL_NETBLOCK_COLLECTION_TYPE
	MODIFY NETBLOCK_SINGLE_ADDR_RESTRICT CONSTRAINT  CHECK_ANY_YES_NO_nc_singaddr_r CHECK (NETBLOCK_SINGLE_ADDR_RESTRICT IN ('Y', 'N', 'ANY'));

ALTER TABLE VAL_NETBLOCK_COLLECTION_TYPE
	MODIFY CAN_HAVE_HIERARCHY DEFAULT 'Y';

ALTER TABLE VAL_NETBLOCK_COLLECTION_TYPE
	MODIFY NETBLOCK_SINGLE_ADDR_RESTRICT DEFAULT 'ANY';

/***********************************************
 * Table: VAL_NETBLOCK_STATUS
 ***********************************************/

CREATE TABLE VAL_NETBLOCK_STATUS
(
	NETBLOCK_STATUS      VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_NETBLOCK_STATUS ON VAL_NETBLOCK_STATUS
(NETBLOCK_STATUS   ASC);

ALTER TABLE VAL_NETBLOCK_STATUS
	ADD CONSTRAINT  PK_VAL_NETBLOCK_STATUS PRIMARY KEY (NETBLOCK_STATUS)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_NETBLOCK_STATUS  ENABLE  VALIDATE;

ALTER TABLE VAL_NETBLOCK_STATUS
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_NETBLK_STAT CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_NETBLOCK_STATUS
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_NETBLK_STAT CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_NETBLOCK_TYPE
 ***********************************************/

CREATE TABLE VAL_NETBLOCK_TYPE
(
	NETBLOCK_TYPE        VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DB_FORCED_HIERARCHY  CHAR(1) NOT NULL ,
	IS_VALIDATED_HIERARCHY CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_NETBLOCK_TYPE ON VAL_NETBLOCK_TYPE
(NETBLOCK_TYPE   ASC);

ALTER TABLE VAL_NETBLOCK_TYPE
	ADD CONSTRAINT  PK_VAL_NETBLOCK_TYPE PRIMARY KEY (NETBLOCK_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_NETBLOCK_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_NETBLOCK_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_66389325 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_NETBLOCK_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_67176503 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_NETBLOCK_TYPE
	MODIFY DB_FORCED_HIERARCHY CONSTRAINT  CHECK_YES_NO_1634617190 CHECK (DB_FORCED_HIERARCHY IN ('Y', 'N'));

ALTER TABLE VAL_NETBLOCK_TYPE
	MODIFY IS_VALIDATED_HIERARCHY CONSTRAINT  CHECK_YES_NO_1459364629 CHECK (IS_VALIDATED_HIERARCHY IN ('Y', 'N'));

/***********************************************
 * Table: VAL_NETWORK_INTERFACE_PURPOSE
 ***********************************************/

CREATE TABLE VAL_NETWORK_INTERFACE_PURPOSE
(
	NETWORK_INTERFACE_PURPOSE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_NETWORK_INT_PURPOSE ON VAL_NETWORK_INTERFACE_PURPOSE
(NETWORK_INTERFACE_PURPOSE   ASC);

ALTER TABLE VAL_NETWORK_INTERFACE_PURPOSE
	ADD CONSTRAINT  PK_VAL_NETWORK_INT_PURPOSE PRIMARY KEY (NETWORK_INTERFACE_PURPOSE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_NETWORK_INT_PURPOSE  ENABLE  VALIDATE;

ALTER TABLE VAL_NETWORK_INTERFACE_PURPOSE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_NETINT_PURP CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_NETWORK_INTERFACE_PURPOSE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_NETINT_PURP CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_NETWORK_INTERFACE_TYPE
 ***********************************************/

CREATE TABLE VAL_NETWORK_INTERFACE_TYPE
(
	NETWORK_INTERFACE_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_NETWORK_INT_TYPE ON VAL_NETWORK_INTERFACE_TYPE
(NETWORK_INTERFACE_TYPE   ASC);

ALTER TABLE VAL_NETWORK_INTERFACE_TYPE
	ADD CONSTRAINT  PK_NETWORK_INT_TYPE PRIMARY KEY (NETWORK_INTERFACE_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_NETWORK_INT_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_NETWORK_INTERFACE_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_NETINT_TYPE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_NETWORK_INTERFACE_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_NETINT_TYPE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_NETWORK_RANGE_TYPE
 ***********************************************/

CREATE TABLE VAL_NETWORK_RANGE_TYPE
(
	NETWORK_RANGE_TYPE   VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DNS_DOMAIN_REQUIRED  CHAR(10) NOT NULL ,
	DEFAULT_DNS_PREFIX   varchar2(50) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN VAL_NETWORK_RANGE_TYPE.DEFAULT_DNS_PREFIX IS 'default dns prefix for ranges of this type, can be overridden in network_range.   Required if dns_domain_required is set.';

COMMENT ON COLUMN VAL_NETWORK_RANGE_TYPE.DNS_DOMAIN_REQUIRED IS 'indicates how dns_domain_id is required on network_range (thus a NOT NULL constraint)';

CREATE UNIQUE INDEX PK_VAL_NETWORK_RANGE_TYPE ON VAL_NETWORK_RANGE_TYPE
(NETWORK_RANGE_TYPE   ASC);

ALTER TABLE VAL_NETWORK_RANGE_TYPE
	ADD CONSTRAINT  PK_VAL_NETWORK_RANGE_TYPE PRIMARY KEY (NETWORK_RANGE_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_NETWORK_RANGE_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_NETWORK_RANGE_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1752081270 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_NETWORK_RANGE_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1752868448 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_NETWORK_RANGE_TYPE
	MODIFY DNS_DOMAIN_REQUIRED CONSTRAINT  CHECK_PRP_PRMT_NRNGTY_DDOM CHECK (DNS_DOMAIN_REQUIRED IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_NETWORK_RANGE_TYPE
	MODIFY DNS_DOMAIN_REQUIRED DEFAULT 'REQUIRED';

/***********************************************
 * Table: VAL_NETWORK_SERVICE_TYPE
 ***********************************************/

CREATE TABLE VAL_NETWORK_SERVICE_TYPE
(
	NETWORK_SERVICE_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_NETWORK_SERVICE_TYPE ON VAL_NETWORK_SERVICE_TYPE
(NETWORK_SERVICE_TYPE   ASC);

ALTER TABLE VAL_NETWORK_SERVICE_TYPE
	ADD CONSTRAINT  PK_NETWORK_SERVICE_TYPE PRIMARY KEY (NETWORK_SERVICE_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_NETWORK_SERVICE_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_NETWORK_SERVICE_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_NETSVC_TYPE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_NETWORK_SERVICE_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_NETSVC_TYPE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_OPERATING_SYSTEM_FAMILY
 ***********************************************/

CREATE TABLE VAL_OPERATING_SYSTEM_FAMILY
(
	OPERATING_SYSTEM_FAMILY VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_OPERATING_SYSTEM_FAMILY ON VAL_OPERATING_SYSTEM_FAMILY
(OPERATING_SYSTEM_FAMILY   ASC);

ALTER TABLE VAL_OPERATING_SYSTEM_FAMILY
	ADD CONSTRAINT  PK_VAL_OPERATING_SYSTEM_FAMILY PRIMARY KEY (OPERATING_SYSTEM_FAMILY)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_OPERATING_SYSTEM_FAMILY  ENABLE  VALIDATE;

ALTER TABLE VAL_OPERATING_SYSTEM_FAMILY
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_840830011 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_OPERATING_SYSTEM_FAMILY
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_840042833 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_OS_SNAPSHOT_TYPE
 ***********************************************/

CREATE TABLE VAL_OS_SNAPSHOT_TYPE
(
	OPERATING_SYSTEM_SNAPSHOT_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_OS_SNAPSHOT_TYPE ON VAL_OS_SNAPSHOT_TYPE
(OPERATING_SYSTEM_SNAPSHOT_TYPE   ASC);

ALTER TABLE VAL_OS_SNAPSHOT_TYPE
	ADD CONSTRAINT  PK_VAL_OS_SNAPSHOT_TYPE PRIMARY KEY (OPERATING_SYSTEM_SNAPSHOT_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_OS_SNAPSHOT_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_OS_SNAPSHOT_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1781950562 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_OS_SNAPSHOT_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1782737740 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_OWNERSHIP_STATUS
 ***********************************************/

CREATE TABLE VAL_OWNERSHIP_STATUS
(
	OWNERSHIP_STATUS     VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_OWNERSHIP_STATUS ON VAL_OWNERSHIP_STATUS
(OWNERSHIP_STATUS   ASC);

ALTER TABLE VAL_OWNERSHIP_STATUS
	ADD CONSTRAINT  PK_VAL_OWNERSHIP_STATUS PRIMARY KEY (OWNERSHIP_STATUS)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_OWNERSHIP_STATUS  ENABLE  VALIDATE;

ALTER TABLE VAL_OWNERSHIP_STATUS
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_OWN_STATUS CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_OWNERSHIP_STATUS
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_OWN_STATUS CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_PACKAGE_RELATION_TYPE
 ***********************************************/

CREATE TABLE VAL_PACKAGE_RELATION_TYPE
(
	PACKAGE_RELATION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_PACKAGE_RELATION_TYPE ON VAL_PACKAGE_RELATION_TYPE
(PACKAGE_RELATION_TYPE   ASC);

ALTER TABLE VAL_PACKAGE_RELATION_TYPE
	ADD CONSTRAINT  PK_VAL_PACKAGE_RELATION_TYPE PRIMARY KEY (PACKAGE_RELATION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_PACKAGE_RELATION_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_PACKAGE_RELATION_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VPKGRELTYPE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PACKAGE_RELATION_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VPKGRELTYPE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_PASSWORD_TYPE
 ***********************************************/

CREATE TABLE VAL_PASSWORD_TYPE
(
	PASSWORD_TYPE        VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_PASSWORD_TYPE ON VAL_PASSWORD_TYPE
(PASSWORD_TYPE   ASC);

ALTER TABLE VAL_PASSWORD_TYPE
	ADD CONSTRAINT  PK_VAL_PASSWORD_TYPE PRIMARY KEY (PASSWORD_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_PASSWORD_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_PASSWORD_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_PASSTYPE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PASSWORD_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_PASSTYPE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_PERSON_COMPANY_ATTR_DTYPE
 ***********************************************/

CREATE TABLE VAL_PERSON_COMPANY_ATTR_DTYPE
(
	PERSON_COMPANY_ATTR_DATA_TYPE varchar2(50) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_PERS_COMP_ATTR_DATATY ON VAL_PERSON_COMPANY_ATTR_DTYPE
(PERSON_COMPANY_ATTR_DATA_TYPE   ASC);

ALTER TABLE VAL_PERSON_COMPANY_ATTR_DTYPE
	ADD CONSTRAINT  PK_VAL_PERS_COMP_ATTR_DATATY PRIMARY KEY (PERSON_COMPANY_ATTR_DATA_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_PERS_COMP_ATTR_DATATY  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_COMPANY_ATTR_DTYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_32444376 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_COMPANY_ATTR_DTYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_31657198 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_PERSON_COMPANY_ATTR_NAME
 ***********************************************/

CREATE TABLE VAL_PERSON_COMPANY_ATTR_NAME
(
	PERSON_COMPANY_ATTR_NAME varchar2(50) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PERSON_COMPANY_ATTR_DATA_TYPE varchar2(50) NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_PERSON_COMPANY_ATTR_NAM ON VAL_PERSON_COMPANY_ATTR_NAME
(PERSON_COMPANY_ATTR_NAME   ASC);

ALTER TABLE VAL_PERSON_COMPANY_ATTR_NAME
	ADD CONSTRAINT  PK_VAL_PERSON_COMPANY_ATTR_NAM PRIMARY KEY (PERSON_COMPANY_ATTR_NAME)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_PERSON_COMPANY_ATTR_NAM  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_COMPANY_ATTR_NAME
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_264836309 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_COMPANY_ATTR_NAME
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_265623487 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIFPRESCOMPATTR_NAME_DATATYP ON VAL_PERSON_COMPANY_ATTR_NAME
(PERSON_COMPANY_ATTR_DATA_TYPE   ASC);

/***********************************************
 * Table: VAL_PERSON_COMPANY_ATTR_VALUE
 ***********************************************/

CREATE TABLE VAL_PERSON_COMPANY_ATTR_VALUE
(
	PERSON_COMPANY_ATTR_NAME varchar2(50) NOT NULL ,
	PERSON_COMPANY_ATTR_VALUE varchar2(50) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_PERS_COMPANY_ATTR_VALUE ON VAL_PERSON_COMPANY_ATTR_VALUE
(PERSON_COMPANY_ATTR_NAME   ASC,PERSON_COMPANY_ATTR_VALUE   ASC);

ALTER TABLE VAL_PERSON_COMPANY_ATTR_VALUE
	ADD CONSTRAINT  PK_VAL_PERS_COMPANY_ATTR_VALUE PRIMARY KEY (PERSON_COMPANY_ATTR_NAME,PERSON_COMPANY_ATTR_VALUE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_PERS_COMPANY_ATTR_VALUE  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_COMPANY_ATTR_VALUE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_352062150 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_COMPANY_ATTR_VALUE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_351274972 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIFPERS_COMP_ATTR_VAL_NAME ON VAL_PERSON_COMPANY_ATTR_VALUE
(PERSON_COMPANY_ATTR_NAME   ASC);

/***********************************************
 * Table: VAL_PERSON_COMPANY_RELATION
 ***********************************************/

CREATE TABLE VAL_PERSON_COMPANY_RELATION
(
	PERSON_COMPANY_RELATION VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_PERSON_COMPANY_RELATION IS 'person''s relationship to the company (employee, consultant, vendor, etc)
';

CREATE UNIQUE INDEX PK_VAL_PERSON_COMPANY_RELATION ON VAL_PERSON_COMPANY_RELATION
(PERSON_COMPANY_RELATION   ASC);

ALTER TABLE VAL_PERSON_COMPANY_RELATION
	ADD CONSTRAINT  PK_VAL_PERSON_COMPANY_RELATION PRIMARY KEY (PERSON_COMPANY_RELATION)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_PERSON_COMPANY_RELATION  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_COMPANY_RELATION
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1210458380 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_COMPANY_RELATION
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1209671202 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_PERSON_CONTACT_LOC_TYPE
 ***********************************************/

CREATE TABLE VAL_PERSON_CONTACT_LOC_TYPE
(
	PERSON_CONTACT_LOCATION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_PERSON_CONTACT_LOC_TYPE IS 'The location type of the contact (personal, home, office)';

CREATE UNIQUE INDEX PK_VAL_PERSON_CONTACT_LOC_TYPE ON VAL_PERSON_CONTACT_LOC_TYPE
(PERSON_CONTACT_LOCATION_TYPE   ASC);

ALTER TABLE VAL_PERSON_CONTACT_LOC_TYPE
	ADD CONSTRAINT  PK_VAL_PERSON_CONTACT_LOC_TYPE PRIMARY KEY (PERSON_CONTACT_LOCATION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_PERSON_CONTACT_LOC_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_CONTACT_LOC_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1310141683 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_CONTACT_LOC_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1309354505 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_PERSON_CONTACT_TECHNOLOGY
 ***********************************************/

CREATE TABLE VAL_PERSON_CONTACT_TECHNOLOGY
(
	PERSON_CONTACT_TECHNOLOGY VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PERSON_CONTACT_TYPE  VARCHAR2(50 BYTE) NOT NULL ,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_PERSON_CONTACT_TECHNOLOGY IS 'The location type of the contact (personal, home, office)';

COMMENT ON COLUMN VAL_PERSON_CONTACT_TECHNOLOGY.PERSON_CONTACT_TECHNOLOGY IS 'technology sub-type or protocol(phone,mobile,fax,voicemail,conference)';

CREATE UNIQUE INDEX PK_VAL_PERSON_CONTACT_TECHNOLO ON VAL_PERSON_CONTACT_TECHNOLOGY
(PERSON_CONTACT_TECHNOLOGY   ASC,PERSON_CONTACT_TYPE   ASC);

ALTER TABLE VAL_PERSON_CONTACT_TECHNOLOGY
	ADD CONSTRAINT  PK_VAL_PERSON_CONTACT_TECHNOLO PRIMARY KEY (PERSON_CONTACT_TECHNOLOGY,PERSON_CONTACT_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_PERSON_CONTACT_TECHNOLO  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_CONTACT_TECHNOLOGY
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_520034003 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_CONTACT_TECHNOLOGY
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_519246825 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF1VAL_PERSON_CONTACT_TECHNOL ON VAL_PERSON_CONTACT_TECHNOLOGY
(PERSON_CONTACT_TYPE   ASC);

/***********************************************
 * Table: VAL_PERSON_CONTACT_TYPE
 ***********************************************/

CREATE TABLE VAL_PERSON_CONTACT_TYPE
(
	PERSON_CONTACT_TYPE  VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_PERSON_CONTACT_TYPE IS 'Contact Type -- chat, phone, etc.  This essentially details if phone or account is used as the identifier and should be triggered.';

CREATE UNIQUE INDEX PK_VAL_PHONE_NUMBER_TYPE ON VAL_PERSON_CONTACT_TYPE
(PERSON_CONTACT_TYPE   ASC);

ALTER TABLE VAL_PERSON_CONTACT_TYPE
	ADD CONSTRAINT  PK_VAL_PHONE_NUMBER_TYPE PRIMARY KEY (PERSON_CONTACT_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_PHONE_NUMBER_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_CONTACT_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_PHNUM_TYPE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_CONTACT_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_PHNUM_TYPE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_PERSON_IMAGE_USAGE
 ***********************************************/

CREATE TABLE VAL_PERSON_IMAGE_USAGE
(
	PERSON_IMAGE_USAGE   varchar2(50) NOT NULL ,
	IS_MULTIVALUE        CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_PERSON_IMAGE_USAGE ON VAL_PERSON_IMAGE_USAGE
(PERSON_IMAGE_USAGE   ASC);

ALTER TABLE VAL_PERSON_IMAGE_USAGE
	ADD CONSTRAINT  PK_VAL_PERSON_IMAGE_USAGE PRIMARY KEY (PERSON_IMAGE_USAGE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_PERSON_IMAGE_USAGE  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_IMAGE_USAGE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1916449128 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_IMAGE_USAGE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1917236306 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_IMAGE_USAGE
	MODIFY IS_MULTIVALUE CONSTRAINT  CHECK_YES_NO_1173391786 CHECK (IS_MULTIVALUE IN ('Y', 'N'));

/***********************************************
 * Table: VAL_PERSON_LOCATION_TYPE
 ***********************************************/

CREATE TABLE VAL_PERSON_LOCATION_TYPE
(
	PERSON_LOCATION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_PERSON_LOCATION_TYPE ON VAL_PERSON_LOCATION_TYPE
(PERSON_LOCATION_TYPE   ASC);

ALTER TABLE VAL_PERSON_LOCATION_TYPE
	ADD CONSTRAINT  PK_VAL_USER_LOCATION_TYPE PRIMARY KEY (PERSON_LOCATION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_PERSON_LOCATION_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_LOCATION_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VUSRLOCTYPE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_LOCATION_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VUSRLOCTYPE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_PERSON_STATUS
 ***********************************************/

CREATE TABLE VAL_PERSON_STATUS
(
	PERSON_STATUS        VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	IS_DISABLED          CHAR(1) NOT NULL ,
	IS_ENABLED           CHAR(1) NOT NULL ,
	PROPAGATE_FROM_PERSON CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN VAL_PERSON_STATUS.IS_DISABLED IS 'This column is being deprecated.  it is always set to the opposite of IS_ENABLED (enforced by trigger).';

CREATE UNIQUE INDEX PK_VAL_PERSON_STATUS ON VAL_PERSON_STATUS
(PERSON_STATUS   ASC);

ALTER TABLE VAL_PERSON_STATUS
	ADD CONSTRAINT  PK_VAL_PERSON_STATUS PRIMARY KEY (PERSON_STATUS)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_PERSON_STATUS  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_STATUS
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VACCTSTATUS CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_STATUS
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VACCTSTATUS CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PERSON_STATUS
	MODIFY PROPAGATE_FROM_PERSON CONSTRAINT  CHECK_YES_NO_856940377 CHECK (PROPAGATE_FROM_PERSON IN ('Y', 'N'));

ALTER TABLE VAL_PERSON_STATUS
	MODIFY IS_DISABLED CONSTRAINT  CHECK_YES_NO_100412184 CHECK (IS_DISABLED IN ('Y', 'N'));

ALTER TABLE VAL_PERSON_STATUS
	MODIFY IS_ENABLED CONSTRAINT  CHECK_YES_NO_VPERS_STAT_ENABLE CHECK (IS_ENABLED IN ('Y', 'N'));

/***********************************************
 * Table: VAL_PHYSICAL_ADDRESS_TYPE
 ***********************************************/

CREATE TABLE VAL_PHYSICAL_ADDRESS_TYPE
(
	PHYSICAL_ADDRESS_TYPE varchar2(50) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_PHYSICAL_ADDRESS_TYPE ON VAL_PHYSICAL_ADDRESS_TYPE
(PHYSICAL_ADDRESS_TYPE   ASC);

ALTER TABLE VAL_PHYSICAL_ADDRESS_TYPE
	ADD CONSTRAINT  PK_VAL_PHYSICAL_ADDRESS_TYPE PRIMARY KEY (PHYSICAL_ADDRESS_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_PHYSICAL_ADDRESS_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_PHYSICAL_ADDRESS_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_2121289987 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PHYSICAL_ADDRESS_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_2120502809 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_PHYSICALISH_VOLUME_TYPE
 ***********************************************/

CREATE TABLE VAL_PHYSICALISH_VOLUME_TYPE
(
	PHYSICALISH_VOLUME_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_PHYSICALISH_VOLUME_TYPE ON VAL_PHYSICALISH_VOLUME_TYPE
(PHYSICALISH_VOLUME_TYPE   ASC);

ALTER TABLE VAL_PHYSICALISH_VOLUME_TYPE
	ADD CONSTRAINT  PK_VAL_PHYSICALISH_VOLUME_TYPE PRIMARY KEY (PHYSICALISH_VOLUME_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_PHYSICALISH_VOLUME_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_PHYSICALISH_VOLUME_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_504509225 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PHYSICALISH_VOLUME_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_503722047 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_PROCESSOR_ARCHITECTURE
 ***********************************************/

CREATE TABLE VAL_PROCESSOR_ARCHITECTURE
(
	PROCESSOR_ARCHITECTURE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	KERNEL_BITS          NUMBER CONSTRAINT SYS_C004774 NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_PROCESSOR_ARCHITECTURE ON VAL_PROCESSOR_ARCHITECTURE
(PROCESSOR_ARCHITECTURE   ASC);

ALTER TABLE VAL_PROCESSOR_ARCHITECTURE
	ADD CONSTRAINT  PK_VAL_PROCESSOR_ARCHITECTURE PRIMARY KEY (PROCESSOR_ARCHITECTURE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_PROCESSOR_ARCHITECTURE  ENABLE  VALIDATE;

ALTER TABLE VAL_PROCESSOR_ARCHITECTURE
	MODIFY KERNEL_BITS CONSTRAINT  CKC_KERNEL_BITS_VAL_PROC CHECK (KERNEL_BITS in (0,32,64))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PROCESSOR_ARCHITECTURE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VPROCARCH CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PROCESSOR_ARCHITECTURE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VPROCARCH CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_PRODUCTION_STATE
 ***********************************************/

CREATE TABLE VAL_PRODUCTION_STATE
(
	PRODUCTION_STATE     VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_PRODUCTION_STATE ON VAL_PRODUCTION_STATE
(PRODUCTION_STATE   ASC);

ALTER TABLE VAL_PRODUCTION_STATE
	ADD CONSTRAINT  PK_VAL_PRODUCTION_STATE PRIMARY KEY (PRODUCTION_STATE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_PRODUCTION_STATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PRODUCTION_STATE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_2032036669 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PRODUCTION_STATE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_2032823847 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_PROPERTY
 ***********************************************/

CREATE TABLE VAL_PROPERTY
(
	PROPERTY_NAME        VARCHAR2(255) NOT NULL ,
	PROPERTY_TYPE        VARCHAR2(50) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	ACCOUNT_COLLECTION_TYPE VARCHAR2(50 BYTE) NULL ,
	COMPANY_COLLECTION_TYPE VARCHAR2(50 BYTE) NULL ,
	DEVICE_COLLECTION_TYPE VARCHAR2(50 BYTE) NULL ,
	DNS_DOMAIN_COLLECTION_TYPE VARCHAR2(50 BYTE) NULL ,
	LAYER2_NETWORK_COLLECTION_TYPE VARCHAR2(50 BYTE) NULL ,
	LAYER3_NETWORK_COLLECTION_TYPE VARCHAR2(50 BYTE) NULL ,
	NETBLOCK_COLLECTION_TYPE VARCHAR2(50 BYTE) NULL ,
	PROPERTY_COLLECTION_TYPE VARCHAR2(50 BYTE) NULL ,
	SERVICE_ENV_COLLECTION_TYPE VARCHAR2(50 BYTE) NULL ,
	IS_MULTIVALUE        CHAR(1) NOT NULL ,
	PROP_VAL_ACCT_COLL_TYPE_RSTRCT VARCHAR2(50 BYTE) NULL ,
	PROP_VAL_DEV_COLL_TYPE_RSTRCT VARCHAR2(50 BYTE) NULL ,
	PROP_VAL_NBLK_COLL_TYPE_RSTRCT VARCHAR2(50 BYTE) NULL ,
	PROPERTY_DATA_TYPE   VARCHAR2(50) NOT NULL ,
	PERMIT_ACCOUNT_COLLECTION_ID CHAR(10) NOT NULL ,
	PERMIT_ACCOUNT_ID    CHAR(10) NOT NULL ,
	PERMIT_ACCOUNT_REALM_ID CHAR(10) NOT NULL ,
	PERMIT_COMPANY_ID    CHAR(10) NOT NULL ,
	PERMIT_COMPANY_COLLECTION_ID CHAR(10) NOT NULL ,
	PERMIT_DEVICE_COLLECTION_ID CHAR(10) NOT NULL ,
	PERMIT_DNS_DOMAIN_ID CHAR(10) NOT NULL ,
	PERMIT_DNS_DOMAIN_COLL_ID CHAR(10) NOT NULL ,
	PERMIT_LAYER2_NETWORK_COLL_ID CHAR(10) NOT NULL ,
	PERMIT_LAYER3_NETWORK_COLL_ID CHAR(10) NOT NULL ,
	PERMIT_NETBLOCK_COLLECTION_ID CHAR(10) NOT NULL ,
	PERMIT_OPERATING_SYSTEM_ID CHAR(10) NOT NULL ,
	PERMIT_OS_SNAPSHOT_ID CHAR(10) NOT NULL ,
	PERMIT_PERSON_ID     CHAR(10) NOT NULL ,
	PERMIT_PROPERTY_COLLECTION_ID CHAR(10) NOT NULL ,
	PERMIT_SERVICE_ENV_COLLECTION CHAR(10) NOT NULL ,
	PERMIT_SITE_CODE     CHAR(10) NOT NULL ,
	PERMIT_PROPERTY_RANK CHAR(10) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_PROPERTY IS 'valid values and attributes for (name,type) pairs in the property table.  This defines how triggers enforce aspects of the property table';

COMMENT ON COLUMN VAL_PROPERTY.PROPERTY_NAME IS 'property name for validation purposes';

COMMENT ON COLUMN VAL_PROPERTY.PROPERTY_TYPE IS 'property type for validation purposes';

COMMENT ON COLUMN VAL_PROPERTY.IS_MULTIVALUE IS 'If N, acts like an alternate key on property.(lhs,property_name,property_type)';

COMMENT ON COLUMN VAL_PROPERTY.PROPERTY_DATA_TYPE IS 'which, if any, of the property_table_* columns should be used for this value.   May turn more complex enforcement via trigger';

COMMENT ON COLUMN VAL_PROPERTY.PERMIT_COMPANY_ID IS 'defines permissibility/requirement of company_id on LHS of property.  *NOTE*  THIS COLUMN WILL BE REMOVED IN >0.65';

COMMENT ON COLUMN VAL_PROPERTY.PERMIT_DEVICE_COLLECTION_ID IS 'defines permissibility/requirement of device_collection_id on LHS of property';

COMMENT ON COLUMN VAL_PROPERTY.PERMIT_DNS_DOMAIN_ID IS 'defines permissibility/requirement of dns_domain_id on LHS of property. *NOTE*  THIS COLUMN WILL BE REMOVED IN >0.65';

COMMENT ON COLUMN VAL_PROPERTY.PERMIT_ACCOUNT_ID IS 'defines permissibility/requirement of account_idon LHS of property';

COMMENT ON COLUMN VAL_PROPERTY.PERMIT_ACCOUNT_COLLECTION_ID IS 'defines permissibility/requirement of account_collection_id on LHS of property';

COMMENT ON COLUMN VAL_PROPERTY.PERMIT_SITE_CODE IS 'defines permissibility/requirement of site_code on LHS of property';

COMMENT ON COLUMN VAL_PROPERTY.PROP_VAL_ACCT_COLL_TYPE_RSTRCT IS 'if property_value is account_collection_Id, this limits the account_collection_types that can be used in that column.';

COMMENT ON COLUMN VAL_PROPERTY.PERMIT_SERVICE_ENV_COLLECTION IS 'defines permissibility/requirement of service_env_collection_id on LHS of property';

COMMENT ON COLUMN VAL_PROPERTY.PERMIT_OPERATING_SYSTEM_ID IS 'defines permissibility/requirement of operating_system_id on LHS of property';

COMMENT ON COLUMN VAL_PROPERTY.PERMIT_PERSON_ID IS 'defines permissibility/requirement of person_id on LHS of property';

COMMENT ON COLUMN VAL_PROPERTY.PROP_VAL_NBLK_COLL_TYPE_RSTRCT IS 'if property_value isnetblockt_collection_Id, this limits the netblockt_collection_types that can be used in that column.';

COMMENT ON COLUMN VAL_PROPERTY.PERMIT_NETBLOCK_COLLECTION_ID IS 'defines permissibility/requirement of netblock_collection_id on LHS of property';

COMMENT ON COLUMN VAL_PROPERTY.PERMIT_PROPERTY_RANK IS 'defines permissibility of property_rank, and if it should be part of the "lhs" of the given property';

COMMENT ON COLUMN VAL_PROPERTY.PERMIT_ACCOUNT_REALM_ID IS 'defines permissibility/requirement of account_realm_id on LHS of property';

COMMENT ON COLUMN VAL_PROPERTY.PERMIT_LAYER2_NETWORK_COLL_ID IS 'defines permissibility/requirement of layer2_network_id on LHS of property';

COMMENT ON COLUMN VAL_PROPERTY.PERMIT_LAYER3_NETWORK_COLL_ID IS 'defines permissibility/requirement of layer3_network_id on LHS of property';

COMMENT ON COLUMN VAL_PROPERTY.PERMIT_PROPERTY_COLLECTION_ID IS 'defines permissibility/requirement of property_collection_id on LHS of property';

COMMENT ON COLUMN VAL_PROPERTY.PERMIT_OS_SNAPSHOT_ID IS 'defines permissibility/requirement of operating_system_snapshot_id on LHS of property';

COMMENT ON COLUMN VAL_PROPERTY.PROP_VAL_DEV_COLL_TYPE_RSTRCT IS 'if property_value is devicet_collection_Id, this limits the devicet_collection_types that can be used in that column.';

COMMENT ON COLUMN VAL_PROPERTY.ACCOUNT_COLLECTION_TYPE IS 'type restriction of the account_collection_id on LHS';

COMMENT ON COLUMN VAL_PROPERTY.COMPANY_COLLECTION_TYPE IS 'type restriction of company_collection_id on LHS';

COMMENT ON COLUMN VAL_PROPERTY.DEVICE_COLLECTION_TYPE IS 'type restriction of device_collection_id on LHS';

COMMENT ON COLUMN VAL_PROPERTY.DNS_DOMAIN_COLLECTION_TYPE IS 'type restriction of dns_domain_collection_id restriction on LHS';

COMMENT ON COLUMN VAL_PROPERTY.NETBLOCK_COLLECTION_TYPE IS 'type restriction of netblock_collection_id on LHS';

COMMENT ON COLUMN VAL_PROPERTY.PROPERTY_COLLECTION_TYPE IS 'type restriction of property_collection_id on LHS';

COMMENT ON COLUMN VAL_PROPERTY.SERVICE_ENV_COLLECTION_TYPE IS 'type restriction of service_enviornment_collection_id on LHS';

COMMENT ON COLUMN VAL_PROPERTY.PERMIT_COMPANY_COLLECTION_ID IS 'defines permissibility/requirement of company_collection_id on LHS of property';

COMMENT ON COLUMN VAL_PROPERTY.PERMIT_DNS_DOMAIN_COLL_ID IS 'defines permissibility/requirement of dns_domain_collection_id on LHS of property';

CREATE UNIQUE INDEX PK_VAL_PROPERTY ON VAL_PROPERTY
(PROPERTY_NAME   ASC,PROPERTY_TYPE   ASC);

ALTER TABLE VAL_PROPERTY
	ADD CONSTRAINT  PK_VAL_PROPERTY PRIMARY KEY (PROPERTY_NAME,PROPERTY_TYPE);

ALTER TABLE VAL_PROPERTY
	MODIFY IS_MULTIVALUE CONSTRAINT  CKC_VAL_PROP_ISMULTI CHECK (IS_MULTIVALUE IN ('Y', 'N'));

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_COMPANY_ID CONSTRAINT  CKC_VAL_PROP_CMP_ID CHECK (PERMIT_COMPANY_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_DEVICE_COLLECTION_ID CONSTRAINT  CKC_VAL_PROP_PDEVCOL_ID CHECK (PERMIT_DEVICE_COLLECTION_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_DNS_DOMAIN_ID CONSTRAINT  CKC_VAL_PROP_PDNSDOMID CHECK (PERMIT_DNS_DOMAIN_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_ACCOUNT_ID CONSTRAINT  CKC_VAL_PROP_PACCT_ID CHECK (PERMIT_ACCOUNT_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_ACCOUNT_COLLECTION_ID CONSTRAINT  CKC_VAL_PROP_PUCLS_ID CHECK (PERMIT_ACCOUNT_COLLECTION_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_SITE_CODE CONSTRAINT  CKC_VAL_PROP_SITEC CHECK (PERMIT_SITE_CODE IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_SERVICE_ENV_COLLECTION CONSTRAINT  CKC_VAL_PROP_PRODSTATE CHECK (PERMIT_SERVICE_ENV_COLLECTION IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_OPERATING_SYSTEM_ID CONSTRAINT  CKC_VAL_PROP_OSID CHECK (PERMIT_OPERATING_SYSTEM_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_PERSON_ID CONSTRAINT  CHECK_PRP_PRMT_606225804 CHECK (PERMIT_PERSON_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_NETBLOCK_COLLECTION_ID CONSTRAINT  CHECK_PRP_PRMT_354296970 CHECK (PERMIT_NETBLOCK_COLLECTION_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_PROPERTY_RANK CONSTRAINT  CHECK_PRP_PRMT_2139007167 CHECK (PERMIT_PROPERTY_RANK IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_ACCOUNT_REALM_ID CONSTRAINT  CHECK_PRP_PRMT_2016888554 CHECK (PERMIT_ACCOUNT_REALM_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_LAYER2_NETWORK_COLL_ID CONSTRAINT  CHECK_PRP_PRMT_185689986 CHECK (PERMIT_LAYER2_NETWORK_COLL_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_LAYER3_NETWORK_COLL_ID CONSTRAINT  CHECK_PRP_PRMT_185755522 CHECK (PERMIT_LAYER3_NETWORK_COLL_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_PROPERTY_COLLECTION_ID CONSTRAINT  CHECK_PRP_PRMT_271462566 CHECK (PERMIT_PROPERTY_COLLECTION_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_OS_SNAPSHOT_ID CONSTRAINT  CHECK_PRP_PRMT_1804972034 CHECK (PERMIT_OS_SNAPSHOT_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_COMPANY_COLLECTION_ID CONSTRAINT  CHECK_PRP_PRMT_366948481 CHECK (PERMIT_COMPANY_COLLECTION_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_DNS_DOMAIN_COLL_ID CONSTRAINT  CHECK_PRP_PRMT_1494616001 CHECK (PERMIT_DNS_DOMAIN_COLL_ID IN ('REQUIRED', 'PROHIBITED', 'ALLOWED'));

ALTER TABLE VAL_PROPERTY
	MODIFY IS_MULTIVALUE DEFAULT 'N';

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_COMPANY_ID DEFAULT 'PROHIBITED';

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_DEVICE_COLLECTION_ID DEFAULT 'PROHIBITED';

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_DNS_DOMAIN_ID DEFAULT 'PROHIBITED';

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_ACCOUNT_ID DEFAULT 'PROHIBITED';

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_ACCOUNT_COLLECTION_ID DEFAULT 'PROHIBITED';

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_SITE_CODE DEFAULT 'PROHIBITED';

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_SERVICE_ENV_COLLECTION DEFAULT 'PROHIBITED';

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_OPERATING_SYSTEM_ID DEFAULT 'PROHIBITED';

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_PERSON_ID DEFAULT 'PROHIBITED';

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_NETBLOCK_COLLECTION_ID DEFAULT 'PROHIBITED';

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_PROPERTY_RANK DEFAULT 'PROHIBITED';

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_ACCOUNT_REALM_ID DEFAULT 'PROHIBITED';

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_LAYER2_NETWORK_COLL_ID DEFAULT 'PROHIBITED';

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_LAYER3_NETWORK_COLL_ID DEFAULT 'PROHIBITED';

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_PROPERTY_COLLECTION_ID DEFAULT 'PROHIBITED';

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_OS_SNAPSHOT_ID DEFAULT 'PROHIBITED';

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_COMPANY_COLLECTION_ID DEFAULT 'PROHIBITED';

ALTER TABLE VAL_PROPERTY
	MODIFY PERMIT_DNS_DOMAIN_COLL_ID DEFAULT 'PROHIBITED';

CREATE  INDEX XIF3VAL_PROPERTY ON VAL_PROPERTY
(PROP_VAL_ACCT_COLL_TYPE_RSTRCT   ASC);

CREATE  INDEX XIF4VAL_PROPERTY ON VAL_PROPERTY
(PROP_VAL_NBLK_COLL_TYPE_RSTRCT   ASC);

CREATE  INDEX XIF5VAL_PROPERTY ON VAL_PROPERTY
(PROP_VAL_DEV_COLL_TYPE_RSTRCT   ASC);

CREATE  INDEX XIF6VAL_PROPERTY ON VAL_PROPERTY
(ACCOUNT_COLLECTION_TYPE   ASC);

CREATE  INDEX XIF7VAL_PROPERTY ON VAL_PROPERTY
(COMPANY_COLLECTION_TYPE   ASC);

CREATE  INDEX XIF8VAL_PROPERTY ON VAL_PROPERTY
(DEVICE_COLLECTION_TYPE   ASC);

CREATE  INDEX XIF9VAL_PROPERTY ON VAL_PROPERTY
(DNS_DOMAIN_COLLECTION_TYPE   ASC);

CREATE  INDEX XIF10VAL_PROPERTY ON VAL_PROPERTY
(NETBLOCK_COLLECTION_TYPE   ASC);

CREATE  INDEX XIF11VAL_PROPERTY ON VAL_PROPERTY
(PROPERTY_COLLECTION_TYPE   ASC);

CREATE  INDEX XIF12VAL_PROPERTY ON VAL_PROPERTY
(SERVICE_ENV_COLLECTION_TYPE   ASC);

CREATE  INDEX XIF13VAL_PROPERTY ON VAL_PROPERTY
(LAYER3_NETWORK_COLLECTION_TYPE   ASC);

CREATE  INDEX XIF14VAL_PROPERTY ON VAL_PROPERTY
(LAYER2_NETWORK_COLLECTION_TYPE   ASC);

CREATE  INDEX XIF1VAL_PROPERTY ON VAL_PROPERTY
(PROPERTY_DATA_TYPE   ASC);

CREATE  INDEX XIF2VAL_PROPERTY ON VAL_PROPERTY
(PROPERTY_TYPE   ASC);

/***********************************************
 * Table: VAL_PROPERTY_COLLECTION_TYPE
 ***********************************************/

CREATE TABLE VAL_PROPERTY_COLLECTION_TYPE
(
	PROPERTY_COLLECTION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	MAX_NUM_MEMBERS      INTEGER NULL ,
	MAX_NUM_COLLECTIONS  INTEGER NULL ,
	CAN_HAVE_HIERARCHY   CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN VAL_PROPERTY_COLLECTION_TYPE.MAX_NUM_MEMBERS IS 'Maximum number of members in a given collection of this type
';

COMMENT ON COLUMN VAL_PROPERTY_COLLECTION_TYPE.CAN_HAVE_HIERARCHY IS 'Indicates if the collections can have other collections to make it hierarchical.';

COMMENT ON COLUMN VAL_PROPERTY_COLLECTION_TYPE.MAX_NUM_COLLECTIONS IS 'Maximum number of collections a given member can be a part of of this type.
';

CREATE UNIQUE INDEX PK_PROPERTY_COLLCTION_TYPE ON VAL_PROPERTY_COLLECTION_TYPE
(PROPERTY_COLLECTION_TYPE   ASC);

ALTER TABLE VAL_PROPERTY_COLLECTION_TYPE
	ADD CONSTRAINT  PK_PROPERTY_COLLCTION_TYPE PRIMARY KEY (PROPERTY_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_PROPERTY_COLLCTION_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_PROPERTY_COLLECTION_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_248441094 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PROPERTY_COLLECTION_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_249228272 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_PROPERTY_COLLECTION_TYPE
	MODIFY CAN_HAVE_HIERARCHY CONSTRAINT  CHECK_YES_NO_1132635988 CHECK (CAN_HAVE_HIERARCHY IN ('Y', 'N'));

ALTER TABLE VAL_PROPERTY_COLLECTION_TYPE
	MODIFY CAN_HAVE_HIERARCHY DEFAULT 'Y';

/***********************************************
 * Table: VAL_PROPERTY_DATA_TYPE
 ***********************************************/

CREATE TABLE VAL_PROPERTY_DATA_TYPE
(
	PROPERTY_DATA_TYPE   VARCHAR2(50) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_PROPERTY_DATA_TYPE IS 'valid data types for property (name,type) pairs.  This maps to property.property_value_* columns.';

CREATE UNIQUE INDEX PK_VAL_PROPERTY_DATA_TYPE ON VAL_PROPERTY_DATA_TYPE
(PROPERTY_DATA_TYPE   ASC);

ALTER TABLE VAL_PROPERTY_DATA_TYPE
	ADD CONSTRAINT  PK_VAL_PROPERTY_DATA_TYPE PRIMARY KEY (PROPERTY_DATA_TYPE);

/***********************************************
 * Table: VAL_PROPERTY_TYPE
 ***********************************************/

CREATE TABLE VAL_PROPERTY_TYPE
(
	PROPERTY_TYPE        VARCHAR2(50) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	PROP_VAL_ACCT_COLL_TYPE_RSTRCT VARCHAR2(50 BYTE) NULL ,
	IS_MULTIVALUE        CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_PROPERTY_TYPE IS 'validation table for property types';

COMMENT ON COLUMN VAL_PROPERTY_TYPE.IS_MULTIVALUE IS 'If N, this acts like an alternate key on lhs,property_type';

CREATE UNIQUE INDEX PK_VAL_PROPERTY_TYPE ON VAL_PROPERTY_TYPE
(PROPERTY_TYPE   ASC);

ALTER TABLE VAL_PROPERTY_TYPE
	ADD CONSTRAINT  PK_VAL_PROPERTY_TYPE PRIMARY KEY (PROPERTY_TYPE);

ALTER TABLE VAL_PROPERTY_TYPE
	MODIFY IS_MULTIVALUE CONSTRAINT  CKC_VAL_PROP_TYP_ISMULTI CHECK (IS_MULTIVALUE IN ('Y', 'N'));

ALTER TABLE VAL_PROPERTY_TYPE
	MODIFY IS_MULTIVALUE DEFAULT 'Y';

CREATE  INDEX XIF1VAL_PROPERTY_TYPE ON VAL_PROPERTY_TYPE
(PROP_VAL_ACCT_COLL_TYPE_RSTRCT   ASC);

CREATE TABLE VAL_PROPERTY_VALUE
(
	PROPERTY_NAME        VARCHAR2(255) NOT NULL ,
	PROPERTY_TYPE        VARCHAR2(50) NOT NULL ,
	VALID_PROPERTY_VALUE VARCHAR2(255) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(255) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(255) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_PROPERTY_VALUE IS 'Used to simulate foreign key enforcement on property.property_value .  If a property_name,property_type is set to type list, the value must be in this table.';

COMMENT ON COLUMN VAL_PROPERTY_VALUE.PROPERTY_NAME IS 'property name for validation purposes';

COMMENT ON COLUMN VAL_PROPERTY_VALUE.PROPERTY_TYPE IS 'property type for validation purposes';

COMMENT ON COLUMN VAL_PROPERTY_VALUE.VALID_PROPERTY_VALUE IS 'if applicatable, servves as a fk for valid property_values.  This depends on val_property.property_data_type being set to list.';

CREATE UNIQUE INDEX PK_VAL_PROPERTY_VAUE ON VAL_PROPERTY_VALUE
(PROPERTY_NAME   ASC,PROPERTY_TYPE   ASC,VALID_PROPERTY_VALUE   ASC);

ALTER TABLE VAL_PROPERTY_VALUE
	ADD CONSTRAINT  PK_VAL_PROPERTY_VAUE PRIMARY KEY (PROPERTY_NAME,PROPERTY_TYPE,VALID_PROPERTY_VALUE);

CREATE  INDEX XIFVALPROVAL_NAMTYP ON VAL_PROPERTY_VALUE
(PROPERTY_NAME   ASC,PROPERTY_TYPE   ASC);

/***********************************************
 * Table: VAL_RACK_TYPE
 ***********************************************/

CREATE TABLE VAL_RACK_TYPE
(
	RACK_TYPE            VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_RACK_TYPE ON VAL_RACK_TYPE
(RACK_TYPE   ASC);

ALTER TABLE VAL_RACK_TYPE
	ADD CONSTRAINT  PK_VAL_RACK_TYPE PRIMARY KEY (RACK_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_RACK_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_RACK_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1331641596 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_RACK_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1330854418 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_RAID_TYPE
 ***********************************************/

CREATE TABLE VAL_RAID_TYPE
(
	RAID_TYPE            VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	PRIMARY_RAID_LEVEL   INTEGER NULL ,
	SECONDARY_RAID_LEVEL INTEGER NULL ,
	RAID_LEVEL_QUALIFIER INTEGER NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN VAL_RAID_TYPE.PRIMARY_RAID_LEVEL IS 'Common RAID Disk Data Format Specification primary raid level.';

COMMENT ON COLUMN VAL_RAID_TYPE.SECONDARY_RAID_LEVEL IS 'Common RAID Disk Data Format Specification secondary raid level.';

COMMENT ON COLUMN VAL_RAID_TYPE.RAID_LEVEL_QUALIFIER IS 'Common RAID Disk Data Format Specification''s integer number that describes the raid.  Arguably, this should be split out to distinct fields and constructed, and maybe one day it will be and this field will go away.';

CREATE UNIQUE INDEX PK_RAID_TYPE ON VAL_RAID_TYPE
(RAID_TYPE   ASC);

ALTER TABLE VAL_RAID_TYPE
	ADD CONSTRAINT  PK_RAID_TYPE PRIMARY KEY (RAID_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_RAID_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_RAID_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1331250172 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_RAID_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1330462994 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_SERVICE_ENV_COLL_TYPE
 ***********************************************/

CREATE TABLE VAL_SERVICE_ENV_COLL_TYPE
(
	SERVICE_ENV_COLLECTION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	MAX_NUM_MEMBERS      INTEGER NULL ,
	MAX_NUM_COLLECTIONS  INTEGER NULL ,
	CAN_HAVE_HIERARCHY   CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_SERVICE_ENV_COLL_TYPE ON VAL_SERVICE_ENV_COLL_TYPE
(SERVICE_ENV_COLLECTION_TYPE   ASC);

ALTER TABLE VAL_SERVICE_ENV_COLL_TYPE
	ADD CONSTRAINT  PK_VAL_SERVICE_ENV_COLL_TYPE PRIMARY KEY (SERVICE_ENV_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_SERVICE_ENV_COLL_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_SERVICE_ENV_COLL_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1785210665 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_SERVICE_ENV_COLL_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1784423487 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_SERVICE_ENV_COLL_TYPE
	MODIFY CAN_HAVE_HIERARCHY CONSTRAINT  CHECK_YES_NOSECT_HIER CHECK (CAN_HAVE_HIERARCHY IN ('Y', 'N'));

ALTER TABLE VAL_SERVICE_ENV_COLL_TYPE
	MODIFY CAN_HAVE_HIERARCHY DEFAULT 'Y';

/***********************************************
 * Table: VAL_SLOT_FUNCTION
 ***********************************************/

CREATE TABLE VAL_SLOT_FUNCTION
(
	SLOT_FUNCTION        VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	CAN_HAVE_MAC_ADDRESS CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_SLOT_FUNCTION ON VAL_SLOT_FUNCTION
(SLOT_FUNCTION   ASC);

ALTER TABLE VAL_SLOT_FUNCTION
	ADD CONSTRAINT  PK_VAL_SLOT_FUNCTION PRIMARY KEY (SLOT_FUNCTION)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_SLOT_FUNCTION  ENABLE  VALIDATE;

ALTER TABLE VAL_SLOT_FUNCTION
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_32643410 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_SLOT_FUNCTION
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_33430588 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_SLOT_FUNCTION
	MODIFY CAN_HAVE_MAC_ADDRESS CONSTRAINT  CHECK_YES_NO_SLOTFUNC_MACADDR CHECK (CAN_HAVE_MAC_ADDRESS IN ('Y', 'N'));

ALTER TABLE VAL_SLOT_FUNCTION
	MODIFY CAN_HAVE_MAC_ADDRESS DEFAULT 'N';

/***********************************************
 * Table: VAL_SLOT_PHYSICAL_INTERFACE
 ***********************************************/

CREATE TABLE VAL_SLOT_PHYSICAL_INTERFACE
(
	SLOT_PHYSICAL_INTERFACE_TYPE varchar2(50) NOT NULL ,
	SLOT_FUNCTION        VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_SLOT_PHYSICAL_INTERFACE ON VAL_SLOT_PHYSICAL_INTERFACE
(SLOT_PHYSICAL_INTERFACE_TYPE   ASC,SLOT_FUNCTION   ASC);

ALTER TABLE VAL_SLOT_PHYSICAL_INTERFACE
	ADD CONSTRAINT  PK_VAL_SLOT_PHYSICAL_INTERFACE PRIMARY KEY (SLOT_PHYSICAL_INTERFACE_TYPE,SLOT_FUNCTION)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_SLOT_PHYSICAL_INTERFACE  ENABLE  VALIDATE;

ALTER TABLE VAL_SLOT_PHYSICAL_INTERFACE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1124739393 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_SLOT_PHYSICAL_INTERFACE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1123952215 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_SLOT_PHYS_INT_SLOT_FUNC ON VAL_SLOT_PHYSICAL_INTERFACE
(SLOT_FUNCTION   ASC);

/***********************************************
 * Table: VAL_SNMP_COMMSTR_TYPE
 ***********************************************/

CREATE TABLE VAL_SNMP_COMMSTR_TYPE
(
	SNMP_COMMSTR_TYPE    VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) CONSTRAINT SYS_C0074788 NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_SNMP_COMMSTR_TYPE ON VAL_SNMP_COMMSTR_TYPE
(SNMP_COMMSTR_TYPE   ASC);

ALTER TABLE VAL_SNMP_COMMSTR_TYPE
	ADD CONSTRAINT  PK_SNMP_COMMSTR_TYPE PRIMARY KEY (SNMP_COMMSTR_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_SNMP_COMMSTR_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_SNMP_COMMSTR_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_VAL_SNMP CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_SNMP_COMMSTR_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_VAL_SNMP CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_SSH_KEY_TYPE
 ***********************************************/

CREATE TABLE VAL_SSH_KEY_TYPE
(
	SSH_KEY_TYPE         CHAR(18) NOT NULL ,
	DESCRIPTION          VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_SSH_KEY_TYPE ON VAL_SSH_KEY_TYPE
(SSH_KEY_TYPE   ASC);

ALTER TABLE VAL_SSH_KEY_TYPE
	ADD CONSTRAINT  PK_VAL_SSH_KEY_TYPE PRIMARY KEY (SSH_KEY_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_SSH_KEY_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_SSH_KEY_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_585827867 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_SSH_KEY_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_586615045 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_SW_PACKAGE_FORMAT
 ***********************************************/

CREATE TABLE VAL_SW_PACKAGE_FORMAT
(
	SW_PACKAGE_FORMAT    VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_SW_PACKAGE_FORMAT ON VAL_SW_PACKAGE_FORMAT
(SW_PACKAGE_FORMAT   ASC);

ALTER TABLE VAL_SW_PACKAGE_FORMAT
	ADD CONSTRAINT  PK_VAL_SW_PACKAGE_FORMAT PRIMARY KEY (SW_PACKAGE_FORMAT)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_SW_PACKAGE_FORMAT  ENABLE  VALIDATE;

ALTER TABLE VAL_SW_PACKAGE_FORMAT
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VSWPKGFMT CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_SW_PACKAGE_FORMAT
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VSWPKGFMT CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_SW_PACKAGE_TYPE
 ***********************************************/

CREATE TABLE VAL_SW_PACKAGE_TYPE
(
	SW_PACKAGE_TYPE      VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_SW_PACKAGE_TYPE ON VAL_SW_PACKAGE_TYPE
(SW_PACKAGE_TYPE   ASC);

ALTER TABLE VAL_SW_PACKAGE_TYPE
	ADD CONSTRAINT  PK_VAL_SW_PACKAGE_TYPE PRIMARY KEY (SW_PACKAGE_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_SW_PACKAGE_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_SW_PACKAGE_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VSWPKGTYPE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_SW_PACKAGE_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VSWPKGTYPE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_SYMBOLIC_TRACK_NAME
 ***********************************************/

CREATE TABLE VAL_SYMBOLIC_TRACK_NAME
(
	SYMBOLIC_TRACK_NAME  VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_SYMBOLIC_TRACK_NAME ON VAL_SYMBOLIC_TRACK_NAME
(SYMBOLIC_TRACK_NAME   ASC);

ALTER TABLE VAL_SYMBOLIC_TRACK_NAME
	ADD CONSTRAINT  PK_VAL_SYMBOLIC_TRACK_NAME PRIMARY KEY (SYMBOLIC_TRACK_NAME)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_SYMBOLIC_TRACK_NAME  ENABLE  VALIDATE;

ALTER TABLE VAL_SYMBOLIC_TRACK_NAME
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VSYMBTRKNM CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_SYMBOLIC_TRACK_NAME
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VSYMBTRKNM CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_TOKEN_COLLECTION_TYPE
 ***********************************************/

CREATE TABLE VAL_TOKEN_COLLECTION_TYPE
(
	TOKEN_COLLECTION_TYPE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255) NULL ,
	MAX_NUM_MEMBERS      INTEGER NULL ,
	MAX_NUM_COLLECTIONS  INTEGER NULL ,
	CAN_HAVE_HIERARCHY   CHAR(1) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_TOKEN_COLLECTION_TYPE IS 'Assign purposes to arbitrary groupings';

COMMENT ON COLUMN VAL_TOKEN_COLLECTION_TYPE.MAX_NUM_MEMBERS IS 'Maximum number of members in a given collection of this type';

COMMENT ON COLUMN VAL_TOKEN_COLLECTION_TYPE.CAN_HAVE_HIERARCHY IS 'Indicates if the collections can have other collections to make it hierarchical.';

COMMENT ON COLUMN VAL_TOKEN_COLLECTION_TYPE.MAX_NUM_COLLECTIONS IS 'Maximum number of collections a given member can be a part of of this type.';

CREATE UNIQUE INDEX PK_VAL_TOKEN_COLLECTION_TYPE ON VAL_TOKEN_COLLECTION_TYPE
(TOKEN_COLLECTION_TYPE   ASC);

ALTER TABLE VAL_TOKEN_COLLECTION_TYPE
	ADD CONSTRAINT  PK_VAL_TOKEN_COLLECTION_TYPE PRIMARY KEY (TOKEN_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_TOKEN_COLLECTION_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_TOKEN_COLLECTION_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_V_TOK_COL_TYPE CHECK (DATA_INS_USER is null or
			(DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_TOKEN_COLLECTION_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_V_TOK_COL_TYPE CHECK (DATA_UPD_USER is null or
			(DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_TOKEN_COLLECTION_TYPE
	MODIFY CAN_HAVE_HIERARCHY CONSTRAINT  CHECK_YES_NO_126727163 CHECK (CAN_HAVE_HIERARCHY IN ('Y', 'N'));

ALTER TABLE VAL_TOKEN_COLLECTION_TYPE
	MODIFY CAN_HAVE_HIERARCHY DEFAULT 'Y';

/***********************************************
 * Table: VAL_TOKEN_STATUS
 ***********************************************/

CREATE TABLE VAL_TOKEN_STATUS
(
	TOKEN_STATUS         VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_TOKEN_STATUS ON VAL_TOKEN_STATUS
(TOKEN_STATUS   ASC);

ALTER TABLE VAL_TOKEN_STATUS
	ADD CONSTRAINT  PK_VAL_TOKEN_STATUS PRIMARY KEY (TOKEN_STATUS)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_TOKEN_STATUS  ENABLE  VALIDATE;

ALTER TABLE VAL_TOKEN_STATUS
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VTOKENSTATUS CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_TOKEN_STATUS
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VTOKENSTATUS CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_TOKEN_TYPE
 ***********************************************/

CREATE TABLE VAL_TOKEN_TYPE
(
	TOKEN_TYPE           VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	TOKEN_DIGIT_COUNT    INTEGER NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN VAL_TOKEN_TYPE.TOKEN_DIGIT_COUNT IS 'number of digits that the token displays';

CREATE UNIQUE INDEX PK_VAL_TOKEN_TYPE ON VAL_TOKEN_TYPE
(TOKEN_TYPE   ASC);

ALTER TABLE VAL_TOKEN_TYPE
	ADD CONSTRAINT  PK_VAL_TOKEN_TYPE PRIMARY KEY (TOKEN_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_TOKEN_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_TOKEN_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VTOKENTYPE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_TOKEN_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VTOKENTYPE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_UPGRADE_SEVERITY
 ***********************************************/

CREATE TABLE VAL_UPGRADE_SEVERITY
(
	UPGRADE_SEVERITY     VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SEVERITY_FACTOR      NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_UPGRADE_SEVERITY ON VAL_UPGRADE_SEVERITY
(UPGRADE_SEVERITY   ASC);

ALTER TABLE VAL_UPGRADE_SEVERITY
	ADD CONSTRAINT  PK_VAL_UPGRADE_SEVERITY PRIMARY KEY (UPGRADE_SEVERITY)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_UPGRADE_SEVERITY  ENABLE  VALIDATE;

ALTER TABLE VAL_UPGRADE_SEVERITY
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VUPGSEV CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_UPGRADE_SEVERITY
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VUPGSEV CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_VOE_STATE
 ***********************************************/

CREATE TABLE VAL_VOE_STATE
(
	VOE_STATE            VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_VOE_STATE ON VAL_VOE_STATE
(VOE_STATE   ASC);

ALTER TABLE VAL_VOE_STATE
	ADD CONSTRAINT  PK_VAL_VOE_STATE PRIMARY KEY (VOE_STATE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_VOE_STATE  ENABLE  VALIDATE;

ALTER TABLE VAL_VOE_STATE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VVOESTATE CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_VOE_STATE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VVOESTATE CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_VOLUME_GROUP_PURPOSE
 ***********************************************/

CREATE TABLE VAL_VOLUME_GROUP_PURPOSE
(
	VOLUME_GROUP_PURPOSE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_VOLUME_GROUP_PURPOSE ON VAL_VOLUME_GROUP_PURPOSE
(VOLUME_GROUP_PURPOSE   ASC);

ALTER TABLE VAL_VOLUME_GROUP_PURPOSE
	ADD CONSTRAINT  PK_VAL_VOLUME_GROUP_PURPOSE PRIMARY KEY (VOLUME_GROUP_PURPOSE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_VOLUME_GROUP_PURPOSE  ENABLE  VALIDATE;

ALTER TABLE VAL_VOLUME_GROUP_PURPOSE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_713245285 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_VOLUME_GROUP_PURPOSE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_712458107 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_VOLUME_GROUP_RELATION
 ***********************************************/

CREATE TABLE VAL_VOLUME_GROUP_RELATION
(
	VOLUME_GROUP_RELATION VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VAL_VOLUME_GROUP_RELATION ON VAL_VOLUME_GROUP_RELATION
(VOLUME_GROUP_RELATION   ASC);

ALTER TABLE VAL_VOLUME_GROUP_RELATION
	ADD CONSTRAINT  PK_VAL_VOLUME_GROUP_RELATION PRIMARY KEY (VOLUME_GROUP_RELATION)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_VOLUME_GROUP_RELATION  ENABLE  VALIDATE;

ALTER TABLE VAL_VOLUME_GROUP_RELATION
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1517047822 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_VOLUME_GROUP_RELATION
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1516260644 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_VOLUME_GROUP_TYPE
 ***********************************************/

CREATE TABLE VAL_VOLUME_GROUP_TYPE
(
	VOLUME_GROUP_TYPE    VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VOLUME_GROUP_TYPE ON VAL_VOLUME_GROUP_TYPE
(VOLUME_GROUP_TYPE   ASC);

ALTER TABLE VAL_VOLUME_GROUP_TYPE
	ADD CONSTRAINT  PK_VOLUME_GROUP_TYPE PRIMARY KEY (VOLUME_GROUP_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VOLUME_GROUP_TYPE  ENABLE  VALIDATE;

ALTER TABLE VAL_VOLUME_GROUP_TYPE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_1398695080 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VAL_VOLUME_GROUP_TYPE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_1399482258 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_X509_CERTIFICATE_FILE_FMT
 ***********************************************/

CREATE TABLE VAL_X509_CERTIFICATE_FILE_FMT
(
	X509_FILE_FORMAT     VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_X509_CERTIFICATE_FILE_FMT IS 'Format of the file containing certificate.';

COMMENT ON COLUMN VAL_X509_CERTIFICATE_FILE_FMT.X509_FILE_FORMAT IS 'Format Name of the file containing Certificate information. Example; keytool, rsa';

CREATE UNIQUE INDEX PK_CERTIFICATE_FILE_FORMAT ON VAL_X509_CERTIFICATE_FILE_FMT
(X509_FILE_FORMAT   ASC);

ALTER TABLE VAL_X509_CERTIFICATE_FILE_FMT
	ADD CONSTRAINT  PK_CERTIFICATE_FILE_FORMAT PRIMARY KEY (X509_FILE_FORMAT)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_CERTIFICATE_FILE_FORMAT  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_X509_KEY_USAGE
 ***********************************************/

CREATE TABLE VAL_X509_KEY_USAGE
(
	X509_KEY_USG         VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	IS_EXTENDED          CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_X509_KEY_USAGE IS 'Captures possible usage of the certificate key. Example: Client, Server, CA.';

COMMENT ON COLUMN VAL_X509_KEY_USAGE.X509_KEY_USG IS 'Name of the Certificate.';

COMMENT ON COLUMN VAL_X509_KEY_USAGE.DESCRIPTION IS 'Textual Description of the certificate key usage.';

COMMENT ON COLUMN VAL_X509_KEY_USAGE.IS_EXTENDED IS 'Indicates if certificate key is to have an extended key usage. Default is ''N'' - No.';

CREATE UNIQUE INDEX PK_X509_KEY_USAGE ON VAL_X509_KEY_USAGE
(X509_KEY_USG   ASC);

ALTER TABLE VAL_X509_KEY_USAGE
	ADD CONSTRAINT  PK_X509_KEY_USAGE PRIMARY KEY (X509_KEY_USG)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_X509_KEY_USAGE  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_X509_KEY_USAGE_CATEGORY
 ***********************************************/

CREATE TABLE VAL_X509_KEY_USAGE_CATEGORY
(
	X509_KEY_USG_CAT     VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_X509_KEY_USAGE_CATEGORY IS 'Categorizes Certificates based on the technology object the usage can be assigned to. Currently: Application, User.';

COMMENT ON COLUMN VAL_X509_KEY_USAGE_CATEGORY.X509_KEY_USG_CAT IS 'Category Name. Example: Application.';

COMMENT ON COLUMN VAL_X509_KEY_USAGE_CATEGORY.DESCRIPTION IS 'Textual description of the category.';

CREATE UNIQUE INDEX PK_X509_KEY_USAGE_CATEGORY ON VAL_X509_KEY_USAGE_CATEGORY
(X509_KEY_USG_CAT   ASC);

ALTER TABLE VAL_X509_KEY_USAGE_CATEGORY
	ADD CONSTRAINT  PK_X509_KEY_USAGE_CATEGORY PRIMARY KEY (X509_KEY_USG_CAT)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_X509_KEY_USAGE_CATEGORY  ENABLE  VALIDATE;

/***********************************************
 * Table: VAL_X509_REVOCATION_REASON
 ***********************************************/

CREATE TABLE VAL_X509_REVOCATION_REASON
(
	X509_REVOCATION_REASON VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE VAL_X509_REVOCATION_REASON IS 'Reasons, based on RFC, that a certificate can be revoked.  These are typically encoded in revocation lists (CRLs, etc).';

COMMENT ON COLUMN VAL_X509_REVOCATION_REASON.X509_REVOCATION_REASON IS 'valid reason for revoking certificates';

CREATE UNIQUE INDEX PK_VAL_X509_REVOCATION_REASON ON VAL_X509_REVOCATION_REASON
(X509_REVOCATION_REASON   ASC);

ALTER TABLE VAL_X509_REVOCATION_REASON
	ADD CONSTRAINT  PK_VAL_X509_REVOCATION_REASON PRIMARY KEY (X509_REVOCATION_REASON)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VAL_X509_REVOCATION_REASON  ENABLE  VALIDATE;

/***********************************************
 * Table: VOE
 ***********************************************/

CREATE TABLE VOE
(
	VOE_ID               NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	VOE_NAME             VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	VOE_STATE            VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SW_PACKAGE_REPOSITORY_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SERVICE_ENVIRONMENT_ID NUMBER(13,0) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX AK_UQ_VOE_VOE_NAME_SW_VONAGE_O ON VOE
(VOE_NAME   ASC,SW_PACKAGE_REPOSITORY_ID   ASC);

CREATE UNIQUE INDEX PK_VONAGE_OPERATING_ENV ON VOE
(VOE_ID   ASC);

ALTER TABLE VOE
	ADD CONSTRAINT  PK_VONAGE_OPERATING_ENV PRIMARY KEY (VOE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VONAGE_OPERATING_ENV  ENABLE  VALIDATE;

ALTER TABLE VOE
ADD CONSTRAINT  AK_UQ_VOE_VOE_NAME_SW_VONAGE_O UNIQUE (VOE_NAME,SW_PACKAGE_REPOSITORY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_UQ_VOE_VOE_NAME_SW_VONAGE_O  ENABLE  VALIDATE;

ALTER TABLE VOE
	MODIFY VOE_ID CONSTRAINT  SYS_C0033904 CHECK ("VOE_ID" IS
NOT NULL)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VOE
	MODIFY VOE_NAME CONSTRAINT  SYS_C0033905 CHECK ("VOE_NAME"
IS NOT NULL)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VOE
	MODIFY VOE_STATE CONSTRAINT  SYS_C0033906 CHECK ("VOE_STATE"
IS NOT NULL)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VOE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_VONAGE_O CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VOE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_VONAGE_O CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VOE_RELATION
 ***********************************************/

CREATE TABLE VOE_RELATION
(
	VOE_ID               NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	RELATED_VOE_ID       NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	UPGRADE_SEVERITY     VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	IS_ACTIVE            CHAR(1 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VOE_RELATION ON VOE_RELATION
(VOE_ID   ASC,RELATED_VOE_ID   ASC);

ALTER TABLE VOE_RELATION
	ADD CONSTRAINT  PK_VOE_RELATION PRIMARY KEY (VOE_ID,RELATED_VOE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VOE_RELATION  ENABLE  VALIDATE;

ALTER TABLE VOE_RELATION
	MODIFY VOE_ID CONSTRAINT  SYS_C0033916 CHECK ("VOE_ID" IS NOT
NULL)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VOE_RELATION
	MODIFY RELATED_VOE_ID CONSTRAINT  SYS_C0033917 CHECK ("RELATED_VOE_ID" IS
NOT NULL)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VOE_RELATION
	MODIFY UPGRADE_SEVERITY CONSTRAINT  SYS_C0033918 CHECK ("UPGRADE_SEVERITY"
IS NOT NULL)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VOE_RELATION
	MODIFY IS_ACTIVE CONSTRAINT  CKC_IS_ACTIVE_VOE_RELA CHECK (IS_ACTIVE in ('Y','N') and IS_ACTIVE = upper(IS_ACTIVE))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VOE_RELATION
	MODIFY IS_ACTIVE CONSTRAINT  SYS_C0033919 CHECK ("IS_ACTIVE" IS NOT
NULL)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VOE_RELATION
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_VOE_RELA CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VOE_RELATION
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_VOE_RELA CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE    BITMAP INDEX BMAP_VOE_REL_IS_ACTIVE ON VOE_RELATION
(IS_ACTIVE   ASC);

CREATE    BITMAP INDEX BMAP_VOE_REL_UPG_SEV ON VOE_RELATION
(UPGRADE_SEVERITY   ASC);

CREATE  INDEX IDX_VOE_REL_REL_VOE_ID ON VOE_RELATION
(RELATED_VOE_ID   ASC);

/***********************************************
 * Table: VOE_SW_PACKAGE
 ***********************************************/

CREATE TABLE VOE_SW_PACKAGE
(
	VOE_ID               NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SW_PACKAGE_RELEASE_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VOE_SW_PACKAGE ON VOE_SW_PACKAGE
(VOE_ID   ASC,SW_PACKAGE_RELEASE_ID   ASC);

ALTER TABLE VOE_SW_PACKAGE
	ADD CONSTRAINT  PK_VOE_SW_PACKAGE PRIMARY KEY (VOE_ID,SW_PACKAGE_RELEASE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VOE_SW_PACKAGE  ENABLE  VALIDATE;

ALTER TABLE VOE_SW_PACKAGE
	MODIFY VOE_ID CONSTRAINT  SYS_C0033927 CHECK ("VOE_ID" IS NOT
NULL)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VOE_SW_PACKAGE
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DINSUSR_VOESWPKG CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VOE_SW_PACKAGE
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DUPDUSR_VOESWPKG CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VOE_SYMBOLIC_TRACK
 ***********************************************/

CREATE TABLE VOE_SYMBOLIC_TRACK
(
	VOE_SYMBOLIC_TRACK_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SYMBOLIC_TRACK_NAME  VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	ACTIVE_VOE_ID        NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	PENDING_VOE_ID       NUMBER NULL ,
	UPGRADE_SEVERITY_THRESHOLD VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SW_PACKAGE_REPOSITORY_ID NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX AK_UQ_VSYMBTRK_TRK_SW_VOE_SYMB ON VOE_SYMBOLIC_TRACK
(SYMBOLIC_TRACK_NAME   ASC,SW_PACKAGE_REPOSITORY_ID   ASC);

CREATE UNIQUE INDEX PK_VOE_SYMBOLIC_TRACK ON VOE_SYMBOLIC_TRACK
(VOE_SYMBOLIC_TRACK_ID   ASC);

ALTER TABLE VOE_SYMBOLIC_TRACK
	ADD CONSTRAINT  PK_VOE_SYMBOLIC_TRACK PRIMARY KEY (VOE_SYMBOLIC_TRACK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VOE_SYMBOLIC_TRACK  ENABLE  VALIDATE;

ALTER TABLE VOE_SYMBOLIC_TRACK
ADD CONSTRAINT  AK_UQ_VSYMBTRK_TRK_SW_VOE_SYMB UNIQUE (SYMBOLIC_TRACK_NAME,SW_PACKAGE_REPOSITORY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_UQ_VSYMBTRK_TRK_SW_VOE_SYMB  ENABLE  VALIDATE;

ALTER TABLE VOE_SYMBOLIC_TRACK
	MODIFY DATA_INS_USER CONSTRAINT  CKC_DATA_INS_USER_VOE_SYMB CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VOE_SYMBOLIC_TRACK
	MODIFY DATA_UPD_USER CONSTRAINT  CKC_DATA_UPD_USER_VOE_SYMB CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

/***********************************************
 * Table: VOLUME_GROUP
 ***********************************************/

CREATE TABLE VOLUME_GROUP
(
	VOLUME_GROUP_ID      NUMBER NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DEVICE_ID            NUMBER NULL ,
	COMPONENT_ID         NUMBER NULL ,
	VOLUME_GROUP_NAME    varchar2(50) NOT NULL ,
	VOLUME_GROUP_TYPE    VARCHAR2(50 BYTE) NULL ,
	VOLUME_GROUP_SIZE_IN_BYTES INTEGER NOT NULL ,
	RAID_TYPE            VARCHAR2(50 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN VOLUME_GROUP.COMPONENT_ID IS 'if applicable, the component that hosts this volume group.  This is primarily used to indicate the hardware raid controller component that hosts the volume group.';

CREATE UNIQUE INDEX PK_VOLUME_GROUP ON VOLUME_GROUP
(VOLUME_GROUP_ID   ASC);

ALTER TABLE VOLUME_GROUP
	ADD CONSTRAINT  PK_VOLUME_GROUP PRIMARY KEY (VOLUME_GROUP_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VOLUME_GROUP  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_VOLUME_GROUP_DEVID_VGID ON VOLUME_GROUP
(VOLUME_GROUP_ID   ASC,DEVICE_ID   ASC);

ALTER TABLE VOLUME_GROUP
ADD CONSTRAINT  AK_VOLUME_GROUP_DEVID_VGID UNIQUE (VOLUME_GROUP_ID,DEVICE_ID);

ALTER TABLE VOLUME_GROUP
ADD CONSTRAINT  AK_VOLUME_GROUP_VG_DEVID UNIQUE (VOLUME_GROUP_ID,DEVICE_ID);

CREATE UNIQUE INDEX UQ_VOLGRP_DEVID_NAME_TYPE ON VOLUME_GROUP
(DEVICE_ID   ASC,COMPONENT_ID   ASC,VOLUME_GROUP_NAME   ASC,VOLUME_GROUP_TYPE   ASC);

ALTER TABLE VOLUME_GROUP
ADD CONSTRAINT  UQ_VOLGRP_DEVID_NAME_TYPE UNIQUE (DEVICE_ID,COMPONENT_ID,VOLUME_GROUP_NAME,VOLUME_GROUP_TYPE);

ALTER TABLE VOLUME_GROUP
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_811874140 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VOLUME_GROUP
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_811086962 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF5VOLUME_GROUP ON VOLUME_GROUP
(COMPONENT_ID   ASC);

CREATE  INDEX XIF_VOLGRP_DEVID ON VOLUME_GROUP
(DEVICE_ID   ASC);

CREATE  INDEX XIF_VOLGRP_RD_TYPE ON VOLUME_GROUP
(RAID_TYPE   ASC);

CREATE  INDEX XIF_VOLGRP_VOLGRP_TYPE ON VOLUME_GROUP
(VOLUME_GROUP_TYPE   ASC);

/***********************************************
 * Table: VOLUME_GROUP_PHYSICALISH_VOL
 ***********************************************/

CREATE TABLE VOLUME_GROUP_PHYSICALISH_VOL
(
	PHYSICALISH_VOLUME_ID NUMBER NOT NULL ,
	VOLUME_GROUP_ID      NUMBER NOT NULL ,
	DEVICE_ID            NUMBER NULL ,
	VOLUME_GROUP_PRIMARY_POS INTEGER NULL ,
	VOLUME_GROUP_SECONDARY_POS INTEGER NULL ,
	VOLUME_GROUP_RELATION VARCHAR2(50 BYTE) NOT NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON COLUMN VOLUME_GROUP_PHYSICALISH_VOL.VOLUME_GROUP_RELATION IS 'purpose of volume in raid (member, hotspare, etc, based on val table)
';

COMMENT ON COLUMN VOLUME_GROUP_PHYSICALISH_VOL.VOLUME_GROUP_PRIMARY_POS IS 'position within the primary raid, sometimes called span by at least one raid vendor.';

COMMENT ON COLUMN VOLUME_GROUP_PHYSICALISH_VOL.VOLUME_GROUP_SECONDARY_POS IS 'position within the secondary raid, sometimes called arm by at least one raid vendor.';

CREATE UNIQUE INDEX PK_VOLUME_GROUP_PHYSICALISH_VO ON VOLUME_GROUP_PHYSICALISH_VOL
(PHYSICALISH_VOLUME_ID   ASC,VOLUME_GROUP_ID   ASC);

ALTER TABLE VOLUME_GROUP_PHYSICALISH_VOL
	ADD CONSTRAINT  PK_VOLUME_GROUP_PHYSICALISH_VO PRIMARY KEY (PHYSICALISH_VOLUME_ID,VOLUME_GROUP_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VOLUME_GROUP_PHYSICALISH_VO  ENABLE  VALIDATE;

CREATE  INDEX XIQ_VOLGRP_PV_POSITION ON VOLUME_GROUP_PHYSICALISH_VOL
(VOLUME_GROUP_ID   ASC,VOLUME_GROUP_PRIMARY_POS   ASC);

ALTER TABLE VOLUME_GROUP_PHYSICALISH_VOL
ADD CONSTRAINT  UQ_VOLGRP_PV_POSITION UNIQUE (VOLUME_GROUP_ID,VOLUME_GROUP_PRIMARY_POS)  DEFERRABLE;

ALTER TABLE VOLUME_GROUP_PHYSICALISH_VOL
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_768931540 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VOLUME_GROUP_PHYSICALISH_VOL
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_769718718 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_PHYSVOL_VG_PHSVOL_DVID ON VOLUME_GROUP_PHYSICALISH_VOL
(PHYSICALISH_VOLUME_ID   ASC,DEVICE_ID   ASC);

CREATE  INDEX XIF_VGP_PHY_PHYID ON VOLUME_GROUP_PHYSICALISH_VOL
(PHYSICALISH_VOLUME_ID   ASC);

CREATE  INDEX XIF_VGP_PHY_VGRPID ON VOLUME_GROUP_PHYSICALISH_VOL
(VOLUME_GROUP_ID   ASC);

CREATE  INDEX XIF_VGP_PHY_VGRPID_DEVID ON VOLUME_GROUP_PHYSICALISH_VOL
(DEVICE_ID   ASC,VOLUME_GROUP_ID   ASC);

CREATE  INDEX XIF_VG_PHYSVOL_VGREL ON VOLUME_GROUP_PHYSICALISH_VOL
(VOLUME_GROUP_RELATION   ASC);

/***********************************************
 * Table: VOLUME_GROUP_PURPOSE
 ***********************************************/

CREATE TABLE VOLUME_GROUP_PURPOSE
(
	VOLUME_GROUP_ID      NUMBER NOT NULL ,
	VOLUME_GROUP_PURPOSE VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(4000 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

CREATE UNIQUE INDEX PK_VOLUME_GROUP_PURPOSE ON VOLUME_GROUP_PURPOSE
(VOLUME_GROUP_ID   ASC,VOLUME_GROUP_PURPOSE   ASC);

ALTER TABLE VOLUME_GROUP_PURPOSE
	ADD CONSTRAINT  PK_VOLUME_GROUP_PURPOSE PRIMARY KEY (VOLUME_GROUP_ID,VOLUME_GROUP_PURPOSE)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_VOLUME_GROUP_PURPOSE  ENABLE  VALIDATE;

ALTER TABLE VOLUME_GROUP_PURPOSE
	MODIFY DATA_INS_USER CONSTRAINT  Validation_Rule_848_2134602044 CHECK (DATA_INS_USER is null or (DATA_INS_USER = upper(DATA_INS_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

ALTER TABLE VOLUME_GROUP_PURPOSE
	MODIFY DATA_UPD_USER CONSTRAINT  Validation_Rule_851_2135389222 CHECK (DATA_UPD_USER is null or (DATA_UPD_USER = upper(DATA_UPD_USER)))  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE;

CREATE  INDEX XIF_VAL_VOLGRP_PURP_VGID ON VOLUME_GROUP_PURPOSE
(VOLUME_GROUP_ID   ASC);

CREATE  INDEX XIF_VAL_VOLGRP_PURP_VGPURP ON VOLUME_GROUP_PURPOSE
(VOLUME_GROUP_PURPOSE   ASC);

/***********************************************
 * Table: X509_CERTIFICATE
 ***********************************************/

CREATE TABLE X509_CERTIFICATE
(
	X509_CERT_ID         NUMBER(13) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	FRIENDLY_NAME        varchar2(255) NOT NULL ,
	IS_ACTIVE            CHAR(1) NOT NULL ,
	IS_CERTIFICATE_AUTHORITY CHAR(1) NOT NULL ,
	SIGNING_CERT_ID      NUMBER(13) NULL ,
	X509_CA_CERT_SERIAL_NUMBER INTEGER NULL ,
	PUBLIC_KEY           VARCHAR2(10000 BYTE) NULL ,
	PRIVATE_KEY          VARCHAR2(10000 BYTE) NULL ,
	CERTIFICATE_SIGN_REQ VARCHAR2(10000) NULL ,
	SUBJECT              VARCHAR2(255 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	SUBJECT_KEY_IDENTIFIER varchar2(255) NULL ,
	VALID_FROM           TIMESTAMP(6) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	VALID_TO             TIMESTAMP(6) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	X509_REVOCATION_DATE DATE NULL ,
	X509_REVOCATION_REASON VARCHAR2(50 BYTE) NULL ,
	PASSPHRASE           VARCHAR2(255 BYTE) NULL ,
	ENCRYPTION_KEY_ID    NUMBER(13) NULL ,
	OCSP_URI             VARCHAR2(255) NULL ,
	CRL_URI              VARCHAR2(255) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE X509_CERTIFICATE IS 'X509 specification Certificate.';

COMMENT ON COLUMN X509_CERTIFICATE.X509_CERT_ID IS 'Uniquely identifies Certificate';

COMMENT ON COLUMN X509_CERTIFICATE.SIGNING_CERT_ID IS 'x509_cert_id for the certificate that has signed this one.';

COMMENT ON COLUMN X509_CERTIFICATE.X509_CA_CERT_SERIAL_NUMBER IS 'Serial number assigned to the certificate within Certificate Authority. It uniquely identifies certificate within the realm of the CA.';

COMMENT ON COLUMN X509_CERTIFICATE.PUBLIC_KEY IS 'Textual representation of Certificate Public Key. Public Key is a component of X509 standard and is used for encryption.';

COMMENT ON COLUMN X509_CERTIFICATE.PRIVATE_KEY IS 'Textual representation of Certificate Private Key. Private Key is a component of X509 standard and is used for encryption.';

COMMENT ON COLUMN X509_CERTIFICATE.SUBJECT IS 'Textual representation of a certificate subject. Certificate subject is a part of X509 certificate specifications.  This is the full subject from the certificate.  Friendly Name provides a human readable one.';

COMMENT ON COLUMN X509_CERTIFICATE.VALID_FROM IS 'Timestamp indicating when the certificate becomes valid and can be used.';

COMMENT ON COLUMN X509_CERTIFICATE.VALID_TO IS 'Timestamp indicating when the certificate becomes invalid and can''t be used.';

COMMENT ON COLUMN X509_CERTIFICATE.PASSPHRASE IS 'passphrase to decrypt key.  If encrypted, encryption_key_id indicates how to decrypt.';

COMMENT ON COLUMN X509_CERTIFICATE.ENCRYPTION_KEY_ID IS 'if set, encryption key information for decrypting passphrase.';

COMMENT ON COLUMN X509_CERTIFICATE.X509_REVOCATION_REASON IS 'if certificate was revoked, why iit was revokeed.  date must also be set.   NULL means not revoked';

COMMENT ON COLUMN X509_CERTIFICATE.IS_ACTIVE IS 'indicates certificate is in active use.  This is used by tools to decide how to show it; does not indicate revocation';

COMMENT ON COLUMN X509_CERTIFICATE.FRIENDLY_NAME IS 'human readable name for certificate.  often just the CN.';

COMMENT ON COLUMN X509_CERTIFICATE.SUBJECT_KEY_IDENTIFIER IS 'colon seperate byte hex string with X509v3 SKI hash of the key in the same form as the x509 extension.  This should be NOT NULL but its hard to extract sometimes';

COMMENT ON COLUMN X509_CERTIFICATE.X509_REVOCATION_DATE IS 'if certificate was revoked, when it was revokeed.  reason must also be set.   NULL means not revoked';

COMMENT ON COLUMN X509_CERTIFICATE.OCSP_URI IS 'The URI (without URI: prefix) of the OCSP server for certs signed by this CA.  This is only valid for CAs.  This URI will be included in said certificates.';

COMMENT ON COLUMN X509_CERTIFICATE.CRL_URI IS 'The URI (without URI: prefix) of the CRL for certs signed by this CA.  This is only valid for CAs.  This URI will be included in said certificates.';

CREATE UNIQUE INDEX AK_X509_CERT_CERT_CA_SER ON X509_CERTIFICATE
(SIGNING_CERT_ID   ASC,X509_CA_CERT_SERIAL_NUMBER   ASC);

CREATE UNIQUE INDEX PK_X509_CERTIFICATE ON X509_CERTIFICATE
(X509_CERT_ID   ASC);

ALTER TABLE X509_CERTIFICATE
	ADD CONSTRAINT  PK_X509_CERTIFICATE PRIMARY KEY (X509_CERT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_X509_CERTIFICATE  ENABLE  VALIDATE;

ALTER TABLE X509_CERTIFICATE
ADD CONSTRAINT  AK_X509_CERT_CERT_CA_SER UNIQUE (SIGNING_CERT_ID,X509_CA_CERT_SERIAL_NUMBER)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX AK_X509_CERT_CERT_CA_SER  ENABLE  VALIDATE;

CREATE UNIQUE INDEX AK_X509_CERT_SKI ON X509_CERTIFICATE
(SUBJECT_KEY_IDENTIFIER   ASC);

ALTER TABLE X509_CERTIFICATE
ADD CONSTRAINT  AK_X509_CERT_SKI UNIQUE (SUBJECT_KEY_IDENTIFIER);

ALTER TABLE X509_CERTIFICATE
	MODIFY IS_CERTIFICATE_AUTHORITY CONSTRAINT  CHECK_YES_NO_31190954 CHECK (IS_CERTIFICATE_AUTHORITY IN ('Y', 'N'));

ALTER TABLE X509_CERTIFICATE
	MODIFY IS_ACTIVE CONSTRAINT  CHECK_YES_NO_1933598984 CHECK (IS_ACTIVE IN ('Y', 'N'));

ALTER TABLE X509_CERTIFICATE
	MODIFY IS_CERTIFICATE_AUTHORITY DEFAULT 'N';

ALTER TABLE X509_CERTIFICATE
	MODIFY IS_ACTIVE DEFAULT 'Y';

CREATE  INDEX XIF3X509_CERTIFICATE ON X509_CERTIFICATE
(X509_REVOCATION_REASON   ASC);

/***********************************************
 * Table: X509_KEY_USAGE_ATTRIBUTE
 ***********************************************/

CREATE TABLE X509_KEY_USAGE_ATTRIBUTE
(
	X509_CERT_ID         NUMBER(13) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	X509_KEY_USG         VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	X509_KEY_USG_CAT     VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE X509_KEY_USAGE_ATTRIBUTE IS 'Actual attribute of certificate key usage.';

COMMENT ON COLUMN X509_KEY_USAGE_ATTRIBUTE.X509_KEY_USG_CAT IS 'Category Name. Example: Application.';

COMMENT ON COLUMN X509_KEY_USAGE_ATTRIBUTE.X509_KEY_USG IS 'Name of the Certificate.';

COMMENT ON COLUMN X509_KEY_USAGE_ATTRIBUTE.X509_CERT_ID IS 'Uniquely identifies Certificate';

CREATE UNIQUE INDEX PK_KEY_USAGE_ATTRIBUTE ON X509_KEY_USAGE_ATTRIBUTE
(X509_CERT_ID   ASC,X509_KEY_USG   ASC);

ALTER TABLE X509_KEY_USAGE_ATTRIBUTE
	ADD CONSTRAINT  PK_KEY_USAGE_ATTRIBUTE PRIMARY KEY (X509_CERT_ID,X509_KEY_USG)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_KEY_USAGE_ATTRIBUTE  ENABLE  VALIDATE;

/***********************************************
 * Table: X509_KEY_USAGE_CATEGORIZATION
 ***********************************************/

CREATE TABLE X509_KEY_USAGE_CATEGORIZATION
(
	X509_KEY_USG_CAT     VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	X509_KEY_USG         VARCHAR2(50 BYTE) NOT NULL 
			  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE,
	DESCRIPTION          VARCHAR2(255 BYTE) NULL ,
	DATA_INS_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_INS_DATE        DATE NULL ,
	DATA_UPD_USER        VARCHAR2(30 BYTE) NULL ,
	DATA_UPD_DATE        DATE NULL 
);

COMMENT ON TABLE X509_KEY_USAGE_CATEGORIZATION IS 'Captures certificate key usage categorization. Example: Client key usage can be assigned to USER, but CA usage can not.';

COMMENT ON COLUMN X509_KEY_USAGE_CATEGORIZATION.X509_KEY_USG_CAT IS 'Category Name. Example: Application.';

COMMENT ON COLUMN X509_KEY_USAGE_CATEGORIZATION.X509_KEY_USG IS 'Name of the Certificate.';

CREATE UNIQUE INDEX PK_KEY_USAGE_CAT ON X509_KEY_USAGE_CATEGORIZATION
(X509_KEY_USG_CAT   ASC,X509_KEY_USG   ASC);

ALTER TABLE X509_KEY_USAGE_CATEGORIZATION
	ADD CONSTRAINT  PK_KEY_USAGE_CAT PRIMARY KEY (X509_KEY_USG_CAT,X509_KEY_USG)  NOT DEFERRABLE  INITIALLY IMMEDIATE   USING INDEX PK_KEY_USAGE_CAT  ENABLE  VALIDATE;

ALTER TABLE ACCOUNT
	ADD (CONSTRAINT FK_ACCOUNT_ACCT_RLM_ID FOREIGN KEY (ACCOUNT_REALM_ID) REFERENCES ACCOUNT_REALM (ACCOUNT_REALM_ID));

ALTER TABLE ACCOUNT
	ADD (CONSTRAINT FK_ACCOUNT_ACCTROLE FOREIGN KEY (ACCOUNT_ROLE) REFERENCES VAL_ACCOUNT_ROLE (ACCOUNT_ROLE));

ALTER TABLE ACCOUNT
	ADD (CONSTRAINT FK_ACCOUNT_COMPANY_PERSON FOREIGN KEY (COMPANY_ID, PERSON_ID) REFERENCES PERSON_COMPANY (COMPANY_ID, PERSON_ID)  DEFERRABLE);

ALTER TABLE ACCOUNT
	ADD (CONSTRAINT FK_ACCOUNT_PRSN_CMPY_ACCT FOREIGN KEY (PERSON_ID, COMPANY_ID, ACCOUNT_REALM_ID) REFERENCES PERSON_ACCOUNT_REALM_COMPANY (PERSON_ID, COMPANY_ID, ACCOUNT_REALM_ID)  DEFERRABLE);

ALTER TABLE ACCOUNT
	ADD (CONSTRAINT FK_ACCT_STAT_ID FOREIGN KEY (ACCOUNT_STATUS) REFERENCES VAL_PERSON_STATUS (PERSON_STATUS)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ACCOUNT
	ADD (CONSTRAINT FK_ACCT_VACCT_TYPE FOREIGN KEY (ACCOUNT_TYPE) REFERENCES VAL_ACCOUNT_TYPE (ACCOUNT_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ACCOUNT_ASSIGND_CERT
	ADD (CONSTRAINT FK_ACCT_ASDCRT_ACCTID FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ACCOUNT_ASSIGND_CERT
	ADD (CONSTRAINT FK_X509_KEY_USG_ATTRBT_USR FOREIGN KEY (X509_CERT_ID, X509_KEY_USG) REFERENCES X509_KEY_USAGE_ATTRIBUTE (X509_CERT_ID, X509_KEY_USG)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ACCOUNT_ASSIGND_CERT
	ADD (CONSTRAINT FK_KEY_USG_REASON_FOR_ASSGN_U FOREIGN KEY (KEY_USAGE_REASON_FOR_ASSIGN) REFERENCES VAL_KEY_USG_REASON_FOR_ASSGN (KEY_USAGE_REASON_FOR_ASSIGN)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ACCOUNT_AUTH_LOG
	ADD (CONSTRAINT FK_AUTH_RESOURCE FOREIGN KEY (AUTH_RESOURCE) REFERENCES VAL_AUTH_RESOURCE (AUTH_RESOURCE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ACCOUNT_AUTH_LOG
	ADD (CONSTRAINT FK_ACCTAUTHLOG_ACCID FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ACCOUNT_COLLECTION
	ADD (CONSTRAINT FK_ACCTCOL_USRCOLTYP FOREIGN KEY (ACCOUNT_COLLECTION_TYPE) REFERENCES VAL_ACCOUNT_COLLECTION_TYPE (ACCOUNT_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ACCOUNT_COLLECTION_ACCOUNT
	ADD (CONSTRAINT FK_ACOL_ACCOUNT_ID FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ACCOUNT_COLLECTION_ACCOUNT
	ADD (CONSTRAINT FK_ACCTCOL_USR_UCOL_ID FOREIGN KEY (ACCOUNT_COLLECTION_ID) REFERENCES ACCOUNT_COLLECTION (ACCOUNT_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ACCOUNT_COLLECTION_HIER
	ADD (CONSTRAINT FK_ACCTCOLHIER_ACCTCOLID FOREIGN KEY (ACCOUNT_COLLECTION_ID) REFERENCES ACCOUNT_COLLECTION (ACCOUNT_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ACCOUNT_COLLECTION_HIER
	ADD (CONSTRAINT FK_ACCTCOLHIER_CLDACCTCOLID FOREIGN KEY (CHILD_ACCOUNT_COLLECTION_ID) REFERENCES ACCOUNT_COLLECTION (ACCOUNT_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ACCOUNT_PASSWORD
	ADD (CONSTRAINT FK_ACCTPWD_ACCT_ID FOREIGN KEY (ACCOUNT_ID, ACCOUNT_REALM_ID) REFERENCES ACCOUNT (ACCOUNT_ID, ACCOUNT_REALM_ID));

ALTER TABLE ACCOUNT_PASSWORD
	ADD (CONSTRAINT FK_ACCT_PASS_REF_VPASSTYPE FOREIGN KEY (PASSWORD_TYPE) REFERENCES VAL_PASSWORD_TYPE (PASSWORD_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ACCOUNT_PASSWORD
	ADD (CONSTRAINT FK_ACCT_PWD_ACCT_REALM FOREIGN KEY (ACCOUNT_REALM_ID) REFERENCES ACCOUNT_REALM (ACCOUNT_REALM_ID));

ALTER TABLE ACCOUNT_PASSWORD
	ADD (CONSTRAINT FK_ACCT_PWD_REALM_TYPE FOREIGN KEY (PASSWORD_TYPE, ACCOUNT_REALM_ID) REFERENCES ACCOUNT_REALM_PASSWORD_TYPE (PASSWORD_TYPE, ACCOUNT_REALM_ID));

ALTER TABLE ACCOUNT_REALM_ACCT_COLL_TYPE
	ADD (CONSTRAINT FK_ACCT_REALM_ACCT_COLL_TYP FOREIGN KEY (ACCOUNT_COLLECTION_TYPE) REFERENCES VAL_ACCOUNT_COLLECTION_TYPE (ACCOUNT_COLLECTION_TYPE));

ALTER TABLE ACCOUNT_REALM_ACCT_COLL_TYPE
	ADD (CONSTRAINT FK_ACCT_REALM_ACCT_COLL_ARID FOREIGN KEY (ACCOUNT_REALM_ID) REFERENCES ACCOUNT_REALM (ACCOUNT_REALM_ID));

ALTER TABLE ACCOUNT_REALM_COMPANY
	ADD (CONSTRAINT FK_ACCT_RLM_CMPY_CMPY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE ACCOUNT_REALM_COMPANY
	ADD (CONSTRAINT FK_ACCT_RLM_CMPY_ACTRLMID FOREIGN KEY (ACCOUNT_REALM_ID) REFERENCES ACCOUNT_REALM (ACCOUNT_REALM_ID));

ALTER TABLE ACCOUNT_REALM_PASSWORD_TYPE
	ADD (CONSTRAINT FK_ACRLM_ACCT_RLM_ID FOREIGN KEY (ACCOUNT_REALM_ID) REFERENCES ACCOUNT_REALM (ACCOUNT_REALM_ID));

ALTER TABLE ACCOUNT_REALM_PASSWORD_TYPE
	ADD (CONSTRAINT FK_ACRLM_PWD_TYPE FOREIGN KEY (PASSWORD_TYPE) REFERENCES VAL_PASSWORD_TYPE (PASSWORD_TYPE));

ALTER TABLE ACCOUNT_SSH_KEY
	ADD (CONSTRAINT FK_ACCOUNT_SSH_KEY_SSH_KEY_ID FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID));

ALTER TABLE ACCOUNT_SSH_KEY
	ADD (CONSTRAINT FK_ACCOUNT_SSH_KEY_ACCOUNT_ID FOREIGN KEY (SSH_KEY_ID) REFERENCES SSH_KEY (SSH_KEY_ID));

ALTER TABLE ACCOUNT_TOKEN
	ADD (CONSTRAINT FK_ACCT_REF_ACCT_TOKEN FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ACCOUNT_TOKEN
	ADD (CONSTRAINT FK_ACCT_TOKEN_REF_TOKEN FOREIGN KEY (TOKEN_ID) REFERENCES TOKEN (TOKEN_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ACCOUNT_UNIX_INFO
	ADD (CONSTRAINT FK_AUXIFO_ACCT_ID FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ACCOUNT_UNIX_INFO
	ADD (CONSTRAINT FK_AUXIFO_UNXGRP_ACCTCOLID FOREIGN KEY (UNIX_GROUP_ACCT_COLLECTION_ID) REFERENCES ACCOUNT_COLLECTION (ACCOUNT_COLLECTION_ID));

ALTER TABLE ACCOUNT_UNIX_INFO
	ADD (CONSTRAINT FK_ACCT_UNX_INFO_AC_ACCT FOREIGN KEY (UNIX_GROUP_ACCT_COLLECTION_ID, ACCOUNT_ID) REFERENCES ACCOUNT_COLLECTION_ACCOUNT (ACCOUNT_COLLECTION_ID, ACCOUNT_ID));

ALTER TABLE APPAAL_INSTANCE
	ADD (CONSTRAINT FK_APPAAL_I_FK_APPLIC_SVCENV FOREIGN KEY (SERVICE_ENVIRONMENT_ID) REFERENCES SERVICE_ENVIRONMENT (SERVICE_ENVIRONMENT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE APPAAL_INSTANCE
	ADD (CONSTRAINT FK_APPAAL_REF_APPAAL_INST FOREIGN KEY (APPAAL_ID) REFERENCES APPAAL (APPAAL_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE APPAAL_INSTANCE
	ADD (CONSTRAINT FK_APPAAL_I_REFERENCE_FO_ACCTI FOREIGN KEY (FILE_OWNER_ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE APPAAL_INSTANCE
	ADD (CONSTRAINT FK_APPAAL_INST_FILGRPACCTCOLID FOREIGN KEY (FILE_GROUP_ACCT_COLLECTION_ID) REFERENCES ACCOUNT_COLLECTION (ACCOUNT_COLLECTION_ID));

ALTER TABLE APPAAL_INSTANCE_DEVICE_COLL
	ADD (CONSTRAINT FK_APPAALINS_REF_APPAALINSDCOL FOREIGN KEY (APPAAL_INSTANCE_ID) REFERENCES APPAAL_INSTANCE (APPAAL_INSTANCE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE APPAAL_INSTANCE_DEVICE_COLL
	ADD (CONSTRAINT FK_DEVCOLL_REF_APPAALINSTDCOLL FOREIGN KEY (DEVICE_COLLECTION_ID) REFERENCES DEVICE_COLLECTION (DEVICE_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE APPAAL_INSTANCE_PROPERTY
	ADD (CONSTRAINT FK_APPAALINSTPROP_REF_VAPPKEY FOREIGN KEY (APPAAL_GROUP_NAME, APP_KEY) REFERENCES VAL_APP_KEY (APPAAL_GROUP_NAME, APP_KEY)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE APPAAL_INSTANCE_PROPERTY
	ADD (CONSTRAINT FK_APPAALINS_REF_APPAALINSPROP FOREIGN KEY (APPAAL_INSTANCE_ID) REFERENCES APPAAL_INSTANCE (APPAAL_INSTANCE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE APPAAL_INSTANCE_PROPERTY
	ADD (CONSTRAINT FK_APALINSTPRP_ENC_ID_ID FOREIGN KEY (ENCRYPTION_KEY_ID) REFERENCES ENCRYPTION_KEY (ENCRYPTION_KEY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE APPAAL_INSTANCE_PROPERTY
	ADD (CONSTRAINT FK_ALLGRPPROP_VAL_NAME FOREIGN KEY (APPAAL_GROUP_NAME) REFERENCES VAL_APPAAL_GROUP_NAME (APPAAL_GROUP_NAME));

ALTER TABLE APPROVAL_INSTANCE
	ADD (CONSTRAINT FK_APPROVAL_PROC_INST_APROC_ID FOREIGN KEY (APPROVAL_PROCESS_ID) REFERENCES APPROVAL_PROCESS (APPROVAL_PROCESS_ID));

ALTER TABLE APPROVAL_INSTANCE_ITEM
	ADD (CONSTRAINT FK_APPINSTITEM_APPINSTSTEP FOREIGN KEY (APPROVAL_INSTANCE_STEP_ID) REFERENCES APPROVAL_INSTANCE_STEP (APPROVAL_INSTANCE_STEP_ID));

ALTER TABLE APPROVAL_INSTANCE_ITEM
	ADD (CONSTRAINT FK_APP_INST_ITEM_APPINSTLINKID FOREIGN KEY (APPROVAL_INSTANCE_LINK_ID) REFERENCES APPROVAL_INSTANCE_LINK (APPROVAL_INSTANCE_LINK_ID));

ALTER TABLE APPROVAL_INSTANCE_ITEM
	ADD (CONSTRAINT FK_APPINSTITMID_NEXTAPIIID FOREIGN KEY (NEXT_APPROVAL_INSTANCE_ITEM_ID) REFERENCES APPROVAL_INSTANCE_ITEM (APPROVAL_INSTANCE_ITEM_ID));

ALTER TABLE APPROVAL_INSTANCE_ITEM
	ADD (CONSTRAINT FK_APPINSTITM_APP_ACCTID FOREIGN KEY (APPROVED_ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID));

ALTER TABLE APPROVAL_INSTANCE_STEP
	ADD (CONSTRAINT FK_APP_INST_STEP_APINSTID FOREIGN KEY (APPROVAL_INSTANCE_ID) REFERENCES APPROVAL_INSTANCE (APPROVAL_INSTANCE_ID));

ALTER TABLE APPROVAL_INSTANCE_STEP
	ADD (CONSTRAINT FK_APPINSTSTEP_APP_ACCT_ID FOREIGN KEY (APPROVER_ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID));

ALTER TABLE APPROVAL_INSTANCE_STEP
	ADD (CONSTRAINT FK_APPINSTSTEP_APP_TYPE FOREIGN KEY (APPROVAL_TYPE) REFERENCES VAL_APPROVAL_TYPE (APPROVAL_TYPE));

ALTER TABLE APPROVAL_INSTANCE_STEP
	ADD (CONSTRAINT FK_APPINSTSTEP_APP_PRCCHNID FOREIGN KEY (APPROVAL_PROCESS_CHAIN_ID) REFERENCES APPROVAL_PROCESS_CHAIN (APPROVAL_PROCESS_CHAIN_ID));

ALTER TABLE APPROVAL_INSTANCE_STEP_NOTIFY
	ADD (CONSTRAINT FK_APPINSTSTEPNTFY_NTFY_TYP FOREIGN KEY (APPROVAL_NOTIFY_TYPE) REFERENCES VAL_APPROVAL_NOTIFTY_TYPE (APPROVAL_NOTIFY_TYPE));

ALTER TABLE APPROVAL_INSTANCE_STEP_NOTIFY
	ADD (CONSTRAINT FK_APPINSTSTEP_APPINSTPROCID FOREIGN KEY (APPROVAL_INSTANCE_STEP_ID) REFERENCES APPROVAL_INSTANCE_STEP (APPROVAL_INSTANCE_STEP_ID));

ALTER TABLE APPROVAL_INSTANCE_STEP_NOTIFY
	ADD (CONSTRAINT FK_APPR_INST_STEP_NOTIF_ACCT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID));

ALTER TABLE APPROVAL_PROCESS
	ADD (CONSTRAINT FK_APP_PRC_PROPCOLL_ID FOREIGN KEY (PROPERTY_COLLECTION_ID) REFERENCES PROPERTY_COLLECTION (PROPERTY_COLLECTION_ID));

ALTER TABLE APPROVAL_PROCESS
	ADD (CONSTRAINT FK_APP_PROC_APP_PROC_TYP FOREIGN KEY (APPROVAL_PROCESS_TYPE) REFERENCES VAL_APPROVAL_PROCESS_TYPE (APPROVAL_PROCESS_TYPE));

ALTER TABLE APPROVAL_PROCESS
	ADD (CONSTRAINT FK_APP_PROC_EXPIRE_ACTION FOREIGN KEY (APPROVAL_EXPIRATION_ACTION) REFERENCES VAL_APPROVAL_EXPIRATION_ACTION (APPROVAL_EXPIRATION_ACTION));

ALTER TABLE APPROVAL_PROCESS
	ADD (CONSTRAINT FK_APPPROC_ATTEST_FREQ FOREIGN KEY (ATTESTATION_FREQUENCY) REFERENCES VAL_ATTESTATION_FREQUENCY (ATTESTATION_FREQUENCY));

ALTER TABLE APPROVAL_PROCESS
	ADD (CONSTRAINT FK_APP_PROC_1ST_APP_PROC_CHNID FOREIGN KEY (FIRST_APPRVL_PROCESS_CHAIN_ID) REFERENCES APPROVAL_PROCESS_CHAIN (APPROVAL_PROCESS_CHAIN_ID));

ALTER TABLE APPROVAL_PROCESS_CHAIN
	ADD (CONSTRAINT FK_APPPROC_CHN_RESP_PERIOD FOREIGN KEY (APPROVAL_CHAIN_RESPONSE_PERIOD) REFERENCES VAL_APPROVAL_CHAIN_RESP_PRD (APPROVAL_CHAIN_RESPONSE_PERIOD));

ALTER TABLE APPROVAL_PROCESS_CHAIN
	ADD (CONSTRAINT FK_APPRCHN_REJ_PROC_CHN FOREIGN KEY (ACCEPT_APP_PROCESS_CHAIN_ID) REFERENCES APPROVAL_PROCESS_CHAIN (APPROVAL_PROCESS_CHAIN_ID));

ALTER TABLE APPROVAL_PROCESS_CHAIN
	ADD (CONSTRAINT FK_APPRCHN_APP_PROC_CHN FOREIGN KEY (ACCEPT_APP_PROCESS_CHAIN_ID) REFERENCES APPROVAL_PROCESS_CHAIN (APPROVAL_PROCESS_CHAIN_ID));

ALTER TABLE ASSET
	ADD (CONSTRAINT FK_ASSET_COMP_ID FOREIGN KEY (COMPONENT_ID) REFERENCES COMPONENT (COMPONENT_ID));

ALTER TABLE ASSET
	ADD (CONSTRAINT FK_ASSET_CONTRACT_ID FOREIGN KEY (CONTRACT_ID) REFERENCES CONTRACT (CONTRACT_ID));

ALTER TABLE ASSET
	ADD (CONSTRAINT FK_ASSET_OWNSHP_STAT FOREIGN KEY (OWNERSHIP_STATUS) REFERENCES VAL_OWNERSHIP_STATUS (OWNERSHIP_STATUS));

ALTER TABLE BADGE
	ADD (CONSTRAINT FK_BADGE_BADGE_TYPE FOREIGN KEY (BADGE_TYPE_ID) REFERENCES BADGE_TYPE (BADGE_TYPE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE BADGE
	ADD (CONSTRAINT FK_BADGE_VBADGESTATUS FOREIGN KEY (BADGE_STATUS) REFERENCES VAL_BADGE_STATUS (BADGE_STATUS)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE CHASSIS_LOCATION
	ADD (CONSTRAINT FK_CHAS_LOC_DT_MODULE FOREIGN KEY (CHASSIS_DEVICE_TYPE_ID, DEVICE_TYPE_MODULE_NAME) REFERENCES DEVICE_TYPE_MODULE (DEVICE_TYPE_ID, DEVICE_TYPE_MODULE_NAME));

ALTER TABLE CHASSIS_LOCATION
	ADD (CONSTRAINT FK_CHASS_LOC_MOD_DEV_TYP_ID FOREIGN KEY (MODULE_DEVICE_TYPE_ID) REFERENCES DEVICE_TYPE (DEVICE_TYPE_ID));

ALTER TABLE CHASSIS_LOCATION
	ADD (CONSTRAINT FK_CHASS_LOC_CHASS_DEVID FOREIGN KEY (CHASSIS_DEVICE_ID) REFERENCES DEVICE (DEVICE_ID)  DEFERRABLE);

ALTER TABLE CHASSIS_LOCATION
	ADD (CONSTRAINT FK_DTYP_MOD_DEV_CHASS_LOCATION FOREIGN KEY (MODULE_DEVICE_TYPE_ID, CHASSIS_DEVICE_TYPE_ID, DEVICE_TYPE_MODULE_NAME) REFERENCES DEVICE_TYPE_MODULE_DEVICE_TYPE (MODULE_DEVICE_TYPE_ID, DEVICE_TYPE_ID, DEVICE_TYPE_MODULE_NAME));

ALTER TABLE CIRCUIT
	ADD (CONSTRAINT FK_CIRCUIT_VEND_COMPANYID FOREIGN KEY (VENDOR_COMPANY_ID) REFERENCES COMPANY (COMPANY_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE CIRCUIT
	ADD (CONSTRAINT FK_CIRCUIT_ALOC_COMPANYID FOREIGN KEY (ALOC_LEC_COMPANY_ID) REFERENCES COMPANY (COMPANY_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE CIRCUIT
	ADD (CONSTRAINT FK_CIRCUIT_ZLOC_COMPANY_ID FOREIGN KEY (ZLOC_LEC_COMPANY_ID) REFERENCES COMPANY (COMPANY_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE CIRCUIT
	ADD (CONSTRAINT FK_CIRCUIT_REF_END1CIRCUIT FOREIGN KEY (ALOC_PARENT_CIRCUIT_ID) REFERENCES CIRCUIT (CIRCUIT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE CIRCUIT
	ADD (CONSTRAINT FK_CIRCUIT_REF_END2CIRCUIT FOREIGN KEY (ZLOC_PARENT_CIRCUIT_ID) REFERENCES CIRCUIT (CIRCUIT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE COMPANY
	ADD (CONSTRAINT FK_COMPANY_PARENT_COMPANY_ID FOREIGN KEY (PARENT_COMPANY_ID) REFERENCES COMPANY (COMPANY_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE COMPANY_COLLECTION
	ADD (CONSTRAINT FK_COMP_COLL_COM_COLL_TYPE FOREIGN KEY (COMPANY_COLLECTION_TYPE) REFERENCES VAL_COMPANY_COLLECTION_TYPE (COMPANY_COLLECTION_TYPE));

ALTER TABLE COMPANY_COLLECTION_COMPANY
	ADD (CONSTRAINT FK_COMPANY_COLL_COMPANY_COLL_I FOREIGN KEY (COMPANY_COLLECTION_ID) REFERENCES COMPANY_COLLECTION (COMPANY_COLLECTION_ID));

ALTER TABLE COMPANY_COLLECTION_COMPANY
	ADD (CONSTRAINT FK_COMPANY_COLL_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID));

ALTER TABLE COMPANY_COLLECTION_HIER
	ADD (CONSTRAINT FK_COMP_COLL_COMP_COLL_ID FOREIGN KEY (COMPANY_COLLECTION_ID) REFERENCES COMPANY_COLLECTION (COMPANY_COLLECTION_ID));

ALTER TABLE COMPANY_COLLECTION_HIER
	ADD (CONSTRAINT FK_COMP_COLL_COMP_COLL_KID_ID FOREIGN KEY (CHILD_COMPANY_COLLECTION_ID) REFERENCES COMPANY_COLLECTION (COMPANY_COLLECTION_ID));

ALTER TABLE COMPANY_TYPE
	ADD (CONSTRAINT FK_COMPANY_TYPE_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE COMPANY_TYPE
	ADD (CONSTRAINT FK_COMPANY_TYPE_VAL FOREIGN KEY (COMPANY_TYPE) REFERENCES VAL_COMPANY_TYPE (COMPANY_TYPE));

ALTER TABLE COMPONENT
	ADD (CONSTRAINT FK_COMPONENT_COMP_TYPE_I FOREIGN KEY (COMPONENT_TYPE_ID) REFERENCES COMPONENT_TYPE (COMPONENT_TYPE_ID));

ALTER TABLE COMPONENT
	ADD (CONSTRAINT FK_COMPONENT_PRNT_SLT_ID FOREIGN KEY (PARENT_SLOT_ID) REFERENCES SLOT (SLOT_ID));

ALTER TABLE COMPONENT
	ADD (CONSTRAINT FK_COMPONENT_RACK_LOC_ID FOREIGN KEY (RACK_LOCATION_ID) REFERENCES RACK_LOCATION (RACK_LOCATION_ID));

ALTER TABLE COMPONENT_PROPERTY
	ADD (CONSTRAINT FK_COMP_PROP_INT_CMP_CONN_ID FOREIGN KEY (INTER_COMPONENT_CONNECTION_ID) REFERENCES INTER_COMPONENT_CONNECTION (INTER_COMPONENT_CONNECTION_ID));

ALTER TABLE COMPONENT_PROPERTY
	ADD (CONSTRAINT FK_COMP_PROP_CMP_ID FOREIGN KEY (COMPONENT_ID) REFERENCES COMPONENT (COMPONENT_ID));

ALTER TABLE COMPONENT_PROPERTY
	ADD (CONSTRAINT FK_COMP_PROP_COMP_FUNC FOREIGN KEY (COMPONENT_FUNCTION) REFERENCES VAL_COMPONENT_FUNCTION (COMPONENT_FUNCTION));

ALTER TABLE COMPONENT_PROPERTY
	ADD (CONSTRAINT FK_COMP_PROP_COMP_TYP_ID FOREIGN KEY (COMPONENT_TYPE_ID) REFERENCES COMPONENT_TYPE (COMPONENT_TYPE_ID)  DEFERRABLE);

ALTER TABLE COMPONENT_PROPERTY
	ADD (CONSTRAINT FK_COMP_PROP_PROP_NMTY FOREIGN KEY (COMPONENT_PROPERTY_NAME, COMPONENT_PROPERTY_TYPE) REFERENCES VAL_COMPONENT_PROPERTY (COMPONENT_PROPERTY_NAME, COMPONENT_PROPERTY_TYPE));

ALTER TABLE COMPONENT_PROPERTY
	ADD (CONSTRAINT FK_COMP_PROP_SLTFUNCID FOREIGN KEY (SLOT_FUNCTION) REFERENCES VAL_SLOT_FUNCTION (SLOT_FUNCTION));

ALTER TABLE COMPONENT_PROPERTY
	ADD (CONSTRAINT FK_COMP_PROP_SLT_SLT_ID FOREIGN KEY (SLOT_ID) REFERENCES SLOT (SLOT_ID));

ALTER TABLE COMPONENT_PROPERTY
	ADD (CONSTRAINT FK_COMP_PROP_SLT_TYP_ID FOREIGN KEY (SLOT_TYPE_ID) REFERENCES SLOT_TYPE (SLOT_TYPE_ID));

ALTER TABLE COMPONENT_TYPE
	ADD (CONSTRAINT FK_COMPONENT_TYPE_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID));

ALTER TABLE COMPONENT_TYPE
	ADD (CONSTRAINT FK_COMPONENT_TYPE_SLT_TYPE_ID FOREIGN KEY (SLOT_TYPE_ID) REFERENCES SLOT_TYPE (SLOT_TYPE_ID));

ALTER TABLE COMPONENT_TYPE_COMPONENT_FUNC
	ADD (CONSTRAINT FK_CMPTYPCF_COMP_FUNC FOREIGN KEY (COMPONENT_FUNCTION) REFERENCES VAL_COMPONENT_FUNCTION (COMPONENT_FUNCTION));

ALTER TABLE COMPONENT_TYPE_COMPONENT_FUNC
	ADD (CONSTRAINT FK_CMPTYPECF_COMP_TYP_ID FOREIGN KEY (COMPONENT_TYPE_ID) REFERENCES COMPONENT_TYPE (COMPONENT_TYPE_ID)  DEFERRABLE);

ALTER TABLE COMPONENT_TYPE_SLOT_TMPLT
	ADD (CONSTRAINT FK_COMP_TYP_SLT_TMPLT_CMPTYPID FOREIGN KEY (COMPONENT_TYPE_ID) REFERENCES COMPONENT_TYPE (COMPONENT_TYPE_ID)  DEFERRABLE);

ALTER TABLE COMPONENT_TYPE_SLOT_TMPLT
	ADD (CONSTRAINT FK_COMP_TYP_SLT_TMPLT_SLTTYPID FOREIGN KEY (SLOT_TYPE_ID) REFERENCES SLOT_TYPE (SLOT_TYPE_ID));

ALTER TABLE CONTRACT
	ADD (CONSTRAINT FK_CONTRACT_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE CONTRACT_TYPE
	ADD (CONSTRAINT FK_CONTRACT_CONTRACT_ID FOREIGN KEY (CONTRACT_ID) REFERENCES CONTRACT (CONTRACT_ID));

ALTER TABLE CONTRACT_TYPE
	ADD (CONSTRAINT FK_CONTRACT_CONTRACT_TYPE FOREIGN KEY (CONTRACT_TYPE) REFERENCES VAL_CONTRACT_TYPE (CONTRACT_TYPE));

ALTER TABLE DEPARTMENT
	ADD (CONSTRAINT FK_DEPT_USR_COL_ID FOREIGN KEY (ACCOUNT_COLLECTION_ID) REFERENCES ACCOUNT_COLLECTION (ACCOUNT_COLLECTION_ID));

ALTER TABLE DEPARTMENT
	ADD (CONSTRAINT FK_DEPT_MGR_ACCT_ID FOREIGN KEY (MANAGER_ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID));

ALTER TABLE DEPARTMENT
	ADD (CONSTRAINT FK_DEPT_BADGE_TYPE FOREIGN KEY (DEFAULT_BADGE_TYPE_ID) REFERENCES BADGE_TYPE (BADGE_TYPE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEPARTMENT
	ADD (CONSTRAINT FK_DEPT_COMPANY FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID)  DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE
	ADD (CONSTRAINT FK_CHASLOC_CHASS_DEVID FOREIGN KEY (CHASSIS_LOCATION_ID) REFERENCES CHASSIS_LOCATION (CHASSIS_LOCATION_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE DEVICE
	ADD (CONSTRAINT FK_DEVICE_ASSET_ID FOREIGN KEY (ASSET_ID) REFERENCES ASSET (ASSET_ID));

ALTER TABLE DEVICE
	ADD (CONSTRAINT FK_DEVICE_COMP_ID FOREIGN KEY (COMPONENT_ID) REFERENCES COMPONENT (COMPONENT_ID));

ALTER TABLE DEVICE
	ADD (CONSTRAINT FK_DEVICE_DEV_VAL_STATUS FOREIGN KEY (DEVICE_STATUS) REFERENCES VAL_DEVICE_STATUS (DEVICE_STATUS)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE
	ADD (CONSTRAINT FK_DEVICE_DEV_V_SVCENV FOREIGN KEY (SERVICE_ENVIRONMENT_ID) REFERENCES SERVICE_ENVIRONMENT (SERVICE_ENVIRONMENT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE
	ADD (CONSTRAINT FK_DEVICE_FK_VOE FOREIGN KEY (VOE_ID) REFERENCES VOE (VOE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE
	ADD (CONSTRAINT FK_DEVICE_ID_DNSRECORD FOREIGN KEY (IDENTIFYING_DNS_RECORD_ID) REFERENCES DNS_RECORD (DNS_RECORD_ID)  DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE
	ADD (CONSTRAINT FK_DEVICE_REF_PARENT_DEVICE FOREIGN KEY (PARENT_DEVICE_ID) REFERENCES DEVICE (DEVICE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE
	ADD (CONSTRAINT FK_DEVICE_REF_VOESYMBTRK FOREIGN KEY (VOE_SYMBOLIC_TRACK_ID) REFERENCES VOE_SYMBOLIC_TRACK (VOE_SYMBOLIC_TRACK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE
	ADD (CONSTRAINT FK_DEVICE_SITE_CODE FOREIGN KEY (SITE_CODE) REFERENCES SITE (SITE_CODE));

ALTER TABLE DEVICE
	ADD (CONSTRAINT FK_DEV_CHASS_LOC_ID_MOD_ENFC FOREIGN KEY (CHASSIS_LOCATION_ID, PARENT_DEVICE_ID, DEVICE_TYPE_ID) REFERENCES CHASSIS_LOCATION (CHASSIS_LOCATION_ID, CHASSIS_DEVICE_ID, MODULE_DEVICE_TYPE_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE DEVICE
	ADD (CONSTRAINT FK_DEV_DEVTP_ID FOREIGN KEY (DEVICE_TYPE_ID) REFERENCES DEVICE_TYPE (DEVICE_TYPE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE
	ADD (CONSTRAINT FK_DEV_OS_ID FOREIGN KEY (OPERATING_SYSTEM_ID) REFERENCES OPERATING_SYSTEM (OPERATING_SYSTEM_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE
	ADD (CONSTRAINT FK_DEV_RACK_LOCATION_ID FOREIGN KEY (RACK_LOCATION_ID) REFERENCES RACK_LOCATION (RACK_LOCATION_ID));

ALTER TABLE DEVICE
	ADD (CONSTRAINT FK_DEV_REF_MGMT_PROTO FOREIGN KEY (AUTO_MGMT_PROTOCOL) REFERENCES VAL_DEVICE_AUTO_MGMT_PROTOCOL (AUTO_MGMT_PROTOCOL)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE_COLLECTION
	ADD (CONSTRAINT FK_DEVC_DEVCTYP_ID FOREIGN KEY (DEVICE_COLLECTION_TYPE) REFERENCES VAL_DEVICE_COLLECTION_TYPE (DEVICE_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE_COLLECTION_ASSIGND_CERT
	ADD (CONSTRAINT FK_DEVCOLASCRT_DEVCOLID FOREIGN KEY (DEVICE_COLLECTION_ID) REFERENCES DEVICE_COLLECTION (DEVICE_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE_COLLECTION_ASSIGND_CERT
	ADD (CONSTRAINT FK_X509_CERTIFICATE_FILE_FMT FOREIGN KEY (X509_FILE_FORMAT) REFERENCES VAL_X509_CERTIFICATE_FILE_FMT (X509_FILE_FORMAT)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE_COLLECTION_ASSIGND_CERT
	ADD (CONSTRAINT FK_DEVCOLASCRT_FLOWNACCTID FOREIGN KEY (FILE_OWNER_ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE_COLLECTION_ASSIGND_CERT
	ADD (CONSTRAINT FK_DEVCOL_ASSCRT_ACCTCOLID FOREIGN KEY (FILE_GROUP_ACCT_COLLECTION_ID) REFERENCES ACCOUNT_COLLECTION (ACCOUNT_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE_COLLECTION_ASSIGND_CERT
	ADD (CONSTRAINT FK_X509_KEY_USG_ATTRBT_DVC FOREIGN KEY (X509_CERT_ID, X509_KEY_USG) REFERENCES X509_KEY_USAGE_ATTRIBUTE (X509_CERT_ID, X509_KEY_USG)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE_COLLECTION_ASSIGND_CERT
	ADD (CONSTRAINT FK_KEY_USG_REASON_FOR_ASSNG_D FOREIGN KEY (KEY_USAGE_REASON_FOR_ASSIGN) REFERENCES VAL_KEY_USG_REASON_FOR_ASSGN (KEY_USAGE_REASON_FOR_ASSIGN)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE_COLLECTION_DEVICE
	ADD (CONSTRAINT FK_DEVCOLLDEV_DEV_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE (DEVICE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE_COLLECTION_DEVICE
	ADD (CONSTRAINT FK_DEVCOLLDEV_DEV_COLID FOREIGN KEY (DEVICE_COLLECTION_ID) REFERENCES DEVICE_COLLECTION (DEVICE_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE_COLLECTION_HIER
	ADD (CONSTRAINT FK_DEVCOLLHIER_DEVCOL_ID FOREIGN KEY (DEVICE_COLLECTION_ID) REFERENCES DEVICE_COLLECTION (DEVICE_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE_COLLECTION_HIER
	ADD (CONSTRAINT FK_DEVCOLLHIER_PDEVCOL_ID FOREIGN KEY (PARENT_DEVICE_COLLECTION_ID) REFERENCES DEVICE_COLLECTION (DEVICE_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE_COLLECTION_SSH_KEY
	ADD (CONSTRAINT FK_DEV_COLL_SSH_KEY_SSH_KEY FOREIGN KEY (SSH_KEY_ID) REFERENCES SSH_KEY (SSH_KEY_ID));

ALTER TABLE DEVICE_COLLECTION_SSH_KEY
	ADD (CONSTRAINT FK_DEV_COLL_SSH_KEY_DEVCOLL FOREIGN KEY (DEVICE_COLLECTION_ID) REFERENCES DEVICE_COLLECTION (DEVICE_COLLECTION_ID));

ALTER TABLE DEVICE_COLLECTION_SSH_KEY
	ADD (CONSTRAINT FK_DEV_COLL_SSH_KEY_ACCT_COL FOREIGN KEY (ACCOUNT_COLLECTION_ID) REFERENCES ACCOUNT_COLLECTION (ACCOUNT_COLLECTION_ID));

ALTER TABLE DEVICE_ENCAPSULATION_DOMAIN
	ADD (CONSTRAINT FK_DEV_ENCAP_DOMAIN_DEVID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE (DEVICE_ID));

ALTER TABLE DEVICE_ENCAPSULATION_DOMAIN
	ADD (CONSTRAINT FK_DEV_ENCAP_DOMAIN_ENCAPTYP FOREIGN KEY (ENCAPSULATION_TYPE) REFERENCES VAL_ENCAPSULATION_TYPE (ENCAPSULATION_TYPE));

ALTER TABLE DEVICE_ENCAPSULATION_DOMAIN
	ADD (CONSTRAINT FK_DEV_ENCAP_DOMAIN_ENC_DOMTYP FOREIGN KEY (ENCAPSULATION_DOMAIN, ENCAPSULATION_TYPE) REFERENCES ENCAPSULATION_DOMAIN (ENCAPSULATION_DOMAIN, ENCAPSULATION_TYPE));

ALTER TABLE DEVICE_LAYER2_NETWORK
	ADD (CONSTRAINT FK_DEVICE_L2_NET_DEVID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE (DEVICE_ID));

ALTER TABLE DEVICE_LAYER2_NETWORK
	ADD (CONSTRAINT FK_DEVICE_L2_NET_L2NETID FOREIGN KEY (LAYER2_NETWORK_ID) REFERENCES LAYER2_NETWORK (LAYER2_NETWORK_ID));

ALTER TABLE DEVICE_MANAGEMENT_CONTROLLER
	ADD (CONSTRAINT FK_DVC_MGMT_CTRL_MGR_DEV_ID FOREIGN KEY (MANAGER_DEVICE_ID) REFERENCES DEVICE (DEVICE_ID));

ALTER TABLE DEVICE_MANAGEMENT_CONTROLLER
	ADD (CONSTRAINT FK_DEV_MGMT_CTLR_DEV_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE (DEVICE_ID));

ALTER TABLE DEVICE_MANAGEMENT_CONTROLLER
	ADD (CONSTRAINT FK_DEV_MGMT_CNTRL_VAL_CTRL_TYP FOREIGN KEY (DEVICE_MGMT_CONTROL_TYPE) REFERENCES VAL_DEVICE_MGMT_CTRL_TYPE (DEVICE_MGMT_CONTROL_TYPE));

ALTER TABLE DEVICE_NOTE
	ADD (CONSTRAINT FK_DEVICE_NOTE_DEVICE FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE (DEVICE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE_SSH_KEY
	ADD (CONSTRAINT FK_DEV_SSH_KEY_DEVICE_ID FOREIGN KEY (SSH_KEY_ID) REFERENCES SSH_KEY (SSH_KEY_ID));

ALTER TABLE DEVICE_SSH_KEY
	ADD (CONSTRAINT FK_DEV_SSH_KEY_SSH_KEY_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE (DEVICE_ID));

ALTER TABLE DEVICE_TICKET
	ADD (CONSTRAINT FK_DEV_TKT_DEV_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE (DEVICE_ID));

ALTER TABLE DEVICE_TICKET
	ADD (CONSTRAINT FK_DEV_TKT_TKT_SYSTEM FOREIGN KEY (TICKETING_SYSTEM_ID) REFERENCES TICKETING_SYSTEM (TICKETING_SYSTEM_ID));

ALTER TABLE DEVICE_TYPE
	ADD (CONSTRAINT FK_DEVICE_T_FK_DEVICE_VAL_PROC FOREIGN KEY (PROCESSOR_ARCHITECTURE) REFERENCES VAL_PROCESSOR_ARCHITECTURE (PROCESSOR_ARCHITECTURE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DEVICE_TYPE
	ADD (CONSTRAINT FK_DEVTYP_COMPANY FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE DEVICE_TYPE
	ADD (CONSTRAINT FK_DEV_TYP_TMPLT_DEV_TYP_ID FOREIGN KEY (TEMPLATE_DEVICE_ID) REFERENCES DEVICE (DEVICE_ID));

ALTER TABLE DEVICE_TYPE
	ADD (CONSTRAINT FK_FEVTYP_COMPONENT_ID FOREIGN KEY (COMPONENT_TYPE_ID) REFERENCES COMPONENT_TYPE (COMPONENT_TYPE_ID));

ALTER TABLE DEVICE_TYPE_MODULE
	ADD (CONSTRAINT FK_DEVT_MOD_DEV_TYPE_ID FOREIGN KEY (DEVICE_TYPE_ID) REFERENCES DEVICE_TYPE (DEVICE_TYPE_ID));

ALTER TABLE DEVICE_TYPE_MODULE_DEVICE_TYPE
	ADD (CONSTRAINT FK_DT_MOD_DEV_TYPE_DTMOD FOREIGN KEY (DEVICE_TYPE_ID, DEVICE_TYPE_MODULE_NAME) REFERENCES DEVICE_TYPE_MODULE (DEVICE_TYPE_ID, DEVICE_TYPE_MODULE_NAME));

ALTER TABLE DEVICE_TYPE_MODULE_DEVICE_TYPE
	ADD (CONSTRAINT FK_DT_MOD_DEV_TYPE_MOD_DTID FOREIGN KEY (MODULE_DEVICE_TYPE_ID) REFERENCES DEVICE_TYPE (DEVICE_TYPE_ID));

ALTER TABLE DNS_CHANGE_RECORD
	ADD (CONSTRAINT FK_DNS_CHG_DNS_DOMAIN FOREIGN KEY (DNS_DOMAIN_ID) REFERENCES DNS_DOMAIN (DNS_DOMAIN_ID));

ALTER TABLE DNS_DOMAIN
	ADD (CONSTRAINT FK_DNSDOM_DNSDOM_ID FOREIGN KEY (PARENT_DNS_DOMAIN_ID) REFERENCES DNS_DOMAIN (DNS_DOMAIN_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DNS_DOMAIN
	ADD (CONSTRAINT FK_DNS_DOM_DNS_DOM_TYP FOREIGN KEY (DNS_DOMAIN_TYPE) REFERENCES VAL_DNS_DOMAIN_TYPE (DNS_DOMAIN_TYPE));

ALTER TABLE DNS_DOMAIN_COLLECTION
	ADD (CONSTRAINT FK_DNS_DOM_COLL_TYP_VAL FOREIGN KEY (DNS_DOMAIN_COLLECTION_TYPE) REFERENCES VAL_DNS_DOMAIN_COLLECTION_TYPE (DNS_DOMAIN_COLLECTION_TYPE));

ALTER TABLE DNS_DOMAIN_COLLECTION_DNS_DOM
	ADD (CONSTRAINT FK_DNS_DOM_COLL_DNS_DOMID FOREIGN KEY (DNS_DOMAIN_ID) REFERENCES DNS_DOMAIN (DNS_DOMAIN_ID));

ALTER TABLE DNS_DOMAIN_COLLECTION_DNS_DOM
	ADD (CONSTRAINT FK_DNS_DOM_COLL_DNS_DOM_DNS_DO FOREIGN KEY (DNS_DOMAIN_COLLECTION_ID) REFERENCES DNS_DOMAIN_COLLECTION (DNS_DOMAIN_COLLECTION_ID));

ALTER TABLE DNS_DOMAIN_COLLECTION_HIER
	ADD (CONSTRAINT FK_DNS_DOMAIN_COLL_ID_CHILD FOREIGN KEY (CHILD_DNS_DOMAIN_COLLECTION_ID) REFERENCES DNS_DOMAIN_COLLECTION (DNS_DOMAIN_COLLECTION_ID));

ALTER TABLE DNS_DOMAIN_COLLECTION_HIER
	ADD (CONSTRAINT FK_DNS_DOMAIN_COLL_ID FOREIGN KEY (DNS_DOMAIN_COLLECTION_ID) REFERENCES DNS_DOMAIN_COLLECTION (DNS_DOMAIN_COLLECTION_ID));

ALTER TABLE DNS_RECORD
	ADD (CONSTRAINT FK_DNSREC_REF_DNS_REF_ID FOREIGN KEY (DNS_VALUE_RECORD_ID) REFERENCES DNS_RECORD (DNS_RECORD_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DNS_RECORD
	ADD (CONSTRAINT FK_DNS_RECORD_VDNSCLASS FOREIGN KEY (DNS_CLASS) REFERENCES VAL_DNS_CLASS (DNS_CLASS)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DNS_RECORD
	ADD (CONSTRAINT FK_DNSREC_VDNSSRVSRVC FOREIGN KEY (DNS_SRV_SERVICE) REFERENCES VAL_DNS_SRV_SERVICE (DNS_SRV_SERVICE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DNS_RECORD
	ADD (CONSTRAINT FK_DNSRECORD_VDNSTYPE FOREIGN KEY (DNS_TYPE) REFERENCES VAL_DNS_TYPE (DNS_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DNS_RECORD
	ADD (CONSTRAINT FK_DNSRECORD_DNSRECORD FOREIGN KEY (REFERENCE_DNS_RECORD_ID) REFERENCES DNS_RECORD (DNS_RECORD_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DNS_RECORD
	ADD (CONSTRAINT FK_DNSID_DNSDOM_ID FOREIGN KEY (DNS_DOMAIN_ID) REFERENCES DNS_DOMAIN (DNS_DOMAIN_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DNS_RECORD
	ADD (CONSTRAINT FK_DNSID_NBLK_ID FOREIGN KEY (NETBLOCK_ID) REFERENCES NETBLOCK (NETBLOCK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DNS_RECORD_RELATION
	ADD (CONSTRAINT FK_DNSREC_REF_VDNSRECRLTNTYPE FOREIGN KEY (DNS_RECORD_RELATION_TYPE) REFERENCES VAL_DNS_RECORD_RELATION_TYPE (DNS_RECORD_RELATION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DNS_RECORD_RELATION
	ADD (CONSTRAINT FK_DNS_REC_REF_DNS_REC_RLTN FOREIGN KEY (DNS_RECORD_ID) REFERENCES DNS_RECORD (DNS_RECORD_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE DNS_RECORD_RELATION
	ADD (CONSTRAINT FK_DNSREC_REF_DNSRECRLTN_RL_ID FOREIGN KEY (RELATED_DNS_RECORD_ID) REFERENCES DNS_RECORD (DNS_RECORD_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ENCAPSULATION_DOMAIN
	ADD (CONSTRAINT FK_ENCAP_DOMAIN_ENCAP_TYP FOREIGN KEY (ENCAPSULATION_TYPE) REFERENCES VAL_ENCAPSULATION_TYPE (ENCAPSULATION_TYPE));

ALTER TABLE ENCAPSULATION_RANGE
	ADD (CONSTRAINT FK_ENCAP_RANGE_PARENT_ENCAP_ID FOREIGN KEY (PARENT_ENCAPSULATION_RANGE_ID) REFERENCES ENCAPSULATION_RANGE (ENCAPSULATION_RANGE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ENCAPSULATION_RANGE
	ADD (CONSTRAINT FK_ENCAP_RANGE_SITECODE FOREIGN KEY (SITE_CODE) REFERENCES SITE (SITE_CODE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ENCRYPTION_KEY
	ADD (CONSTRAINT FK_ENCKEY_ENCKEYPURPOSE_VAL FOREIGN KEY (ENCRYPTION_KEY_PURPOSE, ENCRYPTION_KEY_PURPOSE_VERSION) REFERENCES VAL_ENCRYPTION_KEY_PURPOSE (ENCRYPTION_KEY_PURPOSE, ENCRYPTION_KEY_PURPOSE_VERSION)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE ENCRYPTION_KEY
	ADD (CONSTRAINT FK_ENCKEY_ENCMETHOD_VAL FOREIGN KEY (ENCRYPTION_METHOD) REFERENCES VAL_ENCRYPTION_METHOD (ENCRYPTION_METHOD)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE INTER_COMPONENT_CONNECTION
	ADD (CONSTRAINT FK_INTERCOMP_CONN_SLOT1_ID FOREIGN KEY (SLOT1_ID) REFERENCES SLOT (SLOT_ID));

ALTER TABLE INTER_COMPONENT_CONNECTION
	ADD (CONSTRAINT FK_INTERCOMP_CONN_SLOT2_ID FOREIGN KEY (SLOT2_ID) REFERENCES SLOT (SLOT_ID));

ALTER TABLE INTER_COMPONENT_CONNECTION
	ADD (CONSTRAINT FK_INTERCOM_CONN_CIRC_ID FOREIGN KEY (CIRCUIT_ID) REFERENCES CIRCUIT (CIRCUIT_ID));

ALTER TABLE IP_GROUP
	ADD (CONSTRAINT FK_IP_GRP_IP_GRP_PROTO FOREIGN KEY (IP_GROUP_PROTOCOL) REFERENCES VAL_IP_GROUP_PROTOCOL (IP_GROUP_PROTOCOL));

ALTER TABLE IP_GROUP
	ADD (CONSTRAINT FK_IP_PROTO_NETBLK_COLL_ID FOREIGN KEY (NETBLOCK_COLLECTION_ID) REFERENCES NETBLOCK_COLLECTION (NETBLOCK_COLLECTION_ID));

ALTER TABLE IP_GROUP_NETWORK_INTERFACE
	ADD (CONSTRAINT FK_IP_GRP_NETINT_IP_GRP_ID FOREIGN KEY (IP_GROUP_ID) REFERENCES IP_GROUP (IP_GROUP_ID));

ALTER TABLE IP_GROUP_NETWORK_INTERFACE
	ADD (CONSTRAINT FK_IPGRP_NETINT_NETINT_ID FOREIGN KEY (NETWORK_INTERFACE_ID) REFERENCES NETWORK_INTERFACE (NETWORK_INTERFACE_ID));

ALTER TABLE KLOGIN
	ADD (CONSTRAINT FK_KLGN_ACCT_ID FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE KLOGIN
	ADD (CONSTRAINT FK_KLGN_ACCT_DST_ID FOREIGN KEY (DEST_ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE KLOGIN
	ADD (CONSTRAINT FK_KLOGIN_REALMID FOREIGN KEY (KRB_REALM_ID) REFERENCES KERBEROS_REALM (KRB_REALM_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE KLOGIN
	ADD (CONSTRAINT FK_KLOGIN_REF_ACCT_COL_ID FOREIGN KEY (ACCOUNT_COLLECTION_ID) REFERENCES ACCOUNT_COLLECTION (ACCOUNT_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE KLOGIN_MCLASS
	ADD (CONSTRAINT FK_KLGNMCL_KLOGN_ID FOREIGN KEY (KLOGIN_ID) REFERENCES KLOGIN (KLOGIN_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE KLOGIN_MCLASS
	ADD (CONSTRAINT FK_KLGNMCL_DEVCOLL_ID FOREIGN KEY (DEVICE_COLLECTION_ID) REFERENCES DEVICE_COLLECTION (DEVICE_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE L2_NETWORK_COLL_L2_NETWORK
	ADD (CONSTRAINT FK_L2NETCL2NET_COLLID FOREIGN KEY (LAYER2_NETWORK_COLLECTION_ID) REFERENCES LAYER2_NETWORK_COLLECTION (LAYER2_NETWORK_COLLECTION_ID));

ALTER TABLE L2_NETWORK_COLL_L2_NETWORK
	ADD (CONSTRAINT FK_L2NETCL2NET_L2NETID FOREIGN KEY (LAYER2_NETWORK_ID) REFERENCES LAYER2_NETWORK (LAYER2_NETWORK_ID));

ALTER TABLE L3_NETWORK_COLL_L3_NETWORK
	ADD (CONSTRAINT FK_L3NETCOL_L3_NET_L3NETCOLID FOREIGN KEY (LAYER3_NETWORK_COLLECTION_ID) REFERENCES LAYER3_NETWORK_COLLECTION (LAYER3_NETWORK_COLLECTION_ID));

ALTER TABLE L3_NETWORK_COLL_L3_NETWORK
	ADD (CONSTRAINT FK_L3NETCOL_L3_NET_L3NETID FOREIGN KEY (LAYER3_NETWORK_ID) REFERENCES LAYER3_NETWORK (LAYER3_NETWORK_ID));

ALTER TABLE LAYER2_CONNECTION
	ADD (CONSTRAINT FK_L2_CONN_L1PORT FOREIGN KEY (LOGICAL_PORT1_ID) REFERENCES LOGICAL_PORT (LOGICAL_PORT_ID));

ALTER TABLE LAYER2_CONNECTION
	ADD (CONSTRAINT FK_L2_CONN_L2PORT FOREIGN KEY (LOGICAL_PORT2_ID) REFERENCES LOGICAL_PORT (LOGICAL_PORT_ID));

ALTER TABLE LAYER2_CONNECTION_L2_NETWORK
	ADD (CONSTRAINT FK_L2CL2N_L2NET_ID_ENCAP_TYP FOREIGN KEY (LAYER2_NETWORK_ID, ENCAPSULATION_TYPE) REFERENCES LAYER2_NETWORK (LAYER2_NETWORK_ID, ENCAPSULATION_TYPE));

ALTER TABLE LAYER2_CONNECTION_L2_NETWORK
	ADD (CONSTRAINT FK_L2C_L2N_ENCAP_MODE_TYPE FOREIGN KEY (ENCAPSULATION_MODE, ENCAPSULATION_TYPE) REFERENCES VAL_ENCAPSULATION_MODE (ENCAPSULATION_MODE, ENCAPSULATION_TYPE));

ALTER TABLE LAYER2_CONNECTION_L2_NETWORK
	ADD (CONSTRAINT FK_L2C_L2N_L2CONNID FOREIGN KEY (LAYER2_CONNECTION_ID) REFERENCES LAYER2_CONNECTION (LAYER2_CONNECTION_ID));

ALTER TABLE LAYER2_CONNECTION_L2_NETWORK
	ADD (CONSTRAINT FK_L2C_L2N_L2NETID FOREIGN KEY (LAYER2_NETWORK_ID) REFERENCES LAYER2_NETWORK (LAYER2_NETWORK_ID));

ALTER TABLE LAYER2_NETWORK
	ADD (CONSTRAINT FK_L2_NET_ENCAP_DOMAIN FOREIGN KEY (ENCAPSULATION_DOMAIN, ENCAPSULATION_TYPE) REFERENCES ENCAPSULATION_DOMAIN (ENCAPSULATION_DOMAIN, ENCAPSULATION_TYPE));

ALTER TABLE LAYER2_NETWORK
	ADD (CONSTRAINT FK_L2_NET_ENCAP_RANGE_ID FOREIGN KEY (ENCAPSULATION_RANGE_ID) REFERENCES ENCAPSULATION_RANGE (ENCAPSULATION_RANGE_ID));

ALTER TABLE LAYER2_NETWORK_COLLECTION
	ADD (CONSTRAINT FK_L2NETCOLL_TYPE FOREIGN KEY (LAYER2_NETWORK_COLLECTION_TYPE) REFERENCES VAL_LAYER2_NETWORK_COLL_TYPE (LAYER2_NETWORK_COLLECTION_TYPE));

ALTER TABLE LAYER2_NETWORK_COLLECTION_HIER
	ADD (CONSTRAINT FK_L2NET_COLLHIER_CHLDL2NET FOREIGN KEY (CHILD_L2_NETWORK_COLL_ID) REFERENCES LAYER2_NETWORK_COLLECTION (LAYER2_NETWORK_COLLECTION_ID));

ALTER TABLE LAYER2_NETWORK_COLLECTION_HIER
	ADD (CONSTRAINT FK_L2NET_COLLHIER_L2NET FOREIGN KEY (LAYER2_NETWORK_COLLECTION_ID) REFERENCES LAYER2_NETWORK_COLLECTION (LAYER2_NETWORK_COLLECTION_ID));

ALTER TABLE LAYER3_NETWORK
	ADD (CONSTRAINT FK_L3NET_L2NET FOREIGN KEY (LAYER2_NETWORK_ID) REFERENCES LAYER2_NETWORK (LAYER2_NETWORK_ID));

ALTER TABLE LAYER3_NETWORK
	ADD (CONSTRAINT FK_L3NET_RNDV_PT_NBLK_ID FOREIGN KEY (RENDEZVOUS_NETBLOCK_ID) REFERENCES NETBLOCK (NETBLOCK_ID));

ALTER TABLE LAYER3_NETWORK
	ADD (CONSTRAINT FK_L3_NET_DEF_GATE_NBID FOREIGN KEY (DEFAULT_GATEWAY_NETBLOCK_ID) REFERENCES NETBLOCK (NETBLOCK_ID));

ALTER TABLE LAYER3_NETWORK
	ADD (CONSTRAINT FK_LAYER3_NETWORK_NETBLOCK_ID FOREIGN KEY (NETBLOCK_ID) REFERENCES NETBLOCK (NETBLOCK_ID));

ALTER TABLE LAYER3_NETWORK_COLLECTION
	ADD (CONSTRAINT FK_L3_NETCOL_NETCOL_TYPE FOREIGN KEY (LAYER3_NETWORK_COLLECTION_TYPE) REFERENCES VAL_LAYER3_NETWORK_COLL_TYPE (LAYER3_NETWORK_COLLECTION_TYPE));

ALTER TABLE LAYER3_NETWORK_COLLECTION_HIER
	ADD (CONSTRAINT FK_L3NETHIERL3NETID FOREIGN KEY (LAYER3_NETWORK_COLLECTION_ID) REFERENCES LAYER3_NETWORK_COLLECTION (LAYER3_NETWORK_COLLECTION_ID));

ALTER TABLE LAYER3_NETWORK_COLLECTION_HIER
	ADD (CONSTRAINT FK_L3NETHIER_CHLD_L3NETID FOREIGN KEY (CHILD_L3_NETWORK_COLL_ID) REFERENCES LAYER3_NETWORK_COLLECTION (LAYER3_NETWORK_COLLECTION_ID));

ALTER TABLE LOGICAL_PORT
	ADD (CONSTRAINT FK_LOGICAL_PORT_LG_PORT_TYPE FOREIGN KEY (LOGICAL_PORT_TYPE) REFERENCES VAL_LOGICAL_PORT_TYPE (LOGICAL_PORT_TYPE));

ALTER TABLE LOGICAL_PORT
	ADD (CONSTRAINT FK_LOGICAL_PORT_PARENT_ID FOREIGN KEY (PARENT_LOGICAL_PORT_ID) REFERENCES LOGICAL_PORT (LOGICAL_PORT_ID));

ALTER TABLE LOGICAL_PORT_SLOT
	ADD (CONSTRAINT FK_LGL_PORT_SLOT_LGL_PORT_ID FOREIGN KEY (LOGICAL_PORT_ID) REFERENCES LOGICAL_PORT (LOGICAL_PORT_ID));

ALTER TABLE LOGICAL_PORT_SLOT
	ADD (CONSTRAINT FK_LGL_PORT_SLOT_SLOT_ID FOREIGN KEY (SLOT_ID) REFERENCES SLOT (SLOT_ID));

ALTER TABLE LOGICAL_VOLUME
	ADD (CONSTRAINT FK_LOG_VOLUME_LOG_VOL_TYPE FOREIGN KEY (LOGICAL_VOLUME_TYPE) REFERENCES VAL_LOGICAL_VOLUME_TYPE (LOGICAL_VOLUME_TYPE));

ALTER TABLE LOGICAL_VOLUME
	ADD (CONSTRAINT FK_LOGVOL_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE (DEVICE_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE LOGICAL_VOLUME
	ADD (CONSTRAINT FK_LOGVOL_FSTYPE FOREIGN KEY (FILESYSTEM_TYPE) REFERENCES VAL_FILESYSTEM_TYPE (FILESYSTEM_TYPE)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE LOGICAL_VOLUME
	ADD (CONSTRAINT FK_LOGVOL_VGID FOREIGN KEY (VOLUME_GROUP_ID, DEVICE_ID) REFERENCES VOLUME_GROUP (VOLUME_GROUP_ID, DEVICE_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE LOGICAL_VOLUME_PROPERTY
	ADD (CONSTRAINT FK_LVOL_PROP_LVID_FSTYP FOREIGN KEY (LOGICAL_VOLUME_ID, FILESYSTEM_TYPE) REFERENCES LOGICAL_VOLUME (LOGICAL_VOLUME_ID, FILESYSTEM_TYPE)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE LOGICAL_VOLUME_PROPERTY
	ADD (CONSTRAINT FK_LVOL_PROP_LVPN_FSTY FOREIGN KEY (LOGICAL_VOLUME_PROPERTY_NAME, FILESYSTEM_TYPE) REFERENCES VAL_LOGICAL_VOLUME_PROPERTY (LOGICAL_VOLUME_PROPERTY_NAME, FILESYSTEM_TYPE)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE LOGICAL_VOLUME_PROPERTY
	ADD (CONSTRAINT FK_LVPROP_PURPOSE FOREIGN KEY (LOGICAL_VOLUME_PURPOSE) REFERENCES VAL_LOGICAL_VOLUME_PURPOSE (LOGICAL_VOLUME_PURPOSE));

ALTER TABLE LOGICAL_VOLUME_PROPERTY
	ADD (CONSTRAINT FK_LVPROP_TYPE FOREIGN KEY (LOGICAL_VOLUME_TYPE) REFERENCES VAL_LOGICAL_VOLUME_TYPE (LOGICAL_VOLUME_TYPE));

ALTER TABLE LOGICAL_VOLUME_PURPOSE
	ADD (CONSTRAINT FK_LVPURP_LVID FOREIGN KEY (LOGICAL_VOLUME_ID) REFERENCES LOGICAL_VOLUME (LOGICAL_VOLUME_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE LOGICAL_VOLUME_PURPOSE
	ADD (CONSTRAINT FK_LVPURP_VAL_LGPUPRP FOREIGN KEY (LOGICAL_VOLUME_PURPOSE) REFERENCES VAL_LOGICAL_VOLUME_PURPOSE (LOGICAL_VOLUME_PURPOSE)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE MLAG_PEERING
	ADD (CONSTRAINT FK_MLAG_PEERING_DEVID1 FOREIGN KEY (DEVICE1_ID) REFERENCES DEVICE (DEVICE_ID));

ALTER TABLE MLAG_PEERING
	ADD (CONSTRAINT FK_MLAG_PEERING_DEVID2 FOREIGN KEY (DEVICE2_ID) REFERENCES DEVICE (DEVICE_ID));

ALTER TABLE NETBLOCK
	ADD (CONSTRAINT FK_NETBLOCK_COMPANY FOREIGN KEY (NIC_COMPANY_ID) REFERENCES COMPANY (COMPANY_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE NETBLOCK
	ADD (CONSTRAINT FK_NBLK_IP_UNIVERSE_ID FOREIGN KEY (IP_UNIVERSE_ID) REFERENCES IP_UNIVERSE (IP_UNIVERSE_ID));

ALTER TABLE NETBLOCK
	ADD (CONSTRAINT FK_NETBLOCK_NBLK_TYP FOREIGN KEY (NETBLOCK_TYPE) REFERENCES VAL_NETBLOCK_TYPE (NETBLOCK_TYPE));

ALTER TABLE NETBLOCK
	ADD (CONSTRAINT FK_NETBLOCK_V_NETBLOCK_STAT FOREIGN KEY (NETBLOCK_STATUS) REFERENCES VAL_NETBLOCK_STATUS (NETBLOCK_STATUS)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE NETBLOCK
	ADD (CONSTRAINT FK_NETBLK_NETBLK_PARID FOREIGN KEY (PARENT_NETBLOCK_ID) REFERENCES NETBLOCK (NETBLOCK_ID)  DEFERRABLE  INITIALLY DEFERRED  ENABLE  VALIDATE);

ALTER TABLE NETBLOCK_COLLECTION
	ADD (CONSTRAINT FK_NBLK_COLL_V_NBLK_C_TYP FOREIGN KEY (NETBLOCK_COLLECTION_TYPE) REFERENCES VAL_NETBLOCK_COLLECTION_TYPE (NETBLOCK_COLLECTION_TYPE));

ALTER TABLE NETBLOCK_COLLECTION_HIER
	ADD (CONSTRAINT FK_NBLK_C_HIER_CHLD_NC FOREIGN KEY (CHILD_NETBLOCK_COLLECTION_ID) REFERENCES NETBLOCK_COLLECTION (NETBLOCK_COLLECTION_ID));

ALTER TABLE NETBLOCK_COLLECTION_HIER
	ADD (CONSTRAINT FK_NBLK_C_HIER_PRNT_NC FOREIGN KEY (NETBLOCK_COLLECTION_ID) REFERENCES NETBLOCK_COLLECTION (NETBLOCK_COLLECTION_ID));

ALTER TABLE NETBLOCK_COLLECTION_NETBLOCK
	ADD (CONSTRAINT FK_NBLK_COL_NBLK_NBLKID FOREIGN KEY (NETBLOCK_ID) REFERENCES NETBLOCK (NETBLOCK_ID));

ALTER TABLE NETBLOCK_COLLECTION_NETBLOCK
	ADD (CONSTRAINT FK_NBLK_COL_NBLK_NBCOLID FOREIGN KEY (NETBLOCK_COLLECTION_ID) REFERENCES NETBLOCK_COLLECTION (NETBLOCK_COLLECTION_ID));

ALTER TABLE NETWORK_INTERFACE
	ADD (CONSTRAINT FK_NETINT_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE (DEVICE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE NETWORK_INTERFACE
	ADD (CONSTRAINT FK_NETINT_REF_PARENTNETINT FOREIGN KEY (PARENT_NETWORK_INTERFACE_ID) REFERENCES NETWORK_INTERFACE (NETWORK_INTERFACE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE NETWORK_INTERFACE
	ADD (CONSTRAINT FK_NETINT_NETBLK_V4ID FOREIGN KEY (NETBLOCK_ID) REFERENCES NETBLOCK (NETBLOCK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE NETWORK_INTERFACE
	ADD (CONSTRAINT FK_NETINT_SLOT_ID FOREIGN KEY (SLOT_ID) REFERENCES SLOT (SLOT_ID));

ALTER TABLE NETWORK_INTERFACE
	ADD (CONSTRAINT FK_NETINT_NETINTTYP_ID FOREIGN KEY (NETWORK_INTERFACE_TYPE) REFERENCES VAL_NETWORK_INTERFACE_TYPE (NETWORK_INTERFACE_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE NETWORK_INTERFACE
	ADD (CONSTRAINT FK_NET_INT_LGL_PORT_ID FOREIGN KEY (LOGICAL_PORT_ID) REFERENCES LOGICAL_PORT (LOGICAL_PORT_ID));

ALTER TABLE NETWORK_INTERFACE
	ADD (CONSTRAINT FK_NET_INT_PHYS_PORT_ID FOREIGN KEY (PHYSICAL_PORT_ID) REFERENCES SLOT (SLOT_ID));

ALTER TABLE NETWORK_INTERFACE_NETBLOCK
	ADD (CONSTRAINT FK_NETINT_NB_NBLK_ID FOREIGN KEY (NETWORK_INTERFACE_ID) REFERENCES NETWORK_INTERFACE (NETWORK_INTERFACE_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE NETWORK_INTERFACE_NETBLOCK
	ADD (CONSTRAINT FK_NETINT_NB_NETINT_ID FOREIGN KEY (NETBLOCK_ID) REFERENCES NETBLOCK (NETBLOCK_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE NETWORK_INTERFACE_PURPOSE
	ADD (CONSTRAINT FK_NETINT_PURPOSE_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE (DEVICE_ID));

ALTER TABLE NETWORK_INTERFACE_PURPOSE
	ADD (CONSTRAINT FK_NETINT_PURPOSE_VAL_NETINT_P FOREIGN KEY (NETWORK_INTERFACE_PURPOSE) REFERENCES VAL_NETWORK_INTERFACE_PURPOSE (NETWORK_INTERFACE_PURPOSE));

ALTER TABLE NETWORK_INTERFACE_PURPOSE
	ADD (CONSTRAINT FK_NETINT_PURP_DEV_NI_ID FOREIGN KEY (NETWORK_INTERFACE_ID, DEVICE_ID) REFERENCES NETWORK_INTERFACE (NETWORK_INTERFACE_ID, DEVICE_ID));

ALTER TABLE NETWORK_RANGE
	ADD (CONSTRAINT FK_NET_RANGE_DNS_DOMAIN_ID FOREIGN KEY (DNS_DOMAIN_ID) REFERENCES DNS_DOMAIN (DNS_DOMAIN_ID));

ALTER TABLE NETWORK_RANGE
	ADD (CONSTRAINT FK_NETRNG_NETRNG_TYP FOREIGN KEY (NETWORK_RANGE_TYPE) REFERENCES VAL_NETWORK_RANGE_TYPE (NETWORK_RANGE_TYPE));

ALTER TABLE NETWORK_RANGE
	ADD (CONSTRAINT FK_NETRNG_PRNGNBLKID FOREIGN KEY (PARENT_NETBLOCK_ID) REFERENCES NETBLOCK (NETBLOCK_ID));

ALTER TABLE NETWORK_RANGE
	ADD (CONSTRAINT FK_NET_RANGE_START_NETBLOCK FOREIGN KEY (START_NETBLOCK_ID) REFERENCES NETBLOCK (NETBLOCK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE NETWORK_RANGE
	ADD (CONSTRAINT FK_NET_RANGE_STOP_NETBLOCK FOREIGN KEY (STOP_NETBLOCK_ID) REFERENCES NETBLOCK (NETBLOCK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE NETWORK_SERVICE
	ADD (CONSTRAINT FK_NETSVC_NETSVCTYP_ID FOREIGN KEY (NETWORK_SERVICE_TYPE) REFERENCES VAL_NETWORK_SERVICE_TYPE (NETWORK_SERVICE_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE NETWORK_SERVICE
	ADD (CONSTRAINT FK_NETSVC_CSVCENV FOREIGN KEY (SERVICE_ENVIRONMENT_ID) REFERENCES SERVICE_ENVIRONMENT (SERVICE_ENVIRONMENT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE NETWORK_SERVICE
	ADD (CONSTRAINT FK_NETSVC_DNSID_ID FOREIGN KEY (DNS_RECORD_ID) REFERENCES DNS_RECORD (DNS_RECORD_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE NETWORK_SERVICE
	ADD (CONSTRAINT FK_NETSVC_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE (DEVICE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE NETWORK_SERVICE
	ADD (CONSTRAINT FK_NETSVC_NETINT_ID FOREIGN KEY (NETWORK_INTERFACE_ID) REFERENCES NETWORK_INTERFACE (NETWORK_INTERFACE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE OPERATING_SYSTEM
	ADD (CONSTRAINT FK_OS_COMPANY FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE OPERATING_SYSTEM
	ADD (CONSTRAINT FK_OS_FK_VAL_DEV_ARCH FOREIGN KEY (PROCESSOR_ARCHITECTURE) REFERENCES VAL_PROCESSOR_ARCHITECTURE (PROCESSOR_ARCHITECTURE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE OPERATING_SYSTEM
	ADD (CONSTRAINT FK_OS_OS_FAMILY FOREIGN KEY (OPERATING_SYSTEM_FAMILY) REFERENCES VAL_OPERATING_SYSTEM_FAMILY (OPERATING_SYSTEM_FAMILY));

ALTER TABLE OPERATING_SYSTEM
	ADD (CONSTRAINT FK_OS_REF_SWPKGREPOS FOREIGN KEY (SW_PACKAGE_REPOSITORY_ID) REFERENCES SW_PACKAGE_REPOSITORY (SW_PACKAGE_REPOSITORY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE OPERATING_SYSTEM_SNAPSHOT
	ADD (CONSTRAINT FK_OS_SNAP_OSID FOREIGN KEY (OPERATING_SYSTEM_ID) REFERENCES OPERATING_SYSTEM (OPERATING_SYSTEM_ID));

ALTER TABLE OPERATING_SYSTEM_SNAPSHOT
	ADD (CONSTRAINT FK_OS_SNAP_SNAP_TYPE FOREIGN KEY (OPERATING_SYSTEM_SNAPSHOT_TYPE) REFERENCES VAL_OS_SNAPSHOT_TYPE (OPERATING_SYSTEM_SNAPSHOT_TYPE));

ALTER TABLE PERSON
	ADD (CONSTRAINT FK_DIET_VAL_DIET FOREIGN KEY (DIET) REFERENCES VAL_DIET (DIET));

ALTER TABLE PERSON_ACCOUNT_REALM_COMPANY
	ADD (CONSTRAINT FK_AC_AC_RLM_CPY_ACT_RLM_CPY FOREIGN KEY (ACCOUNT_REALM_ID, COMPANY_ID) REFERENCES ACCOUNT_REALM_COMPANY (ACCOUNT_REALM_ID, COMPANY_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE PERSON_ACCOUNT_REALM_COMPANY
	ADD (CONSTRAINT FK_PERSON_ACCT_RLM_CMPY_PERSNI FOREIGN KEY (PERSON_ID) REFERENCES PERSON (PERSON_ID));

ALTER TABLE PERSON_AUTH_QUESTION
	ADD (CONSTRAINT FK_PERSON_AUTH_QUESTION_PRSNID FOREIGN KEY (PERSON_ID) REFERENCES PERSON (PERSON_ID));

ALTER TABLE PERSON_AUTH_QUESTION
	ADD (CONSTRAINT FK_PERSON_AQ_VAL_AUTH_QUES FOREIGN KEY (AUTH_QUESTION_ID) REFERENCES VAL_AUTH_QUESTION (AUTH_QUESTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE PERSON_COMPANY
	ADD (CONSTRAINT FK_PERSON_COMPANY_MGRPRSN_ID FOREIGN KEY (MANAGER_PERSON_ID) REFERENCES PERSON (PERSON_ID));

ALTER TABLE PERSON_COMPANY
	ADD (CONSTRAINT FK_PERSON_COMPANY_SPRPRSN_ID FOREIGN KEY (SUPERVISOR_PERSON_ID) REFERENCES PERSON (PERSON_ID));

ALTER TABLE PERSON_COMPANY
	ADD (CONSTRAINT FK_PERSON_COMPANY_PRSNCMPY_STA FOREIGN KEY (PERSON_COMPANY_STATUS) REFERENCES VAL_PERSON_STATUS (PERSON_STATUS));

ALTER TABLE PERSON_COMPANY
	ADD (CONSTRAINT FK_PERSON_COMPANY_PRSNCMPYRELT FOREIGN KEY (PERSON_COMPANY_RELATION) REFERENCES VAL_PERSON_COMPANY_RELATION (PERSON_COMPANY_RELATION));

ALTER TABLE PERSON_COMPANY
	ADD (CONSTRAINT FK_PERSON_COMPANY_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE PERSON_COMPANY
	ADD (CONSTRAINT FK_PERSON_COMPANY_PRSNID FOREIGN KEY (PERSON_ID) REFERENCES PERSON (PERSON_ID));

ALTER TABLE PERSON_COMPANY_ATTR
	ADD (CONSTRAINT FK_PERS_COMP_ATTR_PERSON_COMP_ FOREIGN KEY (COMPANY_ID, PERSON_ID) REFERENCES PERSON_COMPANY (COMPANY_ID, PERSON_ID));

ALTER TABLE PERSON_COMPANY_ATTR
	ADD (CONSTRAINT FK_PERSON_COMP_ATT_PERS_PERSON FOREIGN KEY (ATTRIBUTE_VALUE_PERSON_ID) REFERENCES PERSON (PERSON_ID));

ALTER TABLE PERSON_COMPANY_ATTR
	ADD (CONSTRAINT FK_PERSON_COMP_ATTR_VAL_NAME FOREIGN KEY (PERSON_COMPANY_ATTR_NAME) REFERENCES VAL_PERSON_COMPANY_ATTR_NAME (PERSON_COMPANY_ATTR_NAME));

ALTER TABLE PERSON_COMPANY_BADGE
	ADD (CONSTRAINT FK_PERSON_COMPANY_BADGE_PC FOREIGN KEY (COMPANY_ID, PERSON_ID) REFERENCES PERSON_COMPANY (COMPANY_ID, PERSON_ID));

ALTER TABLE PERSON_CONTACT
	ADD (CONSTRAINT FK_PRSN_CNTCT_PRSCN_LOC FOREIGN KEY (PERSON_CONTACT_LOCATION_TYPE) REFERENCES VAL_PERSON_CONTACT_LOC_TYPE (PERSON_CONTACT_LOCATION_TYPE));

ALTER TABLE PERSON_CONTACT
	ADD (CONSTRAINT FK_PRSN_CONTECT_CR_CMPYID FOREIGN KEY (PERSON_CONTACT_CR_COMPANY_ID) REFERENCES COMPANY (COMPANY_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE PERSON_CONTACT
	ADD (CONSTRAINT FK_PERSON_CONTACT_TYP_TEC FOREIGN KEY (PERSON_CONTACT_TECHNOLOGY, PERSON_CONTACT_TYPE) REFERENCES VAL_PERSON_CONTACT_TECHNOLOGY (PERSON_CONTACT_TECHNOLOGY, PERSON_CONTACT_TYPE));

ALTER TABLE PERSON_CONTACT
	ADD (CONSTRAINT FK_PERSON_CONTACT_PERSON_ID FOREIGN KEY (PERSON_ID) REFERENCES PERSON (PERSON_ID));

ALTER TABLE PERSON_CONTACT
	ADD (CONSTRAINT FK_PERSON_TYPE_ISO_CODE FOREIGN KEY (ISO_COUNTRY_CODE) REFERENCES VAL_COUNTRY_CODE (ISO_COUNTRY_CODE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE PERSON_IMAGE
	ADD (CONSTRAINT FK_PERSON_IMAGE_PERSONID FOREIGN KEY (PERSON_ID) REFERENCES PERSON (PERSON_ID));

ALTER TABLE PERSON_IMAGE
	ADD (CONSTRAINT FK_PERSON_FK_PERSON_VAL_IMAG FOREIGN KEY (IMAGE_TYPE) REFERENCES VAL_IMAGE_TYPE (IMAGE_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE PERSON_IMAGE_USAGE
	ADD (CONSTRAINT FK_PERSON_IMG_USG_PERSON_IMG_I FOREIGN KEY (PERSON_IMAGE_ID) REFERENCES PERSON_IMAGE (PERSON_IMAGE_ID));

ALTER TABLE PERSON_IMAGE_USAGE
	ADD (CONSTRAINT FK_PERSON_IMG_USG_VAL_PRSN_IMG FOREIGN KEY (PERSON_IMAGE_USAGE) REFERENCES VAL_PERSON_IMAGE_USAGE (PERSON_IMAGE_USAGE));

ALTER TABLE PERSON_LOCATION
	ADD (CONSTRAINT FK_PERSLOC_PERSID FOREIGN KEY (PERSON_ID) REFERENCES PERSON (PERSON_ID));

ALTER TABLE PERSON_LOCATION
	ADD (CONSTRAINT FK_PERSLOC_PERSLOCTYP FOREIGN KEY (PERSON_LOCATION_TYPE) REFERENCES VAL_PERSON_LOCATION_TYPE (PERSON_LOCATION_TYPE));

ALTER TABLE PERSON_LOCATION
	ADD (CONSTRAINT FK_PERSLOC_PHYSADDRID FOREIGN KEY (PHYSICAL_ADDRESS_ID) REFERENCES PHYSICAL_ADDRESS (PHYSICAL_ADDRESS_ID));

ALTER TABLE PERSON_LOCATION
	ADD (CONSTRAINT FK_PERSLOC_SITE_CODE FOREIGN KEY (SITE_CODE) REFERENCES SITE (SITE_CODE));

ALTER TABLE PERSON_NOTE
	ADD (CONSTRAINT FK_PERSON_NOTE_PERSON_ID FOREIGN KEY (PERSON_ID) REFERENCES PERSON (PERSON_ID));

ALTER TABLE PERSON_PARKING_PASS
	ADD (CONSTRAINT FK_PERSON_PARKING_PASS_PERSONI FOREIGN KEY (PERSON_ID) REFERENCES PERSON (PERSON_ID));

ALTER TABLE PERSON_VEHICLE
	ADD (CONSTRAINT FK_PERSON_VEHICLE_PRSNID FOREIGN KEY (PERSON_ID) REFERENCES PERSON (PERSON_ID));

ALTER TABLE PHYSICAL_ADDRESS
	ADD (CONSTRAINT FK_PHYSADDR_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE PHYSICAL_ADDRESS
	ADD (CONSTRAINT FK_PHYSADDR_ISO_CC FOREIGN KEY (ISO_COUNTRY_CODE) REFERENCES VAL_COUNTRY_CODE (ISO_COUNTRY_CODE));

ALTER TABLE PHYSICAL_ADDRESS
	ADD (CONSTRAINT FK_PHYSADDR_TYPE_VAL FOREIGN KEY (PHYSICAL_ADDRESS_TYPE) REFERENCES VAL_PHYSICAL_ADDRESS_TYPE (PHYSICAL_ADDRESS_TYPE));

ALTER TABLE PHYSICAL_CONNECTION
	ADD (CONSTRAINT FK_PHYSCONN_PHYSPORT1_ID FOREIGN KEY (PHYSICAL_PORT1_ID) REFERENCES SLOT (SLOT_ID));

ALTER TABLE PHYSICAL_CONNECTION
	ADD (CONSTRAINT FK_PHYSCONN_PHYSPORT2_ID FOREIGN KEY (PHYSICAL_PORT2_ID) REFERENCES SLOT (SLOT_ID));

ALTER TABLE PHYSICAL_CONNECTION
	ADD (CONSTRAINT FK_PHYSCONN_SLOT1_ID FOREIGN KEY (SLOT1_ID) REFERENCES SLOT (SLOT_ID));

ALTER TABLE PHYSICAL_CONNECTION
	ADD (CONSTRAINT FK_PHYSCONN_SLOT2_ID FOREIGN KEY (SLOT2_ID) REFERENCES SLOT (SLOT_ID));

ALTER TABLE PHYSICAL_CONNECTION
	ADD (CONSTRAINT FK_PHYSICAL_CONN_V_CABLE_TYPE FOREIGN KEY (CABLE_TYPE) REFERENCES VAL_CABLE_TYPE (CABLE_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE PHYSICALISH_VOLUME
	ADD (CONSTRAINT FK_PHYSICALISH_VOL_PVTYPE FOREIGN KEY (PHYSICALISH_VOLUME_TYPE) REFERENCES VAL_PHYSICALISH_VOLUME_TYPE (PHYSICALISH_VOLUME_TYPE)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE PHYSICALISH_VOLUME
	ADD (CONSTRAINT FK_PHYSVOL_COMPID FOREIGN KEY (COMPONENT_ID) REFERENCES COMPONENT (COMPONENT_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE PHYSICALISH_VOLUME
	ADD (CONSTRAINT FK_PHYSVOL_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE (DEVICE_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE PHYSICALISH_VOLUME
	ADD (CONSTRAINT FK_PHYSVOL_LVID FOREIGN KEY (LOGICAL_VOLUME_ID) REFERENCES LOGICAL_VOLUME (LOGICAL_VOLUME_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROP_L2_NETCOLLID FOREIGN KEY (LAYER2_NETWORK_COLLECTION_ID) REFERENCES LAYER2_NETWORK_COLLECTION (LAYER2_NETWORK_COLLECTION_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROP_L3_NETCOLL_ID FOREIGN KEY (LAYER3_NETWORK_COLLECTION_ID) REFERENCES LAYER3_NETWORK_COLLECTION (LAYER3_NETWORK_COLLECTION_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_ACCTID FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_ACCT_COL FOREIGN KEY (ACCOUNT_COLLECTION_ID) REFERENCES ACCOUNT_COLLECTION (ACCOUNT_COLLECTION_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_COMPID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY (COMPANY_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_DEVCOLID FOREIGN KEY (DEVICE_COLLECTION_ID) REFERENCES DEVICE_COLLECTION (DEVICE_COLLECTION_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_DNSDOMID FOREIGN KEY (DNS_DOMAIN_ID) REFERENCES DNS_DOMAIN (DNS_DOMAIN_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_NMTYP FOREIGN KEY (PROPERTY_NAME, PROPERTY_TYPE) REFERENCES VAL_PROPERTY (PROPERTY_NAME, PROPERTY_TYPE));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_OSID FOREIGN KEY (OPERATING_SYSTEM_ID) REFERENCES OPERATING_SYSTEM (OPERATING_SYSTEM_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_PVAL_ACCT_COLID FOREIGN KEY (PROPERTY_VALUE_ACCOUNT_COLL_ID) REFERENCES ACCOUNT_COLLECTION (ACCOUNT_COLLECTION_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_PVAL_COMPID FOREIGN KEY (PROPERTY_VALUE_COMPANY_ID) REFERENCES COMPANY (COMPANY_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_PVAL_PWDTYP FOREIGN KEY (PROPERTY_VALUE_PASSWORD_TYPE) REFERENCES VAL_PASSWORD_TYPE (PASSWORD_TYPE));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_PVAL_SWPKGID FOREIGN KEY (PROPERTY_VALUE_SW_PACKAGE_ID) REFERENCES SW_PACKAGE (SW_PACKAGE_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_PVAL_TOKCOLID FOREIGN KEY (PROPERTY_VALUE_TOKEN_COL_ID) REFERENCES TOKEN_COLLECTION (TOKEN_COLLECTION_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_SITE_CODE FOREIGN KEY (SITE_CODE) REFERENCES SITE (SITE_CODE));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_ACCTREALMID FOREIGN KEY (ACCOUNT_REALM_ID) REFERENCES ACCOUNT_REALM (ACCOUNT_REALM_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_DNS_DOM_COLLECT FOREIGN KEY (DNS_DOMAIN_COLLECTION_ID) REFERENCES DNS_DOMAIN_COLLECTION (DNS_DOMAIN_COLLECTION_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_NBLK_COLL_ID FOREIGN KEY (NETBLOCK_COLLECTION_ID) REFERENCES NETBLOCK_COLLECTION (NETBLOCK_COLLECTION_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_PERSON_ID FOREIGN KEY (PERSON_ID) REFERENCES PERSON (PERSON_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_PROP_COLL_ID FOREIGN KEY (PROPERTY_COLLECTION_ID) REFERENCES PROPERTY_COLLECTION (PROPERTY_COLLECTION_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_PV_NBLKCOL_ID FOREIGN KEY (PROPERTY_VALUE_NBLK_COLL_ID) REFERENCES NETBLOCK_COLLECTION (NETBLOCK_COLLECTION_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROPERTY_VAL_PRSNID FOREIGN KEY (PROPERTY_VALUE_PERSON_ID) REFERENCES PERSON (PERSON_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROP_COMPCOLL_ID FOREIGN KEY (COMPANY_COLLECTION_ID) REFERENCES COMPANY_COLLECTION (COMPANY_COLLECTION_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROP_OS_SNAPSHOT FOREIGN KEY (OPERATING_SYSTEM_SNAPSHOT_ID) REFERENCES OPERATING_SYSTEM_SNAPSHOT (OPERATING_SYSTEM_SNAPSHOT_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROP_PV_DEVCOLID FOREIGN KEY (PROPERTY_VALUE_DEVICE_COLL_ID) REFERENCES DEVICE_COLLECTION (DEVICE_COLLECTION_ID));

ALTER TABLE PROPERTY
	ADD (CONSTRAINT FK_PROP_SVC_ENV_COLL_ID FOREIGN KEY (SERVICE_ENV_COLLECTION_ID) REFERENCES SERVICE_ENVIRONMENT_COLLECTION (SERVICE_ENV_COLLECTION_ID));

ALTER TABLE PROPERTY_COLLECTION
	ADD (CONSTRAINT FK_PROPCOL_PROPCOLTYPE FOREIGN KEY (PROPERTY_COLLECTION_TYPE) REFERENCES VAL_PROPERTY_COLLECTION_TYPE (PROPERTY_COLLECTION_TYPE));

ALTER TABLE PROPERTY_COLLECTION_HIER
	ADD (CONSTRAINT FK_PROPCOLLHIER_PROPCOLID FOREIGN KEY (PROPERTY_COLLECTION_ID) REFERENCES PROPERTY_COLLECTION (PROPERTY_COLLECTION_ID));

ALTER TABLE PROPERTY_COLLECTION_HIER
	ADD (CONSTRAINT FK_PROPCOLLHIER_CHLDPROPCOLL_I FOREIGN KEY (CHILD_PROPERTY_COLLECTION_ID) REFERENCES PROPERTY_COLLECTION (PROPERTY_COLLECTION_ID));

ALTER TABLE PROPERTY_COLLECTION_PROPERTY
	ADD (CONSTRAINT FK_PROP_COL_PROPNAMTYP FOREIGN KEY (PROPERTY_NAME, PROPERTY_TYPE) REFERENCES VAL_PROPERTY (PROPERTY_NAME, PROPERTY_TYPE));

ALTER TABLE PROPERTY_COLLECTION_PROPERTY
	ADD (CONSTRAINT FK_PROP_COLL_PROP_PROP_COLL_ID FOREIGN KEY (PROPERTY_COLLECTION_ID) REFERENCES PROPERTY_COLLECTION (PROPERTY_COLLECTION_ID));

ALTER TABLE PSEUDO_KLOGIN
	ADD (CONSTRAINT FK_PKLGN_ACCT_DSTID FOREIGN KEY (DEST_ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE RACK
	ADD (CONSTRAINT FK_SITE_RACK FOREIGN KEY (SITE_CODE) REFERENCES SITE (SITE_CODE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE RACK
	ADD (CONSTRAINT FK_RACK_V_RACK_TYPE FOREIGN KEY (RACK_TYPE) REFERENCES VAL_RACK_TYPE (RACK_TYPE));

ALTER TABLE RACK_LOCATION
	ADD (CONSTRAINT FK_RK_LOCATION__RACK_ID FOREIGN KEY (RACK_ID) REFERENCES RACK (RACK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SERVICE_ENVIRONMENT
	ADD (CONSTRAINT FK_VAL_SVCENV_PRODSTATE FOREIGN KEY (PRODUCTION_STATE) REFERENCES VAL_PRODUCTION_STATE (PRODUCTION_STATE));

ALTER TABLE SERVICE_ENVIRONMENT_COLL_HIER
	ADD (CONSTRAINT FK_SVCENV_COLL_CHILD_SVCCOLLID FOREIGN KEY (CHILD_SERVICE_ENV_COLL_ID) REFERENCES SERVICE_ENVIRONMENT_COLLECTION (SERVICE_ENV_COLLECTION_ID));

ALTER TABLE SERVICE_ENVIRONMENT_COLL_HIER
	ADD (CONSTRAINT FK_SVC_ENV_HIER_SVC_ENV_COLL_I FOREIGN KEY (SERVICE_ENV_COLLECTION_ID) REFERENCES SERVICE_ENVIRONMENT_COLLECTION (SERVICE_ENV_COLLECTION_ID));

ALTER TABLE SERVICE_ENVIRONMENT_COLLECTION
	ADD (CONSTRAINT FK_SVC_ENV_COL_V_SVC_ENV_TYPE FOREIGN KEY (SERVICE_ENV_COLLECTION_TYPE) REFERENCES VAL_SERVICE_ENV_COLL_TYPE (SERVICE_ENV_COLLECTION_TYPE));

ALTER TABLE SITE
	ADD (CONSTRAINT FK_SITE_COLO_COMPANY_ID FOREIGN KEY (COLO_COMPANY_ID) REFERENCES COMPANY (COMPANY_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE SITE
	ADD (CONSTRAINT FK_SITE_PHYSADDR_ID FOREIGN KEY (PHYSICAL_ADDRESS_ID) REFERENCES PHYSICAL_ADDRESS (PHYSICAL_ADDRESS_ID));

ALTER TABLE SITE_NETBLOCK
	ADD (CONSTRAINT FK_SITE_NETBLOCK_REF_NETBLOCK FOREIGN KEY (NETBLOCK_ID) REFERENCES NETBLOCK (NETBLOCK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SITE_NETBLOCK
	ADD (CONSTRAINT FK_SITE_NETBLOCK_REF_SITE FOREIGN KEY (SITE_CODE) REFERENCES SITE (SITE_CODE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SLOT
	ADD (CONSTRAINT FK_SLOT_CMP_TYP_TMP_ID FOREIGN KEY (COMPONENT_TYPE_SLOT_TMPLT_ID) REFERENCES COMPONENT_TYPE_SLOT_TMPLT (COMPONENT_TYPE_SLOT_TMPLT_ID));

ALTER TABLE SLOT
	ADD (CONSTRAINT FK_SLOT_COMPONENT_ID FOREIGN KEY (COMPONENT_ID) REFERENCES COMPONENT (COMPONENT_ID));

ALTER TABLE SLOT
	ADD (CONSTRAINT FK_SLOT_SLOT_TYPE_ID FOREIGN KEY (SLOT_TYPE_ID) REFERENCES SLOT_TYPE (SLOT_TYPE_ID));

ALTER TABLE SLOT_TYPE
	ADD (CONSTRAINT FK_SLOT_TYPE_PHYSINT_FUNC FOREIGN KEY (SLOT_PHYSICAL_INTERFACE_TYPE, SLOT_FUNCTION) REFERENCES VAL_SLOT_PHYSICAL_INTERFACE (SLOT_PHYSICAL_INTERFACE_TYPE, SLOT_FUNCTION));

ALTER TABLE SLOT_TYPE
	ADD (CONSTRAINT FK_SLOT_TYPE_SLT_FUNC FOREIGN KEY (SLOT_FUNCTION) REFERENCES VAL_SLOT_FUNCTION (SLOT_FUNCTION));

ALTER TABLE SLOT_TYPE_PRMT_COMP_SLOT_TYPE
	ADD (CONSTRAINT FK_STPCST_CMP_SLT_TYP_ID FOREIGN KEY (SLOT_TYPE_ID) REFERENCES SLOT_TYPE (SLOT_TYPE_ID));

ALTER TABLE SLOT_TYPE_PRMT_COMP_SLOT_TYPE
	ADD (CONSTRAINT FK_STPCST_SLOT_TYPE_ID FOREIGN KEY (COMPONENT_SLOT_TYPE_ID) REFERENCES SLOT_TYPE (SLOT_TYPE_ID));

ALTER TABLE SLOT_TYPE_PRMT_REM_SLOT_TYPE
	ADD (CONSTRAINT FK_STPRST_REMOTE_SLOT_TYPE_ID FOREIGN KEY (REMOTE_SLOT_TYPE_ID) REFERENCES SLOT_TYPE (SLOT_TYPE_ID));

ALTER TABLE SLOT_TYPE_PRMT_REM_SLOT_TYPE
	ADD (CONSTRAINT FK_STPRST_SLOT_TYPE_ID FOREIGN KEY (SLOT_TYPE_ID) REFERENCES SLOT_TYPE (SLOT_TYPE_ID));

ALTER TABLE SNMP_COMMSTR
	ADD (CONSTRAINT FK_SNMPSTR_DEVICE_ID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE (DEVICE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SNMP_COMMSTR
	ADD (CONSTRAINT FK_SNMPSTR_SNMPSTRTYP_ID FOREIGN KEY (SNMP_COMMSTR_TYPE) REFERENCES VAL_SNMP_COMMSTR_TYPE (SNMP_COMMSTR_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SSH_KEY
	ADD (CONSTRAINT FK_SSH_KEY_ENC_KEY_ID FOREIGN KEY (ENCRYPTION_KEY_ID) REFERENCES ENCRYPTION_KEY (ENCRYPTION_KEY_ID));

ALTER TABLE SSH_KEY
	ADD (CONSTRAINT FK_SSH_KEY_SSH_KEY_TYPE FOREIGN KEY (SSH_KEY_TYPE) REFERENCES VAL_SSH_KEY_TYPE (SSH_KEY_TYPE));

ALTER TABLE STATIC_ROUTE
	ADD (CONSTRAINT FK_STATRT_DEVSRC_ID FOREIGN KEY (DEVICE_SRC_ID) REFERENCES DEVICE (DEVICE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE STATIC_ROUTE
	ADD (CONSTRAINT FK_STATRT_NBLK_ID FOREIGN KEY (NETBLOCK_ID) REFERENCES NETBLOCK (NETBLOCK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE STATIC_ROUTE
	ADD (CONSTRAINT FK_STATRT_NETINTDST_ID FOREIGN KEY (NETWORK_INTERFACE_DST_ID) REFERENCES NETWORK_INTERFACE (NETWORK_INTERFACE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE STATIC_ROUTE_TEMPLATE
	ADD (CONSTRAINT FK_NETBLOCK_ST_RT_SRC_NET FOREIGN KEY (NETBLOCK_SRC_ID) REFERENCES NETBLOCK (NETBLOCK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE STATIC_ROUTE_TEMPLATE
	ADD (CONSTRAINT FK_STATIC_RT_NET_INTERFACE FOREIGN KEY (NETWORK_INTERFACE_DST_ID) REFERENCES NETWORK_INTERFACE (NETWORK_INTERFACE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE STATIC_ROUTE_TEMPLATE
	ADD (CONSTRAINT FK_NETBLOCK_ST_RT_DST_NET FOREIGN KEY (NETBLOCK_ID) REFERENCES NETBLOCK (NETBLOCK_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SUDO_ACCT_COL_DEVICE_COLLECTIO
	ADD (CONSTRAINT FK_SUDOACCOLL_FK_SUDO_U_ACTCL FOREIGN KEY (ACCOUNT_COLLECTION_ID) REFERENCES ACCOUNT_COLLECTION (ACCOUNT_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SUDO_ACCT_COL_DEVICE_COLLECTIO
	ADD (CONSTRAINT FK_ACCTCOL_REF_SUDOACCLDCL_RA FOREIGN KEY (RUN_AS_ACCOUNT_COLLECTION_ID) REFERENCES ACCOUNT_COLLECTION (ACCOUNT_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SUDO_ACCT_COL_DEVICE_COLLECTIO
	ADD (CONSTRAINT FK_SUDO_UCL_FK_DEV_CO_DEVICE_C FOREIGN KEY (DEVICE_COLLECTION_ID) REFERENCES DEVICE_COLLECTION (DEVICE_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SUDO_ACCT_COL_DEVICE_COLLECTIO
	ADD (CONSTRAINT FK_SUDO_ACL_FK_SUDO_U_SUDO_ALI FOREIGN KEY (SUDO_ALIAS_NAME) REFERENCES SUDO_ALIAS (SUDO_ALIAS_NAME)  DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SVC_ENVIRONMENT_COLL_SVC_ENV
	ADD (CONSTRAINT FK_SVC_ENV_COL_SVC_ENV FOREIGN KEY (SERVICE_ENVIRONMENT_ID) REFERENCES SERVICE_ENVIRONMENT (SERVICE_ENVIRONMENT_ID));

ALTER TABLE SVC_ENVIRONMENT_COLL_SVC_ENV
	ADD (CONSTRAINT FK_SVC_ENV_COLL_SVC_COLL_ID FOREIGN KEY (SERVICE_ENV_COLLECTION_ID) REFERENCES SERVICE_ENVIRONMENT_COLLECTION (SERVICE_ENV_COLLECTION_ID));

ALTER TABLE SW_PACKAGE
	ADD (CONSTRAINT FK_SWPKG_REF_VSWPKGTYPE FOREIGN KEY (SW_PACKAGE_TYPE) REFERENCES VAL_SW_PACKAGE_TYPE (SW_PACKAGE_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SW_PACKAGE_RELATION
	ADD (CONSTRAINT FK_SW_PKG_REL_REF_VPKGRELTYPE FOREIGN KEY (PACKAGE_RELATION_TYPE) REFERENCES VAL_PACKAGE_RELATION_TYPE (PACKAGE_RELATION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SW_PACKAGE_RELATION
	ADD (CONSTRAINT FK_SW_PKGREL_REF_SW_PKG FOREIGN KEY (RELATED_SW_PACKAGE_ID) REFERENCES SW_PACKAGE (SW_PACKAGE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SW_PACKAGE_RELATION
	ADD (CONSTRAINT FK_SWPKGRLTN_REF_SWPKGREL FOREIGN KEY (SW_PACKAGE_RELEASE_ID) REFERENCES SW_PACKAGE_RELEASE (SW_PACKAGE_RELEASE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SW_PACKAGE_RELEASE
	ADD (CONSTRAINT FK_SW_PACKAGE_TYPE FOREIGN KEY (SW_PACKAGE_TYPE) REFERENCES VAL_SW_PACKAGE_TYPE (SW_PACKAGE_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SW_PACKAGE_RELEASE
	ADD (CONSTRAINT FK_SW_PKG_REL_REF_SW_PKG_REP FOREIGN KEY (SW_PACKAGE_REPOSITORY_ID) REFERENCES SW_PACKAGE_REPOSITORY (SW_PACKAGE_REPOSITORY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SW_PACKAGE_RELEASE
	ADD (CONSTRAINT FK_SW_PKG_REL_REF_SYS_USER FOREIGN KEY (CREATION_ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SW_PACKAGE_RELEASE
	ADD (CONSTRAINT FK_SW_PKG_REL_REF_VDEVARCH FOREIGN KEY (PROCESSOR_ARCHITECTURE) REFERENCES VAL_PROCESSOR_ARCHITECTURE (PROCESSOR_ARCHITECTURE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SW_PACKAGE_RELEASE
	ADD (CONSTRAINT FK_SW_PKG_REL_REF_VSVCENV FOREIGN KEY (SERVICE_ENVIRONMENT_ID) REFERENCES SERVICE_ENVIRONMENT (SERVICE_ENVIRONMENT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SW_PACKAGE_RELEASE
	ADD (CONSTRAINT FK_SW_PKG_REL_REF_VSWPKGFMT FOREIGN KEY (SW_PACKAGE_FORMAT) REFERENCES VAL_SW_PACKAGE_FORMAT (SW_PACKAGE_FORMAT)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE SW_PACKAGE_RELEASE
	ADD (CONSTRAINT FK_SW_PKG_REF_SW_PKG_REL FOREIGN KEY (SW_PACKAGE_ID) REFERENCES SW_PACKAGE (SW_PACKAGE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE TOKEN
	ADD (CONSTRAINT FK_TOKEN_ENC_ID_ID FOREIGN KEY (ENCRYPTION_KEY_ID) REFERENCES ENCRYPTION_KEY (ENCRYPTION_KEY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE TOKEN
	ADD (CONSTRAINT FK_TOKEN_REF_V_TOKEN_STATUS FOREIGN KEY (TOKEN_STATUS) REFERENCES VAL_TOKEN_STATUS (TOKEN_STATUS)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE TOKEN
	ADD (CONSTRAINT FK_TOKEN_REF_V_TOKEN_TYPE FOREIGN KEY (TOKEN_TYPE) REFERENCES VAL_TOKEN_TYPE (TOKEN_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE TOKEN_COLLECTION
	ADD (CONSTRAINT FK_TOK_COL_MEM_TOKEN_COL_TYPE FOREIGN KEY (TOKEN_COLLECTION_TYPE) REFERENCES VAL_TOKEN_COLLECTION_TYPE (TOKEN_COLLECTION_TYPE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE TOKEN_COLLECTION_HIER
	ADD (CONSTRAINT FK_TOK_COL_HIER_CH_TOK_COLID FOREIGN KEY (TOKEN_COLLECTION_ID) REFERENCES TOKEN_COLLECTION (TOKEN_COLLECTION_ID));

ALTER TABLE TOKEN_COLLECTION_HIER
	ADD (CONSTRAINT FK_TOK_COL_HIER_TOK_COLID FOREIGN KEY (CHILD_TOKEN_COLLECTION_ID) REFERENCES TOKEN_COLLECTION (TOKEN_COLLECTION_ID));

ALTER TABLE TOKEN_COLLECTION_TOKEN
	ADD (CONSTRAINT FK_TOK_COL_TOK_TOKEN_COL_ID FOREIGN KEY (TOKEN_COLLECTION_ID) REFERENCES TOKEN_COLLECTION (TOKEN_COLLECTION_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE TOKEN_COLLECTION_TOKEN
	ADD (CONSTRAINT FK_TOK_COL_TOK_TOKEN_ID FOREIGN KEY (TOKEN_ID) REFERENCES TOKEN (TOKEN_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE TOKEN_SEQUENCE
	ADD (CONSTRAINT FK_TOKEN_SEQ_REF_TOKEN FOREIGN KEY (TOKEN_ID) REFERENCES TOKEN (TOKEN_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE UNIX_GROUP
	ADD (CONSTRAINT FK_UNXGRP_UCLSID FOREIGN KEY (ACCOUNT_COLLECTION_ID) REFERENCES ACCOUNT_COLLECTION (ACCOUNT_COLLECTION_ID));

ALTER TABLE VAL_APP_KEY
	ADD (CONSTRAINT FK_VAL_APP_KEY_GROUP_NAME FOREIGN KEY (APPAAL_GROUP_NAME) REFERENCES VAL_APPAAL_GROUP_NAME (APPAAL_GROUP_NAME));

ALTER TABLE VAL_APP_KEY_VALUES
	ADD (CONSTRAINT FK_VAPPKEYVAL_REF_VAPPKEY FOREIGN KEY (APPAAL_GROUP_NAME, APP_KEY) REFERENCES VAL_APP_KEY (APPAAL_GROUP_NAME, APP_KEY)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE VAL_COMPANY_TYPE
	ADD (CONSTRAINT FK_V_COMPTYP_COMPTYPPURP FOREIGN KEY (COMPANY_TYPE_PURPOSE) REFERENCES VAL_COMPANY_TYPE_PURPOSE (COMPANY_TYPE_PURPOSE));

ALTER TABLE VAL_COMPONENT_PROPERTY
	ADD (CONSTRAINT FK_VCOMP_PROP_RQD_SLT_FUNC FOREIGN KEY (REQUIRED_SLOT_FUNCTION) REFERENCES VAL_SLOT_FUNCTION (SLOT_FUNCTION));

ALTER TABLE VAL_COMPONENT_PROPERTY
	ADD (CONSTRAINT FK_COMP_PROP_COMP_PROP_TYPE FOREIGN KEY (COMPONENT_PROPERTY_TYPE) REFERENCES VAL_COMPONENT_PROPERTY_TYPE (COMPONENT_PROPERTY_TYPE));

ALTER TABLE VAL_COMPONENT_PROPERTY
	ADD (CONSTRAINT FK_CMOP_PROP_RQD_CMPFUNC FOREIGN KEY (REQUIRED_COMPONENT_FUNCTION) REFERENCES VAL_COMPONENT_FUNCTION (COMPONENT_FUNCTION));

ALTER TABLE VAL_COMPONENT_PROPERTY
	ADD (CONSTRAINT FK_COMP_PROP_RQD_CMPTYPID FOREIGN KEY (REQUIRED_COMPONENT_TYPE_ID) REFERENCES COMPONENT_TYPE (COMPONENT_TYPE_ID)  DEFERRABLE);

ALTER TABLE VAL_COMPONENT_PROPERTY
	ADD (CONSTRAINT FK_VCOMP_PROP_RQD_SLTTYP_ID FOREIGN KEY (REQUIRED_SLOT_TYPE_ID) REFERENCES SLOT_TYPE (SLOT_TYPE_ID));

ALTER TABLE VAL_COMPONENT_PROPERTY_VALUE
	ADD (CONSTRAINT FK_COMP_PROP_VAL_NAMETYP FOREIGN KEY (COMPONENT_PROPERTY_NAME, COMPONENT_PROPERTY_TYPE) REFERENCES VAL_COMPONENT_PROPERTY (COMPONENT_PROPERTY_NAME, COMPONENT_PROPERTY_TYPE));

ALTER TABLE VAL_ENCAPSULATION_MODE
	ADD (CONSTRAINT FK_VAL_ENCAP_MODE_TYPE FOREIGN KEY (ENCAPSULATION_TYPE) REFERENCES VAL_ENCAPSULATION_TYPE (ENCAPSULATION_TYPE));

ALTER TABLE VAL_LOGICAL_VOLUME_PROPERTY
	ADD (CONSTRAINT FK_VAL_LVOL_PROP_FSTYPE FOREIGN KEY (FILESYSTEM_TYPE) REFERENCES VAL_FILESYSTEM_TYPE (FILESYSTEM_TYPE));

ALTER TABLE VAL_PERSON_COMPANY_ATTR_NAME
	ADD (CONSTRAINT FK_PRESCOMPATTR_NAME_DATATYP FOREIGN KEY (PERSON_COMPANY_ATTR_DATA_TYPE) REFERENCES VAL_PERSON_COMPANY_ATTR_DTYPE (PERSON_COMPANY_ATTR_DATA_TYPE));

ALTER TABLE VAL_PERSON_COMPANY_ATTR_VALUE
	ADD (CONSTRAINT FK_PERS_COMP_ATTR_VAL_NAME FOREIGN KEY (PERSON_COMPANY_ATTR_NAME) REFERENCES VAL_PERSON_COMPANY_ATTR_NAME (PERSON_COMPANY_ATTR_NAME));

ALTER TABLE VAL_PERSON_CONTACT_TECHNOLOGY
	ADD (CONSTRAINT FK_VAL_PERS_CTCT_TECH_TYPE FOREIGN KEY (PERSON_CONTACT_TYPE) REFERENCES VAL_PERSON_CONTACT_TYPE (PERSON_CONTACT_TYPE));

ALTER TABLE VAL_PROPERTY
	ADD (CONSTRAINT FK_VALPROP_PV_ACTYP_RST FOREIGN KEY (PROP_VAL_ACCT_COLL_TYPE_RSTRCT) REFERENCES VAL_ACCOUNT_COLLECTION_TYPE (ACCOUNT_COLLECTION_TYPE));

ALTER TABLE VAL_PROPERTY
	ADD (CONSTRAINT FK_VAL_PROP_NBLK_COLL_TYPE FOREIGN KEY (PROP_VAL_NBLK_COLL_TYPE_RSTRCT) REFERENCES VAL_NETBLOCK_COLLECTION_TYPE (NETBLOCK_COLLECTION_TYPE));

ALTER TABLE VAL_PROPERTY
	ADD (CONSTRAINT FK_PROP_VAL_DEVCOL_TYP_RSTR_DC FOREIGN KEY (PROP_VAL_DEV_COLL_TYPE_RSTRCT) REFERENCES VAL_DEVICE_COLLECTION_TYPE (DEVICE_COLLECTION_TYPE));

ALTER TABLE VAL_PROPERTY
	ADD (CONSTRAINT FK_VAL_PROP_ACCT_COLL_TYPE FOREIGN KEY (ACCOUNT_COLLECTION_TYPE) REFERENCES VAL_ACCOUNT_COLLECTION_TYPE (ACCOUNT_COLLECTION_TYPE));

ALTER TABLE VAL_PROPERTY
	ADD (CONSTRAINT FK_VAL_PROP_COMP_COLL_TYPE FOREIGN KEY (COMPANY_COLLECTION_TYPE) REFERENCES VAL_COMPANY_COLLECTION_TYPE (COMPANY_COLLECTION_TYPE));

ALTER TABLE VAL_PROPERTY
	ADD (CONSTRAINT FK_PROP_VAL_DEVCOLL_ID FOREIGN KEY (DEVICE_COLLECTION_TYPE) REFERENCES VAL_DEVICE_COLLECTION_TYPE (DEVICE_COLLECTION_TYPE));

ALTER TABLE VAL_PROPERTY
	ADD (CONSTRAINT FK_VAL_PROPERTY_DNSDOMCOLLTYPE FOREIGN KEY (DNS_DOMAIN_COLLECTION_TYPE) REFERENCES VAL_DNS_DOMAIN_COLLECTION_TYPE (DNS_DOMAIN_COLLECTION_TYPE));

ALTER TABLE VAL_PROPERTY
	ADD (CONSTRAINT FK_VAL_PROPERTY_NETBLKCOLLTYPE FOREIGN KEY (NETBLOCK_COLLECTION_TYPE) REFERENCES VAL_NETBLOCK_COLLECTION_TYPE (NETBLOCK_COLLECTION_TYPE));

ALTER TABLE VAL_PROPERTY
	ADD (CONSTRAINT FK_VLA_PROPERTY_VAL_PROPCOLLTY FOREIGN KEY (PROPERTY_COLLECTION_TYPE) REFERENCES VAL_PROPERTY_COLLECTION_TYPE (PROPERTY_COLLECTION_TYPE));

ALTER TABLE VAL_PROPERTY
	ADD (CONSTRAINT FK_PROP_SVCEMVCOLL_TYPE FOREIGN KEY (SERVICE_ENV_COLLECTION_TYPE) REFERENCES VAL_SERVICE_ENV_COLL_TYPE (SERVICE_ENV_COLLECTION_TYPE));

ALTER TABLE VAL_PROPERTY
	ADD (CONSTRAINT FK_VAL_PROP_L3NETWOK_TYPE FOREIGN KEY (LAYER3_NETWORK_COLLECTION_TYPE) REFERENCES VAL_LAYER3_NETWORK_COLL_TYPE (LAYER3_NETWORK_COLLECTION_TYPE));

ALTER TABLE VAL_PROPERTY
	ADD (CONSTRAINT FK_VAL_PROP_L2NETYPE FOREIGN KEY (LAYER2_NETWORK_COLLECTION_TYPE) REFERENCES VAL_LAYER2_NETWORK_COLL_TYPE (LAYER2_NETWORK_COLLECTION_TYPE));

ALTER TABLE VAL_PROPERTY
	ADD (CONSTRAINT FK_VALPROP_PROPDTTYP FOREIGN KEY (PROPERTY_DATA_TYPE) REFERENCES VAL_PROPERTY_DATA_TYPE (PROPERTY_DATA_TYPE)  NOT DEFERRABLE);

ALTER TABLE VAL_PROPERTY
	ADD (CONSTRAINT FK_VALPROP_PROPTYP FOREIGN KEY (PROPERTY_TYPE) REFERENCES VAL_PROPERTY_TYPE (PROPERTY_TYPE)  NOT DEFERRABLE);

ALTER TABLE VAL_PROPERTY_TYPE
	ADD (CONSTRAINT FK_PROP_TYP_PV_UCTYP_RST FOREIGN KEY (PROP_VAL_ACCT_COLL_TYPE_RSTRCT) REFERENCES VAL_ACCOUNT_COLLECTION_TYPE (ACCOUNT_COLLECTION_TYPE));

ALTER TABLE VAL_PROPERTY_VALUE
	ADD (CONSTRAINT FK_VALPROVAL_NAMTYP FOREIGN KEY (PROPERTY_NAME, PROPERTY_TYPE) REFERENCES VAL_PROPERTY (PROPERTY_NAME, PROPERTY_TYPE));

ALTER TABLE VAL_SLOT_PHYSICAL_INTERFACE
	ADD (CONSTRAINT FK_SLOT_PHYS_INT_SLOT_FUNC FOREIGN KEY (SLOT_FUNCTION) REFERENCES VAL_SLOT_FUNCTION (SLOT_FUNCTION));

ALTER TABLE VOE
	ADD (CONSTRAINT FK_VOE_REF_VVOESTATE FOREIGN KEY (VOE_STATE) REFERENCES VAL_VOE_STATE (VOE_STATE)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE VOE
	ADD (CONSTRAINT FK_VOE_REF_V_SVCENV FOREIGN KEY (SERVICE_ENVIRONMENT_ID) REFERENCES SERVICE_ENVIRONMENT (SERVICE_ENVIRONMENT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE VOE_RELATION
	ADD (CONSTRAINT FK_VOE_REF_VOE_REL_VOE FOREIGN KEY (VOE_ID) REFERENCES VOE (VOE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE VOE_RELATION
	ADD (CONSTRAINT FK_VOE_RLTN_REF_VUPGSEV FOREIGN KEY (UPGRADE_SEVERITY) REFERENCES VAL_UPGRADE_SEVERITY (UPGRADE_SEVERITY)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE VOE_RELATION
	ADD (CONSTRAINT FK_VOE_REF_VOE_REL_RLTDVOE FOREIGN KEY (RELATED_VOE_ID) REFERENCES VOE (VOE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE VOE_SW_PACKAGE
	ADD (CONSTRAINT FK_VOE_SWPKG_REF_VOE FOREIGN KEY (VOE_ID) REFERENCES VOE (VOE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE VOE_SW_PACKAGE
	ADD (CONSTRAINT FK_VOE_SWPKG_REF_SWPKG_REL FOREIGN KEY (SW_PACKAGE_RELEASE_ID) REFERENCES SW_PACKAGE_RELEASE (SW_PACKAGE_RELEASE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE VOE_SYMBOLIC_TRACK
	ADD (CONSTRAINT FK_VSYMBTRK_REF_VVSYMBTRNM FOREIGN KEY (SYMBOLIC_TRACK_NAME) REFERENCES VAL_SYMBOLIC_TRACK_NAME (SYMBOLIC_TRACK_NAME)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE VOE_SYMBOLIC_TRACK
	ADD (CONSTRAINT FK_VOESYMBTRK_REF_VUPGSEV FOREIGN KEY (UPGRADE_SEVERITY_THRESHOLD) REFERENCES VAL_UPGRADE_SEVERITY (UPGRADE_SEVERITY)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE VOE_SYMBOLIC_TRACK
	ADD (CONSTRAINT FK_VOESYMBTRK_REF_SWPKGRPOS FOREIGN KEY (SW_PACKAGE_REPOSITORY_ID) REFERENCES SW_PACKAGE_REPOSITORY (SW_PACKAGE_REPOSITORY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE VOE_SYMBOLIC_TRACK
	ADD (CONSTRAINT FK_VOE_SYMBTRK_REF_PENDVOE FOREIGN KEY (PENDING_VOE_ID) REFERENCES VOE (VOE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE VOE_SYMBOLIC_TRACK
	ADD (CONSTRAINT FK_VOE_SYMBTRK_REF_ACTVVOE FOREIGN KEY (ACTIVE_VOE_ID) REFERENCES VOE (VOE_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE VOLUME_GROUP
	ADD (CONSTRAINT FK_VOL_GROUP_COMPON_ID FOREIGN KEY (COMPONENT_ID) REFERENCES COMPONENT (COMPONENT_ID));

ALTER TABLE VOLUME_GROUP
	ADD (CONSTRAINT FK_VOLGRP_DEVID FOREIGN KEY (DEVICE_ID) REFERENCES DEVICE (DEVICE_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE VOLUME_GROUP
	ADD (CONSTRAINT FK_VOLGRP_RD_TYPE FOREIGN KEY (RAID_TYPE) REFERENCES VAL_RAID_TYPE (RAID_TYPE)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE VOLUME_GROUP
	ADD (CONSTRAINT FK_VOLGRP_VOLGRP_TYPE FOREIGN KEY (VOLUME_GROUP_TYPE) REFERENCES VAL_VOLUME_GROUP_TYPE (VOLUME_GROUP_TYPE)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE VOLUME_GROUP_PHYSICALISH_VOL
	ADD (CONSTRAINT FK_PHYSVOL_VG_PHSVOL_DVID FOREIGN KEY (PHYSICALISH_VOLUME_ID, DEVICE_ID) REFERENCES PHYSICALISH_VOLUME (PHYSICALISH_VOLUME_ID, DEVICE_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE VOLUME_GROUP_PHYSICALISH_VOL
	ADD (CONSTRAINT FK_VGP_PHY_PHYID FOREIGN KEY (PHYSICALISH_VOLUME_ID) REFERENCES PHYSICALISH_VOLUME (PHYSICALISH_VOLUME_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE VOLUME_GROUP_PHYSICALISH_VOL
	ADD (CONSTRAINT FK_VGP_PHY_VGRPID FOREIGN KEY (VOLUME_GROUP_ID) REFERENCES VOLUME_GROUP (VOLUME_GROUP_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE VOLUME_GROUP_PHYSICALISH_VOL
	ADD (CONSTRAINT FK_VGP_PHY_VGRPID_DEVID FOREIGN KEY (VOLUME_GROUP_ID, DEVICE_ID) REFERENCES VOLUME_GROUP (VOLUME_GROUP_ID, DEVICE_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE VOLUME_GROUP_PHYSICALISH_VOL
	ADD (CONSTRAINT FK_VG_PHYSVOL_VGREL FOREIGN KEY (VOLUME_GROUP_RELATION) REFERENCES VAL_VOLUME_GROUP_RELATION (VOLUME_GROUP_RELATION)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE VOLUME_GROUP_PURPOSE
	ADD (CONSTRAINT FK_VAL_VOLGRP_PURP_VGID FOREIGN KEY (VOLUME_GROUP_ID) REFERENCES VOLUME_GROUP (VOLUME_GROUP_ID)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE VOLUME_GROUP_PURPOSE
	ADD (CONSTRAINT FK_VAL_VOLGRP_PURP_VGPURP FOREIGN KEY (VOLUME_GROUP_PURPOSE) REFERENCES VAL_VOLUME_GROUP_PURPOSE (VOLUME_GROUP_PURPOSE)  DEFERRABLE  INITIALLY IMMEDIATE);

ALTER TABLE X509_CERTIFICATE
	ADD (CONSTRAINT FK_X509_CERT_CERT FOREIGN KEY (SIGNING_CERT_ID) REFERENCES X509_CERTIFICATE (X509_CERT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE X509_CERTIFICATE
	ADD (CONSTRAINT FK_X509CERT_ENC_ID_ID FOREIGN KEY (ENCRYPTION_KEY_ID) REFERENCES ENCRYPTION_KEY (ENCRYPTION_KEY_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE X509_CERTIFICATE
	ADD (CONSTRAINT FK_X509_CERT_REVOC_REASON FOREIGN KEY (X509_REVOCATION_REASON) REFERENCES VAL_X509_REVOCATION_REASON (X509_REVOCATION_REASON));

ALTER TABLE X509_KEY_USAGE_ATTRIBUTE
	ADD (CONSTRAINT FK_X509_KEY_USG_CATEGORIZATION FOREIGN KEY (X509_KEY_USG_CAT, X509_KEY_USG) REFERENCES X509_KEY_USAGE_CATEGORIZATION (X509_KEY_USG_CAT, X509_KEY_USG)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE X509_KEY_USAGE_ATTRIBUTE
	ADD (CONSTRAINT FK_X509_CERTIFICATE FOREIGN KEY (X509_CERT_ID) REFERENCES X509_CERTIFICATE (X509_CERT_ID)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE X509_KEY_USAGE_CATEGORIZATION
	ADD (CONSTRAINT FK_KEY_USAGE_CATEGORY FOREIGN KEY (X509_KEY_USG_CAT) REFERENCES VAL_X509_KEY_USAGE_CATEGORY (X509_KEY_USG_CAT)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);

ALTER TABLE X509_KEY_USAGE_CATEGORIZATION
	ADD (CONSTRAINT FK_X509_KEY_USAGE FOREIGN KEY (X509_KEY_USG) REFERENCES VAL_X509_KEY_USAGE (X509_KEY_USG)  NOT DEFERRABLE  INITIALLY IMMEDIATE  ENABLE  VALIDATE);
